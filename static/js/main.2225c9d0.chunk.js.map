{"version":3,"sources":["src/utils/swap.ts","src/store/wallet.js","src/utils/tokens.ts","src/utils/web3.ts","src/utils/safe-math.ts","src/utils/layouts.ts","src/App.js","src/Favorite.js","src/Swap.js","src/index.js","src/constants.js","src/utils/pools.ts","src/utils/ids.ts","src/store/index.js","src/utils/liquidity.ts"],"names":["getSwapOutAmount","poolInfo","fromCoinMint","toCoinMint","amount","slippage","coin","pc","fees","swapFeeNumerator","swapFeeDenominator","TOKENS","WSOL","mintAddress","NATIVE_SOL","fromAmount","TokenAmount","decimals","fromAmountWithFee","wei","multipliedBy","dividedBy","denominator","balance","plus","amountOut","amountOutWithSlippage","outBalance","minus","beforePrice","parseFloat","fixed","afterPrice","priceImpact","Math","abs","amountIn","swap","connection","wallet","fromTokenAccount","toTokenAccount","aIn","aOut","wsolAddress","a","transaction","Transaction","signers","owner","publicKey","from","getTokenByMintAddress","to","Error","add","closeAccount","source","PublicKey","destination","toMint","fromMint","wrappedSolAccount","wrappedSolAccount2","newFromTokenAccount","default","newToTokenAccount","createTokenAccountIfNotExist","getBigNumber","createAssociatedTokenAccountIfNotExist","swapInstruction","programId","ammId","ammAuthority","ammOpenOrders","ammTargetOrders","poolCoinTokenAccount","poolPcTokenAccount","serumProgramId","serumMarket","serumBids","serumAsks","serumEventQueue","serumCoinVaultAccount","serumPcVaultAccount","serumVaultSigner","floor","toWei","sendTransaction","userSourceTokenAccount","userDestTokenAccount","userOwner","minAmountOut","dataLayout","struct","u8","nu64","keys","pubkey","TOKEN_PROGRAM_ID","isSigner","isWritable","data","Buffer","alloc","span","encode","instruction","TransactionInstruction","addFees","liquidityPools","publicKeys","LIQUIDITY_POOLS","forEach","pool","lp","push","cloneDeep","getMultipleAccounts","commitment","info","address","toBase58","account","getAddressForWhat","key","lpMintAddress","version","parsed","AMM_INFO_LAYOUT","decode","AMM_INFO_LAYOUT_V3","AMM_INFO_LAYOUT_STABLE","currentK","AMM_INFO_LAYOUT_V4","status","poolOpenTime","needTakePnlCoin","needTakePnlPc","MINT_LAYOUT","totalSupply","supply","WalletUpdate","useWallet","useConnection","dispatch","useContext","ContextStore","useEffect","doFetchInfo","type","payload","doUpdateWallet","tokenAccounts","auxiliaryTokenAccounts","getBalance","lamportsBalance","getParsedTokenAccountsByOwner","then","parsedTokenAccounts","value","tokenAccountInfo","tokenAccountPubkey","tokenAccountAddress","parsedInfo","mint","tokenAmount","findAssociatedTokenAddress","equals","TokenMap","uiAmount","solBalance","LAMPORTS_PER_SOL","connected","id","setInterval","clearInterval","token","Object","values","find","item","TOKENS_TAGS","raydium","mustShow","show","outName","userAdd","solana","unofficial","symbol","name","tags","referrer","BTC","ETH","USDT","WUSDT","USDC","WUSDC","YFI","LINK","XRP","SUSHI","ALEPH","SXP","HGET","CREAM","UNI","SRM","FTT","MSRM","TOMO","KARMA","LUA","MATH","KEEP","SWAG","FIDA","KIN","MAPS","OXY","RAY","xCOPE","COPE","STEP","MEDIA","details","docs","website","whitepaper","socials","Twitter","Telegram","Medium","ROPE","MER","TULIP","SNY","detailLink","SLRS","WOO","BOP","SAMO","renBTC","renDOGE","LIKE","Discord","DXL","mSOL","PAI","PORT","MNGO","CRP","ATLAS","Twitch","Youtube","POLIS","GRAPE","GENE","DFL","CHEEMS","stSOL","LARIX","RIN","APEX","MNDE","LIQ","WAG","wLDO","SLIM","PRT","SBR","FAB","ABR","IVN","CYS","FRKT","AURY","SYP","WOOF","ORCA","SLND","weWETH","weUNI","weSUSHI","GOFX","IN","weDYDX","STARS","weAXS","weSHIB","OXS","CWAR","UPS","weSAND","weMANA","CAVE","JSOL","APT","SONAR","SHILL","TTT","BOKU","MIMO","wbWBNB","wePEOPLE","XTAG","KKO","VI","SOLC","STR","SPWN","ISOLA","RUN","REAL","CRWNY","BLOCK","SOLAR","BASIS","SOLX","CHICKS","GST","MBS","PRISM","MEAN","TINY","SHDW","SCY","SLC","LP_TOKENS","BLACK_LIST","blockBlackList","tokens","filter","includes","notUseSolanaPicMint","flushTokenIcon","itemToken","picUrl","addTokensSolanaFunc","picToken","logoURI","window","localStorage","addSolanaCoin","split","itemMint","localMintStr","user_add_coin_mint","localMintList","length","removeItem","index","parseInt","addUserLocalCoinMint","fetch","response","json","catch","myJson","spl","userSelectSourceList","userSelectSource","itemSource","updateTokenTagsChange","findProgramAddress","seeds","nonce","walletAddress","tokenMintAddress","toBuffer","ASSOCIATED_TOKEN_PROGRAM_ID","lamports","signer","createProgramAccountIfNotExist","ACCOUNT_LAYOUT","initializeAccount","atas","Token","getAssociatedTokenAddress","ata","createAssociatedTokenAccountInstruction","createAtaSolIfNotExistAndWrap","getMinBalanceRentForExemptAccount","rent","SystemProgram","transfer","fromPubkey","toPubkey","wsol","createTransferInstruction","createCloseAccountInstruction","layout","newAccount","Account","getMinimumBalanceForRentExemption","newAccountPubkey","space","createAccount","tempKeys","k","accounts","resArray","Promise","all","map","getMultipleAccountsInfo","res","sort","b","itemIndex","idx","skipPreflight","preflightCommitment","txid","mergeTransactions","transactions","t","undefined","isWei","_decimals","this","BigNumber","exponentiatedBy","vaule","toFormat","isInteger","toFixed","isNaN","isZero","u64","u32","bool","num","toString","App","bg","maxW","m","p","color","format","Favorite","props","onClick","useState","list","setList","JSON","parse","getItem","setItem","stringify","getSymbol","findIndex","v","Swap","fromToken","setFromToken","toToken","setToToken","setFromAmount","toAmount","setToAmount","setSlippage","setPool","isLoading","setIsLoading","toast","useToast","action","getPoolByTokenMintAddresses","console","log","poolWithFees","f","isEmpty","doSwap","useCallback","String","tx","position","render","href","isExternalk","style","margin","align","flex","htmlFor","onChange","event","target","TokenList","defaultValue","precision","_","valueAsNumber","w","h","transform","disabled","AppContent","ConnectionWrap","network","WalletAdapterNetwork","Mainnet","endpoint","useMemo","clusterApiUrl","wallets","PhantomWalletAdapter","LedgerWalletAdapter","SolletWalletAdapter","SolletExtensionWalletAdapter","autoConnect","display","justifyContent","children","ReactDOM","StrictMode","document","getElementById","TokenListProvider","resolve","filterByClusterSlug","getList","reduce","acc","curr","coinMintAddress","pcMintAddress","entries","LIQUIDITY_POOL_PROGRAM_ID_V2","ammQuantities","poolWithdrawQueue","poolTempLpTokenAccount","SERUM_PROGRAM_ID_V2","official","LIQUIDITY_POOL_PROGRAM_ID_V3","SERUM_PROGRAM_ID_V3","LIQUIDITY_POOL_PROGRAM_ID_V4","SYSTEM_PROGRAM_ID","MEMO_PROGRAM_ID","RENT_PROGRAM_ID","ROUTE_SWAP_PROGRAM_ID","createContext","initStore","reducer","state","assign","WrapContext","useReducer","Provider","u128"],"mappings":"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","file":"static/js/main.2225c9d0.chunk.js","sourcesContent":["/* eslint-disable */\n\nimport {\n  _OPEN_ORDERS_LAYOUT_V2,\n  Market,\n  OpenOrders,\n} from '@project-serum/serum/lib/market';\nimport { closeAccount } from '@project-serum/serum/lib/token-instructions';\nimport {\n  Account,\n  Connection,\n  LAMPORTS_PER_SOL,\n  PublicKey,\n  Transaction,\n  TransactionInstruction,\n} from '@solana/web3.js';\n// @ts-ignore\nimport { nu64, struct, u8 } from 'buffer-layout';\n\nimport { RouterInfoItem } from 'src/types/api';\n// eslint-disable-next-line\nimport { TokenAmount } from 'src/utils/safe-math';\nimport {\n  createAssociatedTokenAccountIfNotExist,\n  createAtaSolIfNotExistAndWrap,\n  createProgramAccountIfNotExist,\n  createTokenAccountIfNotExist,\n  findProgramAddress,\n  mergeTransactions,\n  sendTransaction,\n} from 'src/utils/web3';\nimport {\n  LIQUIDITY_POOL_PROGRAM_ID_V4,\n  MEMO_PROGRAM_ID,\n  ROUTE_SWAP_PROGRAM_ID,\n  SERUM_PROGRAM_ID_V3,\n  SYSTEM_PROGRAM_ID,\n  TOKEN_PROGRAM_ID,\n} from './ids';\nimport { getBigNumber } from './layouts';\nimport { LiquidityPoolInfo } from './pools';\n// eslint-disable-next-line\nimport { getTokenByMintAddress, NATIVE_SOL, TOKENS } from './tokens';\n\nexport function getOutAmount(\n  market: any,\n  asks: any,\n  bids: any,\n  fromCoinMint: string,\n  toCoinMint: string,\n  amount: string,\n  slippage: number,\n) {\n  const fromAmount = parseFloat(amount);\n\n  let fromMint = fromCoinMint;\n  let toMint = toCoinMint;\n\n  if (fromMint === NATIVE_SOL.mintAddress) {\n    fromMint = TOKENS.WSOL.mintAddress;\n  }\n  if (toMint === NATIVE_SOL.mintAddress) {\n    toMint = TOKENS.WSOL.mintAddress;\n  }\n\n  if (\n    fromMint === market.quoteMintAddress.toBase58() &&\n    toMint === market.baseMintAddress.toBase58()\n  ) {\n    // buy\n    return forecastBuy(market, asks, fromAmount, slippage);\n  } else {\n    return forecastSell(market, bids, fromAmount, slippage);\n  }\n}\n\nexport function getSwapOutAmount(\n  poolInfo: any,\n  fromCoinMint: string,\n  toCoinMint: string,\n  amount: string,\n  slippage: number,\n) {\n  const { coin, pc, fees } = poolInfo;\n  const { swapFeeNumerator, swapFeeDenominator } = fees;\n\n  if (fromCoinMint === TOKENS.WSOL.mintAddress)\n    fromCoinMint = NATIVE_SOL.mintAddress;\n  if (toCoinMint === TOKENS.WSOL.mintAddress)\n    toCoinMint = NATIVE_SOL.mintAddress;\n\n  if (fromCoinMint === coin.mintAddress && toCoinMint === pc.mintAddress) {\n    // coin2pc\n    const fromAmount = new TokenAmount(amount, coin.decimals, false);\n    const fromAmountWithFee = fromAmount.wei\n      .multipliedBy(swapFeeDenominator - swapFeeNumerator)\n      .dividedBy(swapFeeDenominator);\n\n    const denominator = coin.balance.wei.plus(fromAmountWithFee);\n    const amountOut = pc.balance.wei\n      .multipliedBy(fromAmountWithFee)\n      .dividedBy(denominator);\n    const amountOutWithSlippage = amountOut.dividedBy(1 + slippage / 100);\n\n    const outBalance = pc.balance.wei.minus(amountOut);\n    const beforePrice = new TokenAmount(\n      parseFloat(new TokenAmount(pc.balance.wei, pc.decimals).fixed()) /\n        parseFloat(new TokenAmount(coin.balance.wei, coin.decimals).fixed()),\n      pc.decimals,\n      false,\n    );\n    const afterPrice = new TokenAmount(\n      parseFloat(new TokenAmount(outBalance, pc.decimals).fixed()) /\n        parseFloat(new TokenAmount(denominator, coin.decimals).fixed()),\n      pc.decimals,\n      false,\n    );\n    const priceImpact =\n      Math.abs(\n        (parseFloat(beforePrice.fixed()) - parseFloat(afterPrice.fixed())) /\n          parseFloat(beforePrice.fixed()),\n      ) * 100;\n\n    return {\n      amountIn: fromAmount,\n      amountOut: new TokenAmount(amountOut, pc.decimals),\n      amountOutWithSlippage: new TokenAmount(\n        amountOutWithSlippage,\n        pc.decimals,\n      ),\n      priceImpact,\n    };\n  } else {\n    // pc2coin\n    const fromAmount = new TokenAmount(amount, pc.decimals, false);\n    const fromAmountWithFee = fromAmount.wei\n      .multipliedBy(swapFeeDenominator - swapFeeNumerator)\n      .dividedBy(swapFeeDenominator);\n\n    const denominator = pc.balance.wei.plus(fromAmountWithFee);\n    const amountOut = coin.balance.wei\n      .multipliedBy(fromAmountWithFee)\n      .dividedBy(denominator);\n    const amountOutWithSlippage = amountOut.dividedBy(1 + slippage / 100);\n\n    const outBalance = coin.balance.wei.minus(amountOut);\n\n    const beforePrice = new TokenAmount(\n      parseFloat(new TokenAmount(pc.balance.wei, pc.decimals).fixed()) /\n        parseFloat(new TokenAmount(coin.balance.wei, coin.decimals).fixed()),\n      pc.decimals,\n      false,\n    );\n    const afterPrice = new TokenAmount(\n      parseFloat(new TokenAmount(denominator, pc.decimals).fixed()) /\n        parseFloat(new TokenAmount(outBalance, coin.decimals).fixed()),\n      pc.decimals,\n      false,\n    );\n    const priceImpact =\n      Math.abs(\n        (parseFloat(afterPrice.fixed()) - parseFloat(beforePrice.fixed())) /\n          parseFloat(beforePrice.fixed()),\n      ) * 100;\n\n    return {\n      amountIn: fromAmount,\n      amountOut: new TokenAmount(amountOut, coin.decimals),\n      amountOutWithSlippage: new TokenAmount(\n        amountOutWithSlippage,\n        coin.decimals,\n      ),\n      priceImpact,\n    };\n  }\n}\n\nexport function getSwapInAmount(\n  poolInfo: any,\n  fromCoinMint: string,\n  toCoinMint: string,\n  amount: string,\n  slippage: number,\n) {\n  const { coin, pc, fees } = poolInfo;\n  const { swapFeeNumerator, swapFeeDenominator } = fees;\n\n  const amountOut = parseFloat(amount);\n\n  let amountIn = 0;\n  let amountInWithFee = 0;\n  let afterPrice = 0;\n  const y = parseFloat(coin.balance.fixed());\n  const x = parseFloat(pc.balance.fixed());\n  const beforePrice = x / y;\n\n  // (x+delta_x)*(y+delta_y)=x*y\n  if (fromCoinMint === coin.mintAddress && toCoinMint === pc.mintAddress) {\n    // coin2pc\n    amountIn = (amountOut * y) / (x - amountOut);\n    amountInWithFee = amountIn * (1 + swapFeeNumerator / swapFeeDenominator);\n    afterPrice = (y + amountInWithFee) / (x - amountOut);\n  } else {\n    // pc2coin\n    amountIn = (x * amountOut) / (y - amountOut);\n    amountInWithFee = amountIn * (1 + swapFeeNumerator / swapFeeDenominator);\n    afterPrice = (y - amountInWithFee) / (x + amountOut);\n  }\n\n  const amountInWithSlippage = amountInWithFee / (1 + slippage / 100);\n  const priceImpact = Math.abs(\n    ((beforePrice - afterPrice) / beforePrice) * 100,\n  );\n\n  return {\n    amountIn: new TokenAmount(amountIn * 10 ** 6, 6),\n    amountOut: new TokenAmount(amountOut * 10 ** 6, 6),\n    amountOutWithSlippage: new TokenAmount(\n      amountInWithSlippage * 10 ** pc.decimals,\n      pc.decimals,\n    ),\n    priceImpact,\n  };\n}\n\nexport function getSwapOutAmountStable(\n  poolInfo: any,\n  fromCoinMint: string,\n  toCoinMint: string,\n  amount: string,\n  slippage: number,\n) {\n  const { coin, pc, fees, currentK } = poolInfo;\n  const { swapFeeNumerator, swapFeeDenominator } = fees;\n\n  const systemDecimal = Math.max(coin.decimals, pc.decimals);\n  const k = currentK / (10 ** systemDecimal * 10 ** systemDecimal);\n\n  const amountIn =\n    parseFloat(amount) * (1 - swapFeeNumerator / swapFeeDenominator);\n\n  let amountOut = 1;\n  const y = parseFloat(coin.balance.fixed());\n  const ammX = k / y;\n\n  // (x+delta_x)*(y+delta_y)=x*y\n  if (fromCoinMint === coin.mintAddress && toCoinMint === pc.mintAddress) {\n    // coin2pc\n    amountOut = ammX - k / (y + amountIn);\n  } else {\n    // pc2coin\n    amountOut = y - k / (ammX + amountIn);\n  }\n  const beforePrice = Math.sqrt(((10 - 1) * y * y) / (10 * y * y - k));\n\n  const amountOutWithSlippage = amountOut / (1 + slippage / 100);\n\n  const afterY = y - amountOut;\n  const afterPrice = Math.sqrt(\n    ((10 - 1) * afterY * afterY) / (10 * afterY * afterY - k),\n  );\n\n  const priceImpact = ((beforePrice - afterPrice) / beforePrice) * 100;\n\n  return {\n    amountIn: new TokenAmount(amountIn * 10 ** 6, 6),\n    amountOut: new TokenAmount(amountOut * 10 ** 6, 6),\n    amountOutWithSlippage: new TokenAmount(\n      amountOutWithSlippage * 10 ** pc.decimals,\n      pc.decimals,\n    ),\n    priceImpact,\n  };\n}\n\nexport function getSwapRouter(\n  poolInfos: LiquidityPoolInfo[],\n  fromCoinMint: string,\n  toCoinMint: string,\n) {\n  const routerCoinDefault = ['USDC', 'RAY', 'SOL', 'WSOL', 'mSOL', 'PAI'];\n  const ret: [LiquidityPoolInfo, LiquidityPoolInfo][] = [];\n  const avaPools: LiquidityPoolInfo[] = [];\n  for (const p of poolInfos) {\n    if (!(p.version === 4 && p.status === 1)) continue;\n    if (\n      [fromCoinMint, toCoinMint].includes(p.coin.mintAddress) &&\n      routerCoinDefault.includes(p.pc.symbol)\n    ) {\n      avaPools.push(p);\n    } else if (\n      [fromCoinMint, toCoinMint].includes(p.pc.mintAddress) &&\n      routerCoinDefault.includes(p.coin.symbol)\n    ) {\n      avaPools.push(p);\n    }\n  }\n\n  for (const p1 of avaPools) {\n    if (p1.coin.mintAddress === fromCoinMint) {\n      const poolInfo = avaPools.filter(\n        (p2: any) =>\n          p1.ammId !== p2.ammId &&\n          ((p2.pc.mintAddress === p1.pc.mintAddress &&\n            p2.coin.mintAddress === toCoinMint) ||\n            (p2.coin.mintAddress === p1.pc.mintAddress &&\n              p2.pc.mintAddress === toCoinMint)),\n      );\n      for (const aP of poolInfo) {\n        ret.push([p1, aP]);\n      }\n    } else if (p1.pc.mintAddress === fromCoinMint) {\n      const poolInfo = avaPools.filter(\n        (p2: any) =>\n          p1.ammId !== p2.ammId &&\n          ((p2.pc.mintAddress === p1.coin.mintAddress &&\n            p2.coin.mintAddress === toCoinMint) ||\n            (p2.coin.mintAddress === p1.coin.mintAddress &&\n              p2.pc.mintAddress === toCoinMint)),\n      );\n      for (const aP of poolInfo) {\n        ret.push([p1, aP]);\n      }\n    }\n  }\n  return ret;\n}\n\nexport function forecastBuy(\n  market: any,\n  orderBook: any,\n  pcIn: any,\n  slippage: number,\n) {\n  let coinOut = 0;\n  let bestPrice = null;\n  let worstPrice = 0;\n  let availablePc = pcIn;\n\n  for (const { key, quantity } of orderBook.items(false)) {\n    const price = market?.priceLotsToNumber(key.ushrn(64)) || 0;\n    const size = market?.baseSizeLotsToNumber(quantity) || 0;\n\n    if (!bestPrice && price !== 0) {\n      bestPrice = price;\n    }\n\n    const orderPcVaule = price * size;\n    worstPrice = price;\n\n    if (orderPcVaule >= availablePc) {\n      coinOut += availablePc / price;\n      availablePc = 0;\n      break;\n    } else {\n      coinOut += size;\n      availablePc -= orderPcVaule;\n    }\n  }\n\n  coinOut = coinOut * 0.993;\n\n  const priceImpact = ((worstPrice - bestPrice) / bestPrice) * 100;\n\n  worstPrice = (worstPrice * (100 + slippage)) / 100;\n  const amountOutWithSlippage = (coinOut * (100 - slippage)) / 100;\n\n  // const avgPrice = (pcIn - availablePc) / coinOut;\n  const maxInAllow = pcIn - availablePc;\n\n  return {\n    side: 'buy' as 'buy' | 'sell',\n    maxInAllow,\n    amountOut: coinOut,\n    amountOutWithSlippage,\n    worstPrice,\n    priceImpact,\n  };\n}\n\nexport function forecastSell(\n  market: any,\n  orderBook: any,\n  coinIn: any,\n  slippage: number,\n) {\n  let pcOut = 0;\n  let bestPrice = null;\n  let worstPrice = 0;\n  let availableCoin = coinIn;\n\n  for (const { key, quantity } of orderBook.items(true)) {\n    const price = market.priceLotsToNumber(key.ushrn(64)) || 0;\n    const size = market?.baseSizeLotsToNumber(quantity) || 0;\n\n    if (!bestPrice && price !== 0) {\n      bestPrice = price;\n    }\n\n    worstPrice = price;\n\n    if (availableCoin <= size) {\n      pcOut += availableCoin * price;\n      availableCoin = 0;\n      break;\n    } else {\n      pcOut += price * size;\n      availableCoin -= size;\n    }\n  }\n\n  pcOut = pcOut * 0.993;\n\n  const priceImpact = ((bestPrice - worstPrice) / bestPrice) * 100;\n\n  worstPrice = (worstPrice * (100 - slippage)) / 100;\n  const amountOutWithSlippage = (pcOut * (100 - slippage)) / 100;\n\n  // const avgPrice = pcOut / (coinIn - availableCoin);\n  const maxInAllow = coinIn - availableCoin;\n\n  return {\n    side: 'sell' as 'buy' | 'sell',\n    maxInAllow,\n    amountOut: pcOut,\n    amountOutWithSlippage,\n    worstPrice,\n    priceImpact,\n  };\n}\n\nexport async function swap(\n  connection: Connection,\n  wallet: any,\n  poolInfo: any,\n  fromCoinMint: string,\n  toCoinMint: string,\n  fromTokenAccount: string,\n  toTokenAccount: string,\n  aIn: string,\n  aOut: string,\n  wsolAddress: string,\n) {\n  const transaction = new Transaction();\n  const signers: Account[] = [];\n\n  const owner = wallet.publicKey;\n\n  const from = getTokenByMintAddress(fromCoinMint);\n  const to = getTokenByMintAddress(toCoinMint);\n  if (!from || !to) {\n    throw new Error('Miss token info');\n  }\n\n  const amountIn = new TokenAmount(aIn, from.decimals, false);\n  const amountOut = new TokenAmount(aOut, to.decimals, false);\n\n  if (fromCoinMint === NATIVE_SOL.mintAddress && wsolAddress) {\n    transaction.add(\n      closeAccount({\n        source: new PublicKey(wsolAddress),\n        destination: owner,\n        owner,\n      }),\n    );\n  }\n\n  let fromMint = fromCoinMint;\n  let toMint = toCoinMint;\n\n  if (fromMint === NATIVE_SOL.mintAddress) {\n    fromMint = TOKENS.WSOL.mintAddress;\n  }\n  if (toMint === NATIVE_SOL.mintAddress) {\n    toMint = TOKENS.WSOL.mintAddress;\n  }\n\n  let wrappedSolAccount: PublicKey | null = null;\n  let wrappedSolAccount2: PublicKey | null = null;\n  let newFromTokenAccount = PublicKey.default;\n  let newToTokenAccount = PublicKey.default;\n\n  if (fromCoinMint === NATIVE_SOL.mintAddress) {\n    wrappedSolAccount = await createTokenAccountIfNotExist(\n      connection,\n      wrappedSolAccount,\n      owner,\n      TOKENS.WSOL.mintAddress,\n      getBigNumber(amountIn.wei) + 1e7,\n      transaction,\n      signers,\n    );\n  } else {\n    newFromTokenAccount = await createAssociatedTokenAccountIfNotExist(\n      fromTokenAccount,\n      owner,\n      fromMint,\n      transaction,\n    );\n  }\n\n  if (toCoinMint === NATIVE_SOL.mintAddress) {\n    wrappedSolAccount2 = await createTokenAccountIfNotExist(\n      connection,\n      wrappedSolAccount2,\n      owner,\n      TOKENS.WSOL.mintAddress,\n      1e7,\n      transaction,\n      signers,\n    );\n  } else {\n    newToTokenAccount = await createAssociatedTokenAccountIfNotExist(\n      toTokenAccount,\n      owner,\n      toMint,\n      transaction,\n    );\n  }\n\n  transaction.add(\n    swapInstruction(\n      new PublicKey(poolInfo.programId),\n      new PublicKey(poolInfo.ammId),\n      new PublicKey(poolInfo.ammAuthority),\n      new PublicKey(poolInfo.ammOpenOrders),\n      new PublicKey(poolInfo.ammTargetOrders),\n      new PublicKey(poolInfo.poolCoinTokenAccount),\n      new PublicKey(poolInfo.poolPcTokenAccount),\n      new PublicKey(poolInfo.serumProgramId),\n      new PublicKey(poolInfo.serumMarket),\n      new PublicKey(poolInfo.serumBids),\n      new PublicKey(poolInfo.serumAsks),\n      new PublicKey(poolInfo.serumEventQueue),\n      new PublicKey(poolInfo.serumCoinVaultAccount),\n      new PublicKey(poolInfo.serumPcVaultAccount),\n      new PublicKey(poolInfo.serumVaultSigner),\n      wrappedSolAccount ?? newFromTokenAccount,\n      wrappedSolAccount2 ?? newToTokenAccount,\n      owner,\n      Math.floor(getBigNumber(amountIn.toWei())),\n      Math.floor(getBigNumber(amountOut.toWei())),\n    ),\n  );\n\n  if (wrappedSolAccount) {\n    transaction.add(\n      closeAccount({\n        source: wrappedSolAccount,\n        destination: owner,\n        owner,\n      }),\n    );\n  }\n  if (wrappedSolAccount2) {\n    transaction.add(\n      closeAccount({\n        source: wrappedSolAccount2,\n        destination: owner,\n        owner,\n      }),\n    );\n  }\n\n  return await sendTransaction(connection, wallet, transaction, signers);\n}\n\nexport async function preSwapRoute(\n  connection: Connection,\n  wallet: any,\n  fromMint: string,\n  fromTokenAccount: string,\n  middleMint: string,\n  middleTokenAccount: string,\n  toMint: string,\n  toTokenAccount: string,\n  needWrapAmount: number,\n) {\n  const transaction = new Transaction();\n  const signers: Account[] = [];\n  const owner = wallet.publicKey;\n  console.log('needWrapAmount:', needWrapAmount);\n  if (\n    fromMint === TOKENS.WSOL.mintAddress ||\n    fromMint === NATIVE_SOL.mintAddress\n  ) {\n    await createAtaSolIfNotExistAndWrap(\n      connection,\n      fromTokenAccount,\n      owner,\n      transaction,\n      signers,\n      needWrapAmount,\n    );\n  }\n  if (middleMint === NATIVE_SOL.mintAddress)\n    middleMint = TOKENS.WSOL.mintAddress;\n  if (toMint === NATIVE_SOL.mintAddress) toMint = TOKENS.WSOL.mintAddress;\n\n  await createAssociatedTokenAccountIfNotExist(\n    middleTokenAccount,\n    owner,\n    middleMint,\n    transaction,\n  );\n\n  await createAssociatedTokenAccountIfNotExist(\n    toTokenAccount,\n    owner,\n    toMint,\n    transaction,\n  );\n\n  return await sendTransaction(connection, wallet, transaction, signers);\n}\n\nexport async function swapRoute(\n  connection: Connection,\n  wallet: any,\n  poolInfoA: any,\n  poolInfoB: any,\n  routerInfo: RouterInfoItem,\n  fromTokenAccount: string,\n  middleTokenAccount: string,\n  toTokenAccount: string,\n  aIn: string,\n  aOut: string,\n) {\n  const transaction = new Transaction();\n\n  const owner = wallet.publicKey;\n\n  const fromCoinMint = routerInfo.route[0].mintA;\n  const toCoinMint = routerInfo.route[1].mintB;\n\n  const from = getTokenByMintAddress(fromCoinMint);\n  const middle = getTokenByMintAddress(routerInfo.middle_coin);\n  const to = getTokenByMintAddress(toCoinMint);\n  if (!from || !middle || !to) {\n    throw new Error('Miss token info');\n  }\n\n  const amountIn = new TokenAmount(aIn, from.decimals, false);\n  const amountOut = new TokenAmount(aOut, to.decimals, false);\n\n  let fromMint = fromCoinMint;\n  let toMint = toCoinMint;\n  let middleMint = routerInfo.middle_coin;\n\n  if (fromMint === NATIVE_SOL.mintAddress) fromMint = TOKENS.WSOL.mintAddress;\n  if (middleMint === NATIVE_SOL.mintAddress)\n    middleMint = TOKENS.WSOL.mintAddress;\n  if (toMint === NATIVE_SOL.mintAddress) toMint = TOKENS.WSOL.mintAddress;\n\n  const newFromTokenAccount = new PublicKey(fromTokenAccount);\n  const newMiddleTokenAccount = new PublicKey(middleTokenAccount);\n  const newToTokenAccount = new PublicKey(toTokenAccount);\n\n  const { publicKey } = await findProgramAddress(\n    [\n      new PublicKey(poolInfoA.ammId).toBuffer(),\n      new PublicKey(middleMint).toBuffer(),\n      owner.toBuffer(),\n    ],\n    new PublicKey(ROUTE_SWAP_PROGRAM_ID),\n  );\n\n  transaction.add(\n    routeSwapInInstruction(\n      new PublicKey(ROUTE_SWAP_PROGRAM_ID),\n      new PublicKey(LIQUIDITY_POOL_PROGRAM_ID_V4),\n      new PublicKey(poolInfoA.ammId),\n      new PublicKey(poolInfoB.ammId),\n      new PublicKey(poolInfoA.ammAuthority),\n      new PublicKey(poolInfoA.ammOpenOrders),\n      new PublicKey(poolInfoA.ammTargetOrders),\n      new PublicKey(poolInfoA.poolCoinTokenAccount),\n      new PublicKey(poolInfoA.poolPcTokenAccount),\n      new PublicKey(poolInfoA.serumProgramId),\n      new PublicKey(poolInfoA.serumMarket),\n      new PublicKey(poolInfoA.serumBids),\n      new PublicKey(poolInfoA.serumAsks),\n      new PublicKey(poolInfoA.serumEventQueue),\n      new PublicKey(poolInfoA.serumCoinVaultAccount),\n      new PublicKey(poolInfoA.serumPcVaultAccount),\n      new PublicKey(poolInfoA.serumVaultSigner),\n\n      newFromTokenAccount,\n      newMiddleTokenAccount,\n      publicKey,\n      owner,\n      Math.floor(getBigNumber(amountIn.toWei())),\n    ),\n    routeSwapOutInstruction(\n      new PublicKey(ROUTE_SWAP_PROGRAM_ID),\n      new PublicKey(LIQUIDITY_POOL_PROGRAM_ID_V4),\n      new PublicKey(poolInfoA.ammId),\n      new PublicKey(poolInfoB.ammId),\n      new PublicKey(poolInfoB.ammAuthority),\n      new PublicKey(poolInfoB.ammOpenOrders),\n      new PublicKey(poolInfoB.ammTargetOrders),\n      new PublicKey(poolInfoB.poolCoinTokenAccount),\n      new PublicKey(poolInfoB.poolPcTokenAccount),\n      new PublicKey(poolInfoB.serumProgramId),\n      new PublicKey(poolInfoB.serumMarket),\n      new PublicKey(poolInfoB.serumBids),\n      new PublicKey(poolInfoB.serumAsks),\n      new PublicKey(poolInfoB.serumEventQueue),\n      new PublicKey(poolInfoB.serumCoinVaultAccount),\n      new PublicKey(poolInfoB.serumPcVaultAccount),\n      new PublicKey(poolInfoB.serumVaultSigner),\n      newMiddleTokenAccount,\n      newToTokenAccount,\n      publicKey,\n      owner,\n      Math.floor(getBigNumber(amountOut.toWei())),\n    ),\n  );\n  return await sendTransaction(connection, wallet, transaction);\n}\n\nexport async function swapRouteOld(\n  connection: Connection,\n  wallet: any,\n  poolInfoA: any,\n  poolInfoB: any,\n  routerInfo: RouterInfoItem,\n  fromTokenAccount: string,\n  middleTokenAccount: string,\n  toTokenAccount: string,\n  aIn: string,\n  aMiddle: string,\n  aOut: string,\n) {\n  const transaction = new Transaction();\n\n  const owner = wallet.publicKey;\n\n  const fromCoinMint = routerInfo.route[0].mintA;\n  const toCoinMint = routerInfo.route[1].mintB;\n\n  const from = getTokenByMintAddress(fromCoinMint);\n  const middle = getTokenByMintAddress(routerInfo.middle_coin);\n  const to = getTokenByMintAddress(toCoinMint);\n  if (!from || !middle || !to) {\n    throw new Error('Miss token info');\n  }\n\n  const amountIn = new TokenAmount(aIn, from.decimals, false);\n  const amountMiddle = new TokenAmount(aMiddle, middle.decimals, false);\n  const amountOut = new TokenAmount(aOut, to.decimals, false);\n\n  let fromMint = fromCoinMint;\n  let toMint = toCoinMint;\n  let middleMint = routerInfo.middle_coin;\n\n  if (fromMint === NATIVE_SOL.mintAddress) {\n    fromMint = TOKENS.WSOL.mintAddress;\n  }\n  if (middleMint === NATIVE_SOL.mintAddress) {\n    middleMint = TOKENS.WSOL.mintAddress;\n  }\n  if (toMint === NATIVE_SOL.mintAddress) {\n    toMint = TOKENS.WSOL.mintAddress;\n  }\n\n  let wrappedSolAccount: PublicKey | null = null;\n  let wrappedSolAccount2: PublicKey | null = null;\n  let wrappedSolAccount3: PublicKey | null = null;\n\n  if (fromCoinMint === NATIVE_SOL.mintAddress) {\n    wrappedSolAccount = await createTokenAccountIfNotExist(\n      connection,\n      wrappedSolAccount,\n      owner,\n      TOKENS.WSOL.mintAddress,\n      getBigNumber(amountIn.wei) + 1e7,\n      transaction,\n      [],\n    );\n  }\n  if (middleMint === NATIVE_SOL.mintAddress) {\n    wrappedSolAccount2 = await createTokenAccountIfNotExist(\n      connection,\n      wrappedSolAccount2,\n      owner,\n      TOKENS.WSOL.mintAddress,\n      1e7,\n      transaction,\n      [],\n    );\n  }\n\n  if (toCoinMint === NATIVE_SOL.mintAddress) {\n    wrappedSolAccount3 = await createTokenAccountIfNotExist(\n      connection,\n      wrappedSolAccount3,\n      owner,\n      TOKENS.WSOL.mintAddress,\n      1e7,\n      transaction,\n      [],\n    );\n  }\n\n  const newFromTokenAccount = await createAssociatedTokenAccountIfNotExist(\n    fromTokenAccount,\n    owner,\n    fromMint,\n    transaction,\n  );\n\n  const newMiddleTokenAccount = await createAssociatedTokenAccountIfNotExist(\n    middleTokenAccount,\n    owner,\n    middleMint,\n    transaction,\n  );\n\n  const newToTokenAccount = await createAssociatedTokenAccountIfNotExist(\n    toTokenAccount,\n    owner,\n    toMint,\n    transaction,\n  );\n\n  transaction.add(\n    swapInstruction(\n      new PublicKey(poolInfoA.programId),\n      new PublicKey(poolInfoA.ammId),\n      new PublicKey(poolInfoA.ammAuthority),\n      new PublicKey(poolInfoA.ammOpenOrders),\n      new PublicKey(poolInfoA.ammTargetOrders),\n      new PublicKey(poolInfoA.poolCoinTokenAccount),\n      new PublicKey(poolInfoA.poolPcTokenAccount),\n      new PublicKey(poolInfoA.serumProgramId),\n      new PublicKey(poolInfoA.serumMarket),\n      new PublicKey(poolInfoA.serumBids),\n      new PublicKey(poolInfoA.serumAsks),\n      new PublicKey(poolInfoA.serumEventQueue),\n      new PublicKey(poolInfoA.serumCoinVaultAccount),\n      new PublicKey(poolInfoA.serumPcVaultAccount),\n      new PublicKey(poolInfoA.serumVaultSigner),\n      wrappedSolAccount ?? newFromTokenAccount,\n      wrappedSolAccount2 ?? newMiddleTokenAccount,\n      owner,\n      Math.floor(getBigNumber(amountIn.toWei())),\n      Math.floor(getBigNumber(amountMiddle.toWei())),\n    ),\n    swapInstruction(\n      new PublicKey(poolInfoB.programId),\n      new PublicKey(poolInfoB.ammId),\n      new PublicKey(poolInfoB.ammAuthority),\n      new PublicKey(poolInfoB.ammOpenOrders),\n      new PublicKey(poolInfoB.ammTargetOrders),\n      new PublicKey(poolInfoB.poolCoinTokenAccount),\n      new PublicKey(poolInfoB.poolPcTokenAccount),\n      new PublicKey(poolInfoB.serumProgramId),\n      new PublicKey(poolInfoB.serumMarket),\n      new PublicKey(poolInfoB.serumBids),\n      new PublicKey(poolInfoB.serumAsks),\n      new PublicKey(poolInfoB.serumEventQueue),\n      new PublicKey(poolInfoB.serumCoinVaultAccount),\n      new PublicKey(poolInfoB.serumPcVaultAccount),\n      new PublicKey(poolInfoB.serumVaultSigner),\n      wrappedSolAccount2 ?? newMiddleTokenAccount,\n      wrappedSolAccount3 ?? newToTokenAccount,\n      owner,\n      Math.floor(getBigNumber(amountMiddle.toWei())),\n      Math.floor(getBigNumber(amountOut.toWei())),\n    ),\n  );\n\n  if (wrappedSolAccount) {\n    transaction.add(\n      closeAccount({\n        source: wrappedSolAccount,\n        destination: owner,\n        owner,\n      }),\n    );\n  }\n  if (wrappedSolAccount2) {\n    transaction.add(\n      closeAccount({\n        source: wrappedSolAccount2,\n        destination: owner,\n        owner,\n      }),\n    );\n  }\n\n  if (wrappedSolAccount3) {\n    transaction.add(\n      closeAccount({\n        source: wrappedSolAccount3,\n        destination: owner,\n        owner,\n      }),\n    );\n  }\n\n  return await sendTransaction(connection, wallet, transaction);\n}\n\nexport async function place(\n  connection: Connection,\n  wallet: any,\n  market: Market,\n  fromCoinMint: string,\n  toCoinMint: string,\n  fromTokenAccount: string,\n  toTokenAccount: string,\n  side: 'buy' | 'sell' | null,\n  maxInAllow: string,\n  amountOut: string,\n  worstPrice: number | null,\n) {\n  if (!side || !worstPrice) throw new Error('Miss side');\n\n  const transaction = new Transaction();\n  const signers: Account[] = [];\n\n  const owner = wallet.publicKey;\n\n  const openOrdersAccounts = await market.findOpenOrdersAccountsForOwner(\n    connection,\n    owner,\n    0,\n  );\n\n  // const useFeeDiscountPubkey: PublicKey | null\n  const openOrdersAddress: PublicKey = await createProgramAccountIfNotExist(\n    connection,\n    // @ts-ignore\n    openOrdersAccounts.length === 0\n      ? null\n      : openOrdersAccounts[0].address.toBase58(),\n    owner,\n    new PublicKey(SERUM_PROGRAM_ID_V3),\n    null,\n    _OPEN_ORDERS_LAYOUT_V2,\n    transaction,\n    signers,\n  );\n\n  let wrappedSolAccount: PublicKey | null = null;\n\n  if (fromCoinMint === NATIVE_SOL.mintAddress) {\n    let lamports;\n    if (side === 'buy') {\n      lamports = Math.round(\n        worstPrice * Number(amountOut) * 1.01 * LAMPORTS_PER_SOL,\n      );\n      if (openOrdersAccounts.length > 0) {\n        lamports -= getBigNumber(openOrdersAccounts[0].quoteTokenFree);\n      }\n    } else {\n      lamports = Math.round(Number(maxInAllow) * LAMPORTS_PER_SOL);\n      if (openOrdersAccounts.length > 0) {\n        lamports -= getBigNumber(openOrdersAccounts[0].baseTokenFree);\n      }\n    }\n    lamports = Math.max(lamports, 0) + 1e7;\n\n    wrappedSolAccount = await createTokenAccountIfNotExist(\n      connection,\n      wrappedSolAccount,\n      owner,\n      TOKENS.WSOL.mintAddress,\n      lamports,\n      transaction,\n      signers,\n    );\n  }\n\n  transaction.add(\n    market.makePlaceOrderInstruction(connection, {\n      owner,\n      payer: wrappedSolAccount ?? new PublicKey(fromTokenAccount),\n      // @ts-ignore\n      side,\n      price: worstPrice,\n      size:\n        side === 'buy'\n          ? parseFloat(Number(amountOut).toFixed(6))\n          : parseFloat(Number(maxInAllow).toFixed(6)),\n      orderType: 'ioc',\n      openOrdersAddressKey: openOrdersAddress,\n      // feeDiscountPubkey: useFeeDiscountPubkey\n    }),\n  );\n\n  if (wrappedSolAccount) {\n    transaction.add(\n      closeAccount({\n        source: wrappedSolAccount,\n        destination: owner,\n        owner,\n      }),\n    );\n  }\n\n  let fromMint = fromCoinMint;\n  let toMint = toCoinMint;\n\n  if (fromMint === NATIVE_SOL.mintAddress) {\n    fromMint = TOKENS.WSOL.mintAddress;\n  }\n  if (toMint === NATIVE_SOL.mintAddress) {\n    toMint = TOKENS.WSOL.mintAddress;\n  }\n\n  const newFromTokenAccount = await createAssociatedTokenAccountIfNotExist(\n    fromTokenAccount,\n    owner,\n    fromMint,\n    transaction,\n  );\n  const newToTokenAccount = await createAssociatedTokenAccountIfNotExist(\n    toTokenAccount,\n    owner,\n    toMint,\n    transaction,\n  );\n\n  const userAccounts = [newFromTokenAccount, newToTokenAccount];\n  if (\n    market.baseMintAddress.toBase58() === toMint &&\n    market.quoteMintAddress.toBase58() === fromMint\n  ) {\n    userAccounts.reverse();\n  }\n  const baseTokenAccount = userAccounts[0];\n  const quoteTokenAccount = userAccounts[1];\n\n  let referrerQuoteWallet: PublicKey | null = null;\n  if (market.supportsReferralFees) {\n    const quoteToken = getTokenByMintAddress(\n      market.quoteMintAddress.toBase58(),\n    );\n    if (quoteToken?.referrer) {\n      referrerQuoteWallet = new PublicKey(quoteToken?.referrer);\n    }\n  }\n\n  const settleTransactions = await market.makeSettleFundsTransaction(\n    connection,\n    new OpenOrders(\n      openOrdersAddress,\n      { owner },\n      new PublicKey(SERUM_PROGRAM_ID_V3),\n    ),\n    baseTokenAccount,\n    quoteTokenAccount,\n    referrerQuoteWallet,\n  );\n\n  return await sendTransaction(\n    connection,\n    wallet,\n    mergeTransactions([transaction, settleTransactions.transaction]),\n    [...signers, ...settleTransactions.signers],\n  );\n}\n\nexport function swapInstruction(\n  programId: PublicKey,\n  // tokenProgramId: PublicKey,\n  // amm\n  ammId: PublicKey,\n  ammAuthority: PublicKey,\n  ammOpenOrders: PublicKey,\n  ammTargetOrders: PublicKey,\n  poolCoinTokenAccount: PublicKey,\n  poolPcTokenAccount: PublicKey,\n  // serum\n  serumProgramId: PublicKey,\n  serumMarket: PublicKey,\n  serumBids: PublicKey,\n  serumAsks: PublicKey,\n  serumEventQueue: PublicKey,\n  serumCoinVaultAccount: PublicKey,\n  serumPcVaultAccount: PublicKey,\n  serumVaultSigner: PublicKey,\n  // user\n  userSourceTokenAccount: PublicKey,\n  userDestTokenAccount: PublicKey,\n  userOwner: PublicKey,\n\n  amountIn: number,\n  minAmountOut: number,\n): TransactionInstruction {\n  const dataLayout = struct([\n    u8('instruction'),\n    nu64('amountIn'),\n    nu64('minAmountOut'),\n  ]);\n\n  const keys = [\n    // spl token\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    // amm\n    { pubkey: ammId, isSigner: false, isWritable: true },\n    { pubkey: ammAuthority, isSigner: false, isWritable: false },\n    { pubkey: ammOpenOrders, isSigner: false, isWritable: true },\n    { pubkey: ammTargetOrders, isSigner: false, isWritable: true },\n    { pubkey: poolCoinTokenAccount, isSigner: false, isWritable: true },\n    { pubkey: poolPcTokenAccount, isSigner: false, isWritable: true },\n    // serum\n    { pubkey: serumProgramId, isSigner: false, isWritable: false },\n    { pubkey: serumMarket, isSigner: false, isWritable: true },\n    { pubkey: serumBids, isSigner: false, isWritable: true },\n    { pubkey: serumAsks, isSigner: false, isWritable: true },\n    { pubkey: serumEventQueue, isSigner: false, isWritable: true },\n    { pubkey: serumCoinVaultAccount, isSigner: false, isWritable: true },\n    { pubkey: serumPcVaultAccount, isSigner: false, isWritable: true },\n    { pubkey: serumVaultSigner, isSigner: false, isWritable: false },\n    { pubkey: userSourceTokenAccount, isSigner: false, isWritable: true },\n    { pubkey: userDestTokenAccount, isSigner: false, isWritable: true },\n    { pubkey: userOwner, isSigner: true, isWritable: false },\n  ];\n\n  const data = Buffer.alloc(dataLayout.span);\n  dataLayout.encode(\n    {\n      instruction: 9,\n      amountIn,\n      minAmountOut,\n    },\n    data,\n  );\n\n  return new TransactionInstruction({\n    keys,\n    programId,\n    data,\n  });\n}\n\nexport function routeSwapInInstruction(\n  programId: PublicKey,\n  ammProgramId: PublicKey,\n  fromAmmId: PublicKey,\n  toAmmId: PublicKey,\n  ammAuthority: PublicKey,\n  ammOpenOrders: PublicKey,\n  _ammTargetOrders: PublicKey,\n  poolCoinTokenAccount: PublicKey,\n  poolPcTokenAccount: PublicKey,\n  // serum\n\n  serumProgramId: PublicKey,\n  serumMarket: PublicKey,\n  serumBids: PublicKey,\n  serumAsks: PublicKey,\n  serumEventQueue: PublicKey,\n  serumCoinVaultAccount: PublicKey,\n  serumPcVaultAccount: PublicKey,\n  serumVaultSigner: PublicKey,\n\n  // user\n  userSourceTokenAccount: PublicKey,\n  userMiddleTokenAccount: PublicKey,\n  userPdaAccount: PublicKey,\n  userOwner: PublicKey,\n  amountIn: number,\n): TransactionInstruction {\n  const dataLayout = struct([u8('instruction'), nu64('amountIn')]);\n\n  const keys = [\n    { pubkey: SYSTEM_PROGRAM_ID, isSigner: false, isWritable: false },\n    // spl token\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n\n    // amm\n    { pubkey: ammProgramId, isSigner: false, isWritable: false },\n    { pubkey: fromAmmId, isSigner: false, isWritable: true },\n    { pubkey: toAmmId, isSigner: false, isWritable: true },\n    { pubkey: ammAuthority, isSigner: false, isWritable: false },\n    { pubkey: ammOpenOrders, isSigner: false, isWritable: true },\n    // { pubkey: ammTargetOrders, isSigner: false, isWritable: true },\n    { pubkey: poolCoinTokenAccount, isSigner: false, isWritable: true },\n    { pubkey: poolPcTokenAccount, isSigner: false, isWritable: true },\n    // serum\n    { pubkey: serumProgramId, isSigner: false, isWritable: false },\n    { pubkey: serumMarket, isSigner: false, isWritable: true },\n    { pubkey: serumBids, isSigner: false, isWritable: true },\n    { pubkey: serumAsks, isSigner: false, isWritable: true },\n    { pubkey: serumEventQueue, isSigner: false, isWritable: true },\n    { pubkey: serumCoinVaultAccount, isSigner: false, isWritable: true },\n    { pubkey: serumPcVaultAccount, isSigner: false, isWritable: true },\n    { pubkey: serumVaultSigner, isSigner: false, isWritable: false },\n\n    { pubkey: userSourceTokenAccount, isSigner: false, isWritable: true },\n    { pubkey: userMiddleTokenAccount, isSigner: false, isWritable: true },\n    { pubkey: userPdaAccount, isSigner: false, isWritable: true },\n    { pubkey: userOwner, isSigner: true, isWritable: false },\n  ];\n\n  const data = Buffer.alloc(dataLayout.span);\n  dataLayout.encode(\n    {\n      instruction: 0,\n      amountIn,\n    },\n    data,\n  );\n\n  return new TransactionInstruction({\n    keys,\n    programId,\n    data,\n  });\n}\n\nexport function routeSwapOutInstruction(\n  programId: PublicKey,\n  ammProgramId: PublicKey,\n  fromAmmId: PublicKey,\n  toAmmId: PublicKey,\n  ammAuthority: PublicKey,\n  ammOpenOrders: PublicKey,\n  _ammTargetOrders: PublicKey,\n  poolCoinTokenAccount: PublicKey,\n  poolPcTokenAccount: PublicKey,\n  // serum\n\n  serumProgramId: PublicKey,\n  serumMarket: PublicKey,\n  serumBids: PublicKey,\n  serumAsks: PublicKey,\n  serumEventQueue: PublicKey,\n  serumCoinVaultAccount: PublicKey,\n  serumPcVaultAccount: PublicKey,\n  serumVaultSigner: PublicKey,\n\n  // user\n  userMiddleTokenAccount: PublicKey,\n  userDestTokenAccount: PublicKey,\n  userPdaAccount: PublicKey,\n  userOwner: PublicKey,\n  amountOut: number,\n): TransactionInstruction {\n  const dataLayout = struct([u8('instruction'), nu64('amountOut')]);\n\n  const keys = [\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n\n    // amm\n    { pubkey: ammProgramId, isSigner: false, isWritable: false },\n    { pubkey: fromAmmId, isSigner: false, isWritable: true },\n    { pubkey: toAmmId, isSigner: false, isWritable: true },\n    { pubkey: ammAuthority, isSigner: false, isWritable: false },\n    { pubkey: ammOpenOrders, isSigner: false, isWritable: true },\n    // { pubkey: ammTargetOrders, isSigner: false, isWritable: true },\n    { pubkey: poolCoinTokenAccount, isSigner: false, isWritable: true },\n    { pubkey: poolPcTokenAccount, isSigner: false, isWritable: true },\n    // serum\n    { pubkey: serumProgramId, isSigner: false, isWritable: false },\n    { pubkey: serumMarket, isSigner: false, isWritable: true },\n    { pubkey: serumBids, isSigner: false, isWritable: true },\n    { pubkey: serumAsks, isSigner: false, isWritable: true },\n    { pubkey: serumEventQueue, isSigner: false, isWritable: true },\n    { pubkey: serumCoinVaultAccount, isSigner: false, isWritable: true },\n    { pubkey: serumPcVaultAccount, isSigner: false, isWritable: true },\n    { pubkey: serumVaultSigner, isSigner: false, isWritable: false },\n\n    { pubkey: userMiddleTokenAccount, isSigner: false, isWritable: true },\n    { pubkey: userDestTokenAccount, isSigner: false, isWritable: true },\n    { pubkey: userPdaAccount, isSigner: false, isWritable: true },\n    { pubkey: userOwner, isSigner: true, isWritable: false },\n  ];\n\n  const data = Buffer.alloc(dataLayout.span);\n  dataLayout.encode(\n    {\n      instruction: 1,\n      amountOut,\n    },\n    data,\n  );\n\n  return new TransactionInstruction({\n    keys,\n    programId,\n    data,\n  });\n}\n\nexport function transfer(\n  source: PublicKey,\n  destination: PublicKey,\n  owner: PublicKey,\n  amount: number,\n) {\n  const dataLayout = struct([u8('instruction'), nu64('amount')]);\n\n  const keys = [\n    { pubkey: source, isSigner: false, isWritable: true },\n    { pubkey: destination, isSigner: false, isWritable: true },\n    { pubkey: owner, isSigner: true, isWritable: false },\n  ];\n\n  const data = Buffer.alloc(dataLayout.span);\n  dataLayout.encode(\n    {\n      instruction: 3,\n      amount,\n    },\n    data,\n  );\n\n  return new TransactionInstruction({\n    keys,\n    programId: TOKEN_PROGRAM_ID,\n    data,\n  });\n}\n\nexport function memoInstruction(memo: string) {\n  return new TransactionInstruction({\n    keys: [],\n    data: Buffer.from(memo, 'utf-8'),\n    programId: MEMO_PROGRAM_ID,\n  });\n}\nexport async function checkUnsettledInfo(\n  connection: Connection,\n  wallet: any,\n  market: Market,\n) {\n  if (!wallet) return;\n  const owner = wallet.publicKey;\n  if (!owner) return;\n  const openOrderss = await market?.findOpenOrdersAccountsForOwner(\n    connection,\n    owner,\n    1000,\n  );\n  if (!openOrderss?.length) return;\n  const baseTotalAmount = market.baseSplSizeToNumber(\n    openOrderss[0].baseTokenTotal,\n  );\n  const quoteTotalAmount = market.quoteSplSizeToNumber(\n    openOrderss[0].quoteTokenTotal,\n  );\n  const baseUnsettledAmount = market.baseSplSizeToNumber(\n    openOrderss[0].baseTokenFree,\n  );\n  const quoteUnsettledAmount = market.quoteSplSizeToNumber(\n    openOrderss[0].quoteTokenFree,\n  );\n  return {\n    baseSymbol: getTokenByMintAddress(market.baseMintAddress.toString())\n      ?.symbol,\n    quoteSymbol: getTokenByMintAddress(market.quoteMintAddress.toString())\n      ?.symbol,\n    baseTotalAmount,\n    quoteTotalAmount,\n    baseUnsettledAmount,\n    quoteUnsettledAmount,\n    openOrders: openOrderss[0],\n  };\n}\n\nexport async function settleFund(\n  connection: Connection,\n  market: Market,\n  openOrders: OpenOrders,\n  wallet: any,\n  baseMint: string,\n  quoteMint: string,\n  baseWallet: string,\n  quoteWallet: string,\n) {\n  const tx = new Transaction();\n  const signs: Account[] = [];\n\n  const owner = wallet.publicKey;\n\n  let wrappedBaseAccount;\n  let wrappedQuoteAccount;\n\n  if (baseMint === TOKENS.WSOL.mintAddress) {\n    wrappedBaseAccount = await createTokenAccountIfNotExist(\n      connection,\n      wrappedBaseAccount,\n      owner,\n      TOKENS.WSOL.mintAddress,\n      1e7,\n      tx,\n      signs,\n    );\n  }\n  if (quoteMint === TOKENS.WSOL.mintAddress) {\n    wrappedQuoteAccount = await createTokenAccountIfNotExist(\n      connection,\n      wrappedQuoteAccount,\n      owner,\n      TOKENS.WSOL.mintAddress,\n      1e7,\n      tx,\n      signs,\n    );\n  }\n\n  const quoteToken = getTokenByMintAddress(quoteMint);\n\n  const { transaction, signers } = await market.makeSettleFundsTransaction(\n    connection,\n    openOrders,\n    wrappedBaseAccount ?? new PublicKey(baseWallet),\n    wrappedQuoteAccount ?? new PublicKey(quoteWallet),\n    quoteToken && quoteToken.referrer\n      ? new PublicKey(quoteToken.referrer)\n      : null,\n  );\n\n  if (wrappedBaseAccount) {\n    transaction.add(\n      closeAccount({\n        source: wrappedBaseAccount,\n        destination: owner,\n        owner,\n      }),\n    );\n  }\n  if (wrappedQuoteAccount) {\n    transaction.add(\n      closeAccount({\n        source: wrappedQuoteAccount,\n        destination: owner,\n        owner,\n      }),\n    );\n  }\n\n  return await sendTransaction(\n    connection,\n    wallet,\n    mergeTransactions([tx, transaction]),\n    [...signs, ...signers],\n  );\n}\n","import { LAMPORTS_PER_SOL, PublicKey } from '@solana/web3.js';\nimport { cloneDeep } from 'lodash-es';\n\nimport { useConnection, useWallet } from '@solana/wallet-adapter-react';\nimport { useContext, useEffect } from 'react';\n\nimport {\n  AMM_INFO_LAYOUT,\n  AMM_INFO_LAYOUT_STABLE,\n  AMM_INFO_LAYOUT_V3,\n  AMM_INFO_LAYOUT_V4,\n} from 'src/utils/liquidity';\nimport { LIQUIDITY_POOLS, getAddressForWhat } from 'src/utils/pools';\nimport { MINT_LAYOUT, getBigNumber } from 'src/utils/layouts';\nimport { TOKEN_PROGRAM_ID } from '@project-serum/serum/lib/token-instructions';\nimport { TokenAmount } from 'src/utils/safe-math';\nimport { TokenMap } from 'src/constants';\nimport {\n  commitment,\n  findAssociatedTokenAddress,\n  getMultipleAccounts,\n} from 'src/utils/web3';\nimport ContextStore from 'src/store';\n\nconst addFees = async (connection) => {\n  const liquidityPools = {};\n  const publicKeys = [];\n\n  LIQUIDITY_POOLS.forEach((pool) => {\n    const {\n      poolCoinTokenAccount,\n      poolPcTokenAccount,\n      ammOpenOrders,\n      ammId,\n      coin,\n      pc,\n      lp,\n    } = pool;\n\n    publicKeys.push(\n      new PublicKey(poolCoinTokenAccount),\n      new PublicKey(poolPcTokenAccount),\n      new PublicKey(ammOpenOrders),\n      new PublicKey(ammId),\n      new PublicKey(lp.mintAddress),\n    );\n\n    const poolInfo = cloneDeep(pool);\n\n    poolInfo.coin.balance = new TokenAmount(0, coin.decimals);\n    poolInfo.pc.balance = new TokenAmount(0, pc.decimals);\n\n    liquidityPools[lp.mintAddress] = poolInfo;\n  });\n\n  const multipleInfo = await getMultipleAccounts(\n    connection,\n    publicKeys,\n    commitment,\n  );\n\n  multipleInfo.forEach((info) => {\n    if (info) {\n      const address = info.publicKey.toBase58();\n      const data = Buffer.from(info.account.data);\n\n      const { key, lpMintAddress, version } = getAddressForWhat(address);\n\n      if (key && lpMintAddress) {\n        const poolInfo = liquidityPools[lpMintAddress];\n\n        switch (key) {\n          // case 'poolCoinTokenAccount': {\n          //   const parsed = ACCOUNT_LAYOUT.decode(data);\n          //   // quick fix: Number can only safely store up to 53 bits\n          //   poolInfo.coin.balance.wei = poolInfo.coin.balance.wei.plus(\n          //     getBigNumber(parsed.amount),\n          //   );\n\n          //   break;\n          // }\n          // case 'poolPcTokenAccount': {\n          //   const parsed = ACCOUNT_LAYOUT.decode(data);\n\n          //   poolInfo.pc.balance.wei = poolInfo.pc.balance.wei.plus(\n          //     getBigNumber(parsed.amount),\n          //   );\n\n          //   break;\n          // }\n          // case 'ammOpenOrders': {\n          //   const OPEN_ORDERS_LAYOUT = OpenOrders.getLayout(\n          //     new PublicKey(poolInfo.serumProgramId),\n          //   );\n          //   const parsed = OPEN_ORDERS_LAYOUT.decode(data);\n\n          //   const { baseTokenTotal, quoteTokenTotal } = parsed;\n          //   poolInfo.coin.balance.wei = poolInfo.coin.balance.wei.plus(\n          //     getBigNumber(baseTokenTotal),\n          //   );\n          //   poolInfo.pc.balance.wei = poolInfo.pc.balance.wei.plus(\n          //     getBigNumber(quoteTokenTotal),\n          //   );\n\n          //   break;\n          // }\n          case 'ammId': {\n            let parsed;\n            if (version === 2) {\n              parsed = AMM_INFO_LAYOUT.decode(data);\n            } else if (version === 3) {\n              parsed = AMM_INFO_LAYOUT_V3.decode(data);\n            } else {\n              if (version === 5) {\n                parsed = AMM_INFO_LAYOUT_STABLE.decode(data);\n                poolInfo.currentK = getBigNumber(parsed.currentK);\n              } else {\n                parsed = AMM_INFO_LAYOUT_V4.decode(data);\n                if (getBigNumber(parsed.status) === 7) {\n                  poolInfo.poolOpenTime = getBigNumber(parsed.poolOpenTime);\n                }\n              }\n\n              const { swapFeeNumerator, swapFeeDenominator } = parsed;\n              poolInfo.fees = {\n                swapFeeNumerator: getBigNumber(swapFeeNumerator),\n                swapFeeDenominator: getBigNumber(swapFeeDenominator),\n              };\n            }\n\n            const { status, needTakePnlCoin, needTakePnlPc } = parsed;\n            poolInfo.status = getBigNumber(status);\n            poolInfo.coin.balance.wei = poolInfo.coin.balance.wei.minus(\n              getBigNumber(needTakePnlCoin),\n            );\n            poolInfo.pc.balance.wei = poolInfo.pc.balance.wei.minus(\n              getBigNumber(needTakePnlPc),\n            );\n\n            break;\n          }\n          // getLpSupply\n          case 'lpMintAddress': {\n            const parsed = MINT_LAYOUT.decode(data);\n\n            poolInfo.lp.totalSupply = new TokenAmount(\n              getBigNumber(parsed.supply),\n              poolInfo.lp.decimals,\n            );\n\n            break;\n          }\n          default:\n        }\n      }\n    }\n  });\n\n  return liquidityPools;\n};\n\nexport default function WalletUpdate() {\n  const wallet = useWallet();\n  const { connection } = useConnection();\n  const { dispatch } = useContext(ContextStore);\n\n  useEffect(() => {\n    const doFetchInfo = async () => {\n      const liquidityPools = await addFees(connection);\n\n      dispatch({\n        type: 'DO_UPDATE',\n        payload: {\n          liquidityPools,\n        },\n      });\n    };\n\n    const doUpdateWallet = async () => {\n      const tokenAccounts = {};\n      const auxiliaryTokenAccounts = [];\n      const lamportsBalance = await connection.getBalance(wallet.publicKey);\n\n      connection\n        .getParsedTokenAccountsByOwner(\n          wallet.publicKey,\n          {\n            programId: TOKEN_PROGRAM_ID,\n          },\n          'confirmed',\n        )\n        .then(async (parsedTokenAccounts) => {\n          for (const tokenAccountInfo of parsedTokenAccounts.value) {\n            const tokenAccountPubkey = tokenAccountInfo.pubkey;\n            const tokenAccountAddress = tokenAccountPubkey.toBase58();\n            const parsedInfo = tokenAccountInfo.account.data.parsed.info;\n            const mintAddress = parsedInfo.mint;\n\n            const balance = new TokenAmount(\n              parsedInfo.tokenAmount.amount,\n              parsedInfo.tokenAmount.decimals,\n            );\n\n            const ata = await findAssociatedTokenAddress(\n              wallet.publicKey,\n              new PublicKey(mintAddress),\n            );\n\n            if (ata.equals(tokenAccountPubkey) && TokenMap[mintAddress]) {\n              tokenAccounts[mintAddress] = {\n                tokenAccountAddress,\n                balance,\n              };\n            } else if (parsedInfo.tokenAmount.uiAmount > 0) {\n              auxiliaryTokenAccounts.push(tokenAccountInfo);\n            }\n          }\n\n          dispatch({\n            type: 'DO_UPDATE',\n            payload: {\n              solBalance: lamportsBalance / LAMPORTS_PER_SOL,\n              tokenAccounts,\n              auxiliaryTokenAccounts,\n            },\n          });\n        });\n    };\n\n    if (wallet.connected) {\n      doFetchInfo();\n      doUpdateWallet();\n    }\n    const id = setInterval(() => {\n      wallet.connected && doUpdateWallet();\n    }, 5000);\n\n    return () => {\n      clearInterval(id);\n    };\n  }, [connection, dispatch, wallet.connected, wallet.publicKey]);\n\n  return <></>;\n}\n","import { cloneDeep } from 'lodash-es';\n\nimport { TokenAmount } from './safe-math';\n\nexport interface TokenInfo {\n  symbol: string;\n  name: string;\n\n  mintAddress: string;\n  decimals: number;\n  totalSupply?: TokenAmount;\n\n  referrer?: string;\n\n  details?: string;\n  docs?: object;\n  socials?: object;\n\n  tokenAccountAddress?: string;\n  balance?: TokenAmount;\n  tags: string[];\n}\n\n/**\n * Get token use symbol\n\n * @param {string} symbol\n\n * @returns {TokenInfo | null} tokenInfo\n */\nexport function getTokenBySymbol(symbol: string): TokenInfo | null {\n  if (symbol === 'SOL') {\n    return cloneDeep(NATIVE_SOL);\n  }\n\n  let token = cloneDeep(TOKENS[symbol]);\n\n  if (!token) {\n    token = null;\n  }\n\n  return token;\n}\n\n/**\n * Get token use mint addresses\n\n * @param {string} mintAddress\n\n * @returns {TokenInfo | null} tokenInfo\n */\nexport function getTokenByMintAddress(mintAddress: string): TokenInfo | null {\n  if (mintAddress === NATIVE_SOL.mintAddress) {\n    return cloneDeep(NATIVE_SOL);\n  }\n  const token = Object.values(TOKENS).find(\n    (item) => item.mintAddress === mintAddress,\n  );\n  return token ? cloneDeep(token) : null;\n}\n\nexport function getTokenSymbolByMint(mint: string) {\n  if (mint === NATIVE_SOL.mintAddress) {\n    return NATIVE_SOL.symbol;\n  }\n\n  const token = Object.values({ ...TOKENS, ...LP_TOKENS }).find(\n    (item) => item.mintAddress === mint,\n  );\n\n  if (token) {\n    return token.symbol;\n  }\n  return 'UNKNOWN';\n}\n\nexport interface Tokens {\n  [key: string]: any;\n  [index: number]: any;\n}\n\nexport const TOKENS_TAGS: {\n  [key: string]: { mustShow: boolean; show: boolean; outName: string };\n} = {\n  raydium: { mustShow: true, show: true, outName: 'Raydium Default List' },\n  userAdd: { mustShow: true, show: true, outName: 'User Added Tokens' },\n  solana: { mustShow: false, show: false, outName: 'Solana Token List' },\n  unofficial: {\n    mustShow: false,\n    show: false,\n    outName: 'Permissionless Pool Tokens',\n  },\n};\n\nexport const NATIVE_SOL: TokenInfo = {\n  symbol: 'SOL',\n  name: 'Native Solana',\n  mintAddress: '11111111111111111111111111111111',\n  decimals: 9,\n  tags: ['raydium'],\n};\n\nexport const TOKENS: Tokens = {\n  WSOL: {\n    symbol: 'WSOL',\n    name: 'Wrapped Solana',\n    mintAddress: 'So11111111111111111111111111111111111111112',\n    decimals: 9,\n    referrer: 'HTcarLHe7WRxBQCWvhVB8AP56pnEtJUV2jDGvcpY3xo5',\n    tags: ['raydium'],\n  },\n  BTC: {\n    symbol: 'BTC',\n    name: 'Wrapped Bitcoin',\n    mintAddress: '9n4nbM75f5Ui33ZbPYXn59EwSgE8CGsHtAeTH5YFeJ9E',\n    decimals: 6,\n    referrer: 'GZpS8cY8Nt8HuqxzJh6PXTdSxc38vFUjBmi7eEUkkQtG',\n    tags: ['raydium'],\n  },\n  ETH: {\n    symbol: 'ETH',\n    name: 'Wrapped Ethereum',\n    mintAddress: '2FPyTwcZLUg1MDrwsyoP4D6s1tM7hAkHYRjkNb5w6Pxk',\n    decimals: 6,\n    referrer: 'CXPTcSxxh4AT38gtv3SPbLS7oZVgXzLbMb83o4ziXjjN',\n    tags: ['raydium'],\n  },\n  USDT: {\n    symbol: 'USDT',\n    name: 'USDT',\n    mintAddress: 'Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB',\n    decimals: 6,\n    referrer: '8DwwDNagph8SdwMUdcXS5L9YAyutTyDJmK6cTKrmNFk3',\n    tags: ['raydium'],\n  },\n  WUSDT: {\n    symbol: 'WUSDT',\n    name: 'Wrapped USDT',\n    mintAddress: 'BQcdHdAQW1hczDbBi9hiegXAR7A98Q9jx3X3iBBBDiq4',\n    decimals: 6,\n    referrer: 'CA98hYunCLKgBuD6N8MJSgq1GbW9CXdksLf5mw736tS3',\n    tags: ['raydium'],\n  },\n  USDC: {\n    symbol: 'USDC',\n    name: 'USDC',\n    mintAddress: 'EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v',\n    decimals: 6,\n    referrer: '92vdtNjEg6Zth3UU1MgPgTVFjSEzTHx66aCdqWdcRkrg',\n    tags: ['raydium'],\n  },\n  WUSDC: {\n    symbol: 'WUSDC',\n    name: 'Wrapped USDC',\n    mintAddress: 'BXXkv6z8ykpG1yuvUDPgh732wzVHB69RnB9YgSYh3itW',\n    decimals: 6,\n    tags: ['raydium'],\n  },\n  YFI: {\n    symbol: 'YFI',\n    name: 'Wrapped YFI',\n    mintAddress: '3JSf5tPeuscJGtaCp5giEiDhv51gQ4v3zWg8DGgyLfAB',\n    decimals: 6,\n    referrer: 'DZjgzKfYzZBBSTo5vytMYvGdNF933DvuX8TftDMrThrb',\n    tags: ['raydium'],\n  },\n  LINK: {\n    symbol: 'LINK',\n    name: 'Wrapped Chainlink',\n    mintAddress: 'CWE8jPTUYhdCTZYWPTe1o5DFqfdjzWKc9WKz6rSjQUdG',\n    decimals: 6,\n    referrer: 'DRSKKsYZaPEFkRgGywo7KWBGZikf71R9aDr8tjtpr41V',\n    tags: ['raydium'],\n  },\n  XRP: {\n    symbol: 'XRP',\n    name: 'Wrapped XRP',\n    mintAddress: 'Ga2AXHpfAF6mv2ekZwcsJFqu7wB4NV331qNH7fW9Nst8',\n    decimals: 6,\n    referrer: '6NeHPXG142tAE2Ej3gHgT2N66i1KH6PFR6PBZw6RyrwH',\n    tags: ['raydium'],\n  },\n  SUSHI: {\n    symbol: 'SUSHI',\n    name: 'Wrapped SUSHI',\n    mintAddress: 'AR1Mtgh7zAtxuxGd2XPovXPVjcSdY3i4rQYisNadjfKy',\n    decimals: 6,\n    referrer: '59QxHeHgb28tDc3gStnrW8FNKC9qWuRmRZHBaAqCerJX',\n    tags: ['raydium'],\n  },\n  ALEPH: {\n    symbol: 'ALEPH',\n    name: 'Wrapped ALEPH',\n    mintAddress: 'CsZ5LZkDS7h9TDKjrbL7VAwQZ9nsRu8vJLhRYfmGaN8K',\n    decimals: 6,\n    referrer: '8FKAKrenJMDd7V6cxnM5BsymHTjqxgodtHbLwZReMnWW',\n    tags: ['raydium'],\n  },\n  SXP: {\n    symbol: 'SXP',\n    name: 'Wrapped SXP',\n    mintAddress: 'SF3oTvfWzEP3DTwGSvUXRrGTvr75pdZNnBLAH9bzMuX',\n    decimals: 6,\n    referrer: '97Vyotr284UM2Fyq9gbfQ3azMYtgf7cjnsf8pN1PFfY9',\n    tags: ['raydium'],\n  },\n  HGET: {\n    symbol: 'HGET',\n    name: 'Wrapped HGET',\n    mintAddress: 'BtZQfWqDGbk9Wf2rXEiWyQBdBY1etnUUn6zEphvVS7yN',\n    decimals: 6,\n    referrer: 'AGY2wy1ANzLM2jJLSkVxPUYAY5iAYXYsLMQkoQsAhucj',\n    tags: ['raydium'],\n  },\n  CREAM: {\n    symbol: 'CREAM',\n    name: 'Wrapped CREAM',\n    mintAddress: '5Fu5UUgbjpUvdBveb3a1JTNirL8rXtiYeSMWvKjtUNQv',\n    decimals: 6,\n    referrer: '7WPzEiozJ69MQe8bfbss1t2unR6bHR4S7FimiUVRgu7P',\n    tags: ['raydium'],\n  },\n  UNI: {\n    symbol: 'UNI',\n    name: 'Wrapped UNI',\n    mintAddress: 'DEhAasscXF4kEGxFgJ3bq4PpVGp5wyUxMRvn6TzGVHaw',\n    decimals: 6,\n    referrer: '4ntxDv95ajBbXfZyGy3UhcQDx8xmH1yJ6eKvuNNH466x',\n    tags: ['raydium'],\n  },\n  SRM: {\n    symbol: 'SRM',\n    name: 'Serum',\n    mintAddress: 'SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt',\n    decimals: 6,\n    referrer: 'HYxa4Ea1dz7ya17Cx18rEGUA1WbCvKjXjFKrnu8CwugH',\n    tags: ['raydium'],\n  },\n  FTT: {\n    symbol: 'FTT',\n    name: 'Wrapped FTT',\n    mintAddress: 'AGFEad2et2ZJif9jaGpdMixQqvW5i81aBdvKe7PHNfz3',\n    decimals: 6,\n    referrer: 'CafpgSh8KGL2GPTjdXfctD3vXngNZDJ3Q92FTfV71Hmt',\n    tags: ['raydium'],\n  },\n  MSRM: {\n    symbol: 'MSRM',\n    name: 'MegaSerum',\n    mintAddress: 'MSRMcoVyrFxnSgo5uXwone5SKcGhT1KEJMFEkMEWf9L',\n    decimals: 0,\n    referrer: 'Ge5q9x8gDUNYqqLA1MdnCzWNJGsbj3M15Yxse2cDbw9z',\n    tags: ['raydium'],\n  },\n  TOMO: {\n    symbol: 'TOMO',\n    name: 'Wrapped TOMO',\n    mintAddress: 'GXMvfY2jpQctDqZ9RoU3oWPhufKiCcFEfchvYumtX7jd',\n    decimals: 6,\n    referrer: '9fexfN3eZomF5gfenG5L9ydbKRQkPhq6x74rb5iLrvXP',\n    tags: ['raydium'],\n  },\n  KARMA: {\n    symbol: 'KARMA',\n    name: 'Wrapped KARMA',\n    mintAddress: 'EcqExpGNFBve2i1cMJUTR4bPXj4ZoqmDD2rTkeCcaTFX',\n    decimals: 4,\n    tags: ['raydium'],\n  },\n  LUA: {\n    symbol: 'LUA',\n    name: 'Wrapped LUA',\n    mintAddress: 'EqWCKXfs3x47uVosDpTRgFniThL9Y8iCztJaapxbEaVX',\n    decimals: 6,\n    referrer: 'HuZwNApjVFuFSDgrwZA8GP2JD7WMby4qt6rkWDnaMo7j',\n    tags: ['raydium'],\n  },\n  MATH: {\n    symbol: 'MATH',\n    name: 'Wrapped MATH',\n    mintAddress: 'GeDS162t9yGJuLEHPWXXGrb1zwkzinCgRwnT8vHYjKza',\n    decimals: 6,\n    referrer: 'C9K1M8sJX8WMdsnFT7DuzdiHHunEj79EsLuz4DixQYGm',\n    tags: ['raydium'],\n  },\n  KEEP: {\n    symbol: 'KEEP',\n    name: 'Wrapped KEEP',\n    mintAddress: 'GUohe4DJUA5FKPWo3joiPgsB7yzer7LpDmt1Vhzy3Zht',\n    decimals: 6,\n    tags: ['raydium'],\n  },\n  SWAG: {\n    symbol: 'SWAG',\n    name: 'Wrapped SWAG',\n    mintAddress: '9F9fNTT6qwjsu4X4yWYKZpsbw5qT7o6yR2i57JF2jagy',\n    decimals: 6,\n    tags: ['raydium'],\n  },\n  FIDA: {\n    symbol: 'FIDA',\n    name: 'Bonfida',\n    mintAddress: 'EchesyfXePKdLtoiZSL8pBe8Myagyy8ZRqsACNCFGnvp',\n    decimals: 6,\n    referrer: 'AeAsG75UmyPDB271c6NHonHxXAPXfkvhcf2xjfJhReS8',\n    tags: ['raydium'],\n  },\n  KIN: {\n    symbol: 'KIN',\n    name: 'KIN',\n    mintAddress: 'kinXdEcpDQeHPEuQnqmUgtYykqKGVFq6CeVX5iAHJq6',\n    decimals: 5,\n    referrer: 'AevFXmApVxN2yk1iemSxXc6Wy7Z1udUEfST11kuYKmr9',\n    tags: ['raydium'],\n  },\n  MAPS: {\n    symbol: 'MAPS',\n    name: 'MAPS',\n    mintAddress: 'MAPS41MDahZ9QdKXhVa4dWB9RuyfV4XqhyAZ8XcYepb',\n    decimals: 6,\n    tags: ['raydium'],\n  },\n  OXY: {\n    symbol: 'OXY',\n    name: 'OXY',\n    mintAddress: 'z3dn17yLaGMKffVogeFHQ9zWVcXgqgf3PQnDsNs2g6M',\n    decimals: 6,\n    tags: ['raydium'],\n  },\n  RAY: {\n    symbol: 'RAY',\n    name: 'Raydium',\n    mintAddress: '4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R',\n    decimals: 6,\n    referrer: '33XpMmMQRf6tSPpmYyzpwU4uXpZHkFwCZsusD9dMYkjy',\n    tags: ['raydium'],\n  },\n  xCOPE: {\n    symbol: 'xCOPE',\n    name: 'xCOPE',\n    mintAddress: '3K6rftdAaQYMPunrtNRHgnK2UAtjm2JwyT2oCiTDouYE',\n    decimals: 0,\n    referrer: '8DTehuES4tfnd2SrqcjN52XofxWXGjiLZRgM12U9pB6f',\n    tags: ['raydium'],\n  },\n  COPE: {\n    symbol: 'COPE',\n    name: 'COPE',\n    mintAddress: '8HGyAAB1yoM1ttS7pXjHMa3dukTFGQggnFFH3hJZgzQh',\n    decimals: 6,\n    referrer: 'G7UYwWhkmgeL57SUKFF45K663V9TdXZw6Ho6ZLQ7p4p',\n    tags: ['raydium'],\n  },\n  STEP: {\n    symbol: 'STEP',\n    name: 'STEP',\n    mintAddress: 'StepAscQoEioFxxWGnh2sLBDFp9d8rvKz2Yp39iDpyT',\n    decimals: 9,\n    referrer: 'EFQVX1S6dFroDDhJDAnMTX4fCfjt4fJXHdk1eEtJ2uRY',\n    tags: ['raydium'],\n  },\n  MEDIA: {\n    symbol: 'MEDIA',\n    name: 'MEDIA',\n    mintAddress: 'ETAtLmCmsoiEEKfNrHKJ2kYy3MoABhU6NQvpSfij5tDs',\n    decimals: 6,\n    referrer: 'AYnaG3AidNWFzjq9U3BJSsQ9DShE8g7FszriBDtRFvsx',\n\n    details:\n      'Media Network is a new protocol that bypasses traditional CDN providers’ centralized approach for a self-governed and open source solution where everyone can participate. Media Network creates a distributed bandwidth market that enables service providers such as media platforms to hire resources from the network and dynamically come and go as the demand for last-mile data delivery shifts. It allows anyone to organically serve content without introducing any trust assumptions or pre-authentication requirements. Participants earn MEDIA rewards for their bandwidth contributions, a fixed supply SPL token minted on Solana’s Blockchain.',\n    docs: {\n      website: 'https://media.network/',\n      whitepaper: 'https://media.network/whitepaper.pdf',\n    },\n    socials: {\n      Twitter: 'https://twitter.com/Media_FDN',\n      Telegram: 'https://t.me/Media_FDN',\n      Medium: 'https://mediafoundation.medium.com/',\n    },\n    tags: ['raydium'],\n  },\n  ROPE: {\n    symbol: 'ROPE',\n    name: 'ROPE',\n    mintAddress: '8PMHT4swUMtBzgHnh5U564N5sjPSiUz2cjEQzFnnP1Fo',\n    decimals: 9,\n    referrer: '5sGVVniBSPLTwRHDETShovq7STRH2rJwbvdvvH3NcVTF',\n    tags: ['raydium'],\n  },\n  MER: {\n    symbol: 'MER',\n    name: 'Mercurial',\n    mintAddress: 'MERt85fc5boKw3BW1eYdxonEuJNvXbiMbs6hvheau5K',\n    decimals: 6,\n    referrer: '36F4ryvqaNW2yKQsAry4ZHCZ3j7tz3gtEz7NEwv7pSRu',\n\n    details:\n      'Mercurial Finance\\nMercurial is building DeFi’s first dynamic vaults for stable assets on Solana, providing the technical tools for users to easily deposit, swap and mint stable assets.\\n\\nInnovations\\nMercurial will be introducing several key new technical innovations, including on-chain algorithms to regulate the flow of assets and dynamic fees that tap on the market and price data to assist LPs in optimizing performance. We will also be developing a unique pricing curve that will be the first to combine high efficiency, multi-token support, and generalizability for all types of token sets.\\n\\nMaximizing Capital Utlilization\\nMercurial vaults will dynamically utilize assets for a wide range of use cases, like low slippage swaps, lending, flash loans, and external third-party decentralized protocols. To increase pegged assets availability on Solana, we will allow the creation of synthetics, like mUSD or mBTC, which can be added to our vaults to improve liquidity for other stables and facilitate interaction with other third-party decentralized protocols.\\n\\nStarting with a vault for the most common stables, for example, USDC, USDT, wUSDC, and wDAI, we will be facilitating low slippage swaps with dynamic fees. Features will be added as key technical and ecosystem pieces become available on Solana, i.e. inter-program composability, price oracles, etc.\\n\\nMER\\nThe MER token will be used to accrue value for the holder via fees from swaps, commission from yield farms, and as collateral for synthetic stables like mUSD. MER will also be intrinsically linked to the governance and growth of Mercurial, playing a crucial role in regulating the system across governance, insurance, and bootstrapping.',\n    docs: {\n      website: 'https://www.mercurial.finance/',\n      whitepaper: 'https://www.mercurial.finance/Mercurial-Lite-Paper-v1.pdf',\n    },\n    socials: {\n      Twitter: 'https://twitter.com/MercurialFi',\n      Telegram: 'https://t.me/MercurialFi',\n      Medium: 'https://mercurialfi.medium.com/',\n    },\n    tags: ['raydium'],\n  },\n  TULIP: {\n    symbol: 'TULIP',\n    name: 'TULIP',\n    mintAddress: 'TuLipcqtGVXP9XR62wM8WWCm6a9vhLs7T1uoWBk6FDs',\n    decimals: 6,\n    referrer: 'Bcw1TvX8jUj6CtY2a7GU2THeYVAudvmT8yzRypVMVsSH',\n    tags: ['raydium'],\n  },\n  SNY: {\n    symbol: 'SNY',\n    name: 'SNY',\n    mintAddress: '4dmKkXNHdgYsXqBHCuMikNQWwVomZURhYvkkX5c4pQ7y',\n    decimals: 6,\n    referrer: 'G7gyaTNn2hgjF67SWs4Ee9PEaFU2xadhtXL8HmkJ2cNL',\n\n    detailLink:\n      'https://raydium.medium.com/synthetify-launching-on-acceleraytor-3755b4903f88',\n    details:\n      'Synthetify is a decentralized protocol that allows for the creation and exchange of synthetic assets that closely track the price of underlying assets. Synthetify’s synthetics adhere to the SPL token standard, allowing them to be easily integrated with DeFi applications across the Solana ecosystem.\\n\\nSynthetify leverages Solana to enable a fast, cheap and intuitive trading experience for users of the platform while staying fully decentralized thanks to an infrastructure that relies on smart contracts and blockchain oracles.\\n\\nThe Synthetify Token (SNY) gives the ability to participate in the protocol through staking. Stakers receive a pro rata share of fees generated by the exchange as well as additional rewards. SNY acts as a collateral token for all synthetic assets created on the platform and each token will have voting power on future governance proposals.',\n    docs: {\n      website: 'https://synthetify.io/',\n      whitepaper: 'https://resources.synthetify.io/synthetify-whitepaper.pdf',\n    },\n    socials: {\n      Twitter: 'https://twitter.com/synthetify',\n      Telegram: 'https://t.me/synthetify',\n      Medium: 'https://synthetify.medium.com/',\n    },\n    tags: ['raydium'],\n  },\n  SLRS: {\n    symbol: 'SLRS',\n    name: 'SLRS',\n    mintAddress: 'SLRSSpSLUTP7okbCUBYStWCo1vUgyt775faPqz8HUMr',\n    decimals: 6,\n    referrer: 'AmqeHgTdm6kBzy5ewZFKuMAfbynZmhve1GQxbJzQFLbP',\n\n    detailLink:\n      'https://raydium.medium.com/solrise-is-launching-on-acceleraytor-c2c980362037',\n    details:\n      'Solrise Finance is a fully decentralized and non-custodial protocol for investment funds on Solana. What this means in practice is that anyone can open a fund, and anyone can invest in it.\\n\\nSolrise’s platform allows fund managers from all across the globe — weWether they are well-established and looking for a new channel, or ambitious rookies with something to prove — to open a fund, with performance kept completely transparent.\\n\\nExisting decentralized fund management platforms on Ethereum are suffering from brutally high transaction fees. With Solrise, you can create, enter, and exit funds all for under $0.01.',\n    docs: {\n      website: 'https://solrise.finance/',\n      docs: 'https://docs.solrise.finance/',\n    },\n    socials: {\n      Twitter: 'https://twitter.com/SolriseFinance',\n      Telegram: 'https://t.me/solrisefinance',\n      Medium: 'https://blog.solrise.finance/',\n    },\n    tags: ['raydium'],\n  },\n  WOO: {\n    symbol: 'WOO',\n    name: 'Wootrade Network',\n    mintAddress: 'E5rk3nmgLUuKUiS94gg4bpWwWwyjCMtddsAXkTFLtHEy',\n    decimals: 6,\n    referrer: '7UbeAZxpza5zN3QawQ5KsUo88zXvohUncYB9Zk5QCiim',\n    tags: ['raydium'],\n  },\n  BOP: {\n    symbol: 'BOP',\n    name: 'Boring Protocol',\n    mintAddress: 'BLwTnYKqf7u4qjgZrrsKeNs2EzWkMLqVCu6j8iHyrNA3',\n    decimals: 8,\n    referrer: 'FWxBZmNsvNckx8DnaL2NuyMtiQmT1x529WwV4e1UWiGk',\n    tags: ['raydium'],\n  },\n  SAMO: {\n    symbol: 'SAMO',\n    name: 'Samoyed Coin',\n    mintAddress: '7xKXtg2CW87d97TXJSDpbD5jBkheTqA83TZRuJosgAsU',\n    decimals: 9,\n    referrer: 'FnMDNFL9t8EpbADSU3hLWBtx7SuwRBB6NM84U3PzSkUu',\n    tags: ['raydium'],\n  },\n  renBTC: {\n    symbol: 'renBTC',\n    name: 'renBTC',\n    mintAddress: 'CDJWUqTcYTVAKXAVXoQZFes5JUFc7owSeq7eMQcDSbo5',\n    decimals: 8,\n    referrer: '7rr64uygy3o5RKVeNv12JGDUFMXVdr2YHvA3NTxzbZT6',\n    tags: ['raydium'],\n  },\n  renDOGE: {\n    symbol: 'renDOGE',\n    name: 'renDOGE',\n    mintAddress: 'ArUkYE2XDKzqy77PRRGjo4wREWwqk6RXTfM9NeqzPvjU',\n    decimals: 8,\n    referrer: 'J5g7uvJRGnpRyLnRQjFs1MqMkiTVgjxVJCXocu4B4BcZ',\n    tags: ['raydium'],\n  },\n  LIKE: {\n    symbol: 'LIKE',\n    name: 'LIKE',\n    mintAddress: '3bRTivrVsitbmCTGtqwp7hxXPsybkjn4XLNtPsHqa3zR',\n    decimals: 9,\n    referrer: '2rnVeVGfM88XqyNyBzGWEb7JViYKqncFzjWq5h1ujS9A',\n\n    detailLink:\n      'https://raydium.medium.com/only1-is-launching-on-acceleraytor-41ecb89dcc4e',\n    details:\n      'Only1 is the first NFT-powered social platform built on the Solana blockchain. Mixing social media, an NFT marketplace, a scalable blockchain, and the native token — $LIKE, Only1 offers fans a unique way of connecting with the creators they love.\\n\\nBy using the Only1 platform, fans will have the ability to invest, access, and earn from the limited edition contents created by the world’s largest influencers/celebrities, all powered by NFTs.',\n    docs: {\n      website: 'https://only1.io/',\n      whitepaper: 'https://only1.io/pitch-deck.pdf',\n    },\n    socials: {\n      Twitter: 'https://twitter.com/only1nft',\n      Telegram: 'https://t.me/only1nft',\n      Medium: 'https://medium.com/@only1nft',\n      Discord: 'https://discord.gg/sUu7KZwNCB',\n    },\n    tags: ['raydium'],\n  },\n  DXL: {\n    symbol: 'DXL',\n    name: 'DXL',\n    mintAddress: 'GsNzxJfFn6zQdJGeYsupJWzUAm57Ba7335mfhWvFiE9Z',\n    decimals: 6,\n    referrer: 'HF7mhT9YgD5CULAFDYQmhnUMi1FnNbKeBFCy9SZDh2XE',\n    tags: ['raydium'],\n  },\n  mSOL: {\n    symbol: 'mSOL',\n    name: 'Marinade staked SOL (mSOL)',\n    mintAddress: 'mSoLzYCxHdYgdzU16g5QSh3i5K3z3KZK7ytfqcJm7So',\n    decimals: 9,\n    referrer: '7h5bckf8P29RdviNoKjDyH3Ky3uwdrBiPgYuSCD4asV5',\n    tags: ['raydium'],\n  },\n  PAI: {\n    symbol: 'PAI',\n    name: 'PAI (Parrot)',\n    mintAddress: 'Ea5SjE2Y6yvCeW5dYTn7PYMuW5ikXkvbGdcmSnXeaLjS',\n    decimals: 6,\n    referrer: '54X98LAxRR2j1KMBBXkbYyUaAWi1iKW9G1Y4TnTJVY2e',\n    tags: ['raydium'],\n  },\n  PORT: {\n    symbol: 'PORT',\n    name: 'PORT',\n    mintAddress: 'PoRTjZMPXb9T7dyU7tpLEZRQj7e6ssfAE62j2oQuc6y',\n    decimals: 6,\n    referrer: '5Ve8q9fb7R2DhdqGV4o1RVy7xxo4D6ifQfbxGiASdxEH',\n    tags: ['raydium'],\n  },\n  MNGO: {\n    symbol: 'MNGO',\n    name: 'Mango',\n    mintAddress: 'MangoCzJ36AjZyKwVj3VnYU4GTonjfVEnJmvvWaxLac',\n    decimals: 6,\n    referrer: 'CijuvE6qDpxZ5WqdEQEe7mS11fXEKiiHc7RR8wRiGzjY',\n    tags: ['raydium'],\n  },\n  CRP: {\n    symbol: 'CRP',\n    name: 'CRP',\n    mintAddress: 'DubwWZNWiNGMMeeQHPnMATNj77YZPZSAz2WVR5WjLJqz',\n    decimals: 9,\n    referrer: 'FKocyVJptELTbnkUkDRmT7y6hUem2JYrqHoph9uyvQXt',\n    tags: ['raydium'],\n  },\n  ATLAS: {\n    symbol: 'ATLAS',\n    name: 'ATLAS',\n    mintAddress: 'ATLASXmbPQxBUYbxPsV97usA3fPQYEqzQBUHgiFCUsXx',\n    decimals: 8,\n    referrer: '9t9mzbkMtLdazj1D9JycS15Geb1KVtcDt4XyAkpM72Ee',\n\n    detailLink:\n      'https://raydium.medium.com/star-atlas-is-launching-on-acceleraytor-fa35cfe3291f',\n    details:\n      'POLIS is the primary governance token of Star Atlas.\\n\\nStar Atlas is a grand strategy game that combines space exploration, territorial conquest, and political domination. In the distant future, players can join one of three galactic factions to directly influence the course of the metaverse and earn real-world income for their contributions.\\n\\nThe Star Atlas offers a unique gaming experience by combining block chain mechanics with traditional game mechanics. All assets in the metaverse are directly owned by players, and can be traded on the marketplace or exchanged on other cryptocurrency networks.',\n    docs: {\n      website: 'https://staratlas.com/',\n      whitepaper: 'https://staratlas.com/files/star-atlas-white-paper.pdf',\n    },\n    socials: {\n      Twitter: 'https://twitter.com/staratlas',\n      Telegram: 'https://t.me/staratlasgame',\n      Medium: 'https://medium.com/star-atlas',\n      Discord: 'https://discord.gg/staratlas',\n      Twitch: 'https://www.twitch.tv/staratlasgame',\n      Youtube:\n        'https://www.youtube.com/channel/UCt-y8Npwje5KDG5MSZ0a9Jw/videos',\n    },\n    tags: ['raydium'],\n  },\n  POLIS: {\n    symbol: 'POLIS',\n    name: 'POLIS',\n    mintAddress: 'poLisWXnNRwC6oBu1vHiuKQzFjGL4XDSu4g9qjz9qVk',\n    decimals: 8,\n    referrer: 'CQ7HWCeSSp3tAfWzqH7ZEzgnTBr5Tvz1No3Y1xbiWzBm',\n\n    detailLink:\n      'https://raydium.medium.com/star-atlas-is-launching-on-acceleraytor-fa35cfe3291f',\n    details:\n      'POLIS is the primary governance token of Star Atlas.\\n\\nStar Atlas is a grand strategy game that combines space exploration, territorial conquest, and political domination. In the distant future, players can join one of three galactic factions to directly influence the course of the metaverse and earn real-world income for their contributions.\\n\\nThe Star Atlas offers a unique gaming experience by combining block chain mechanics with traditional game mechanics. All assets in the metaverse are directly owned by players, and can be traded on the marketplace or exchanged on other cryptocurrency networks.',\n    docs: {\n      website: 'https://staratlas.com/',\n      whitepaper: 'https://staratlas.com/files/star-atlas-white-paper.pdf',\n    },\n    socials: {\n      Twitter: 'https://twitter.com/staratlas',\n      Telegram: 'https://t.me/staratlasgame',\n      Medium: 'https://medium.com/star-atlas',\n      Discord: 'https://discord.gg/staratlas',\n      Twitch: 'https://www.twitch.tv/staratlasgame',\n      Youtube:\n        'https://www.youtube.com/channel/UCt-y8Npwje5KDG5MSZ0a9Jw/videos',\n    },\n    tags: ['raydium'],\n  },\n  GRAPE: {\n    symbol: 'GRAPE',\n    name: 'GRAPE',\n    mintAddress: '8upjSpvjcdpuzhfR1zriwg5NXkwDruejqNE9WNbPRtyA',\n    decimals: 6,\n    referrer: 'M4nDMB9krXbaNFPVu1DjrBTfqPUHbKEQLZSSDNH2JrL',\n\n    detailLink:\n      'https://raydium.medium.com/grape-protocol-launching-on-acceleraytor-547f58c12937',\n    details:\n      'The GRAPE “Great Ape” community is a token-based membership community focused on accelerating the growth and adoption of Solana. GRAPE token holders at different tiers are rewarded with exclusive benefits and monthly emissions of GRAPE. You can find more details on the GRAPE membership tiers and benefits here.\\n\\nThe GRAPE toolset creates a framework for decentralized and tokenized communities to better organize and coordinate their activities, unlocking a whole new world of possibility for these dynamic groups. The GRAPE roadmap includes modules for DAO Management, non-custodial tipping, escrow, and event planning to be deployed in the next 6 months.\\n\\nGRAPE protocol’s first tool, Grape Access, creates a Dynamic Balance-Based Membership solution by connecting members’ social accounts to cryptographic keys. All Solana tokens are supported by Multi-Coin configurations, which grants users permission and access rights based on SPL tokens, token pairs, and LP tokens in their wallet.',\n    docs: {\n      website: 'https://grapes.network/',\n      // whitepaper: '' // TODO\n    },\n    socials: {\n      Discord: 'https://discord.com/invite/greatape',\n      Medium: 'https://medium.com/great-ape',\n      Twitter: 'https://twitter.com/grapeprotocol',\n      Twitch: 'https://www.twitch.tv/whalesfriend',\n    },\n    tags: ['raydium'],\n  },\n  GENE: {\n    symbol: 'GENE',\n    name: 'Genopets',\n    mintAddress: 'GENEtH5amGSi8kHAtQoezp1XEXwZJ8vcuePYnXdKrMYz',\n    decimals: 9,\n\n    detailLink:\n      'https://raydium.medium.com/genopets-is-launching-on-acceleraytor-a4cba0b9f78b',\n    details:\n      'Genopets is the world’s first Free-to-Play, Move-to-Earn NFT game that makes it fun and rewarding to live an active lifestyle. Build on Solana, Genopets integrates your daily activity in real life with blockchain Play-to-Earn economics so you can turn your real-life actions into expansive gameplay and earn crypto while doing it.',\n    docs: {\n      website: 'https://www.genopets.me/',\n      // whitepaper: ''\n    },\n    socials: {\n      Discord: 'https://discord.gg/genopets',\n      Medium: 'https://medium.com/@genopets',\n      Twitter: 'https://twitter.com/genopets',\n    },\n    tags: ['raydium'],\n  },\n  DFL: {\n    symbol: 'DFL',\n    name: 'DeFi Land',\n    mintAddress: 'DFL1zNkaGPWm1BqAVqRjCZvHmwTFrEaJtbzJWgseoNJh',\n    decimals: 9,\n\n    detailLink:\n      'https://raydium.medium.com/defi-land-is-launching-on-acceleraytor-8aa06caecc3c',\n    details:\n      'DeFi Land is a multi-chain agriculture simulation web game created to gamify decentralized finance. The game will have all the features that traditional platforms have, but it will be gathered all in one place. DeFi Land gamifies decentralized finance by turning investment activities into games.',\n    docs: {\n      website: 'https://defiland.app/',\n      // whitepaper: ''\n    },\n    socials: {\n      Discord: 'https://discord.gg/defiland',\n      Medium: 'https://defiland.medium.com/',\n      Twitter: 'https://twitter.com/DeFi_Land',\n      Telegram: 'https://t.me/defiland_official',\n    },\n    tags: ['raydium'],\n  },\n  CHEEMS: {\n    symbol: 'CHEEMS',\n    name: 'CHEEMS',\n    mintAddress: '3FoUAsGDbvTD6YZ4wVKJgTB76onJUKz7GPEBNiR5b8wc',\n    decimals: 4,\n    referrer: '',\n    tags: ['raydium'],\n  },\n  stSOL: {\n    symbol: 'stSOL',\n    name: 'stSOL',\n    mintAddress: '7dHbWXmci3dT8UFYWYZweBLXgycu7Y3iL6trKn1Y7ARj',\n    decimals: 9,\n    referrer: '8Mq4Tugv1fcT4gb1wf5ChdEFmdqNGKxFVCnM9TVe44vD',\n    tags: ['raydium'],\n  },\n  LARIX: {\n    symbol: 'LARIX',\n    name: 'LARIX',\n    mintAddress: 'Lrxqnh6ZHKbGy3dcrCED43nsoLkM1LTzU2jRfWe8qUC',\n    decimals: 6,\n    referrer: 'DReKowvoxxEDdi5jnxBWJLTV73D9oHSt9uNMuSCk9cLk',\n    tags: ['raydium'],\n  },\n  RIN: {\n    symbol: 'RIN',\n    name: 'RIN',\n    mintAddress: 'E5ndSkaB17Dm7CsD22dvcjfrYSDLCxFcMd6z8ddCk5wp',\n    decimals: 9,\n    tags: ['raydium'],\n  },\n  APEX: {\n    symbol: 'APEX',\n    name: 'APEX',\n    mintAddress: '51tMb3zBKDiQhNwGqpgwbavaGH54mk8fXFzxTc1xnasg',\n    decimals: 9,\n    tags: ['raydium'],\n  },\n  MNDE: {\n    symbol: 'MNDE',\n    name: 'MNDE',\n    mintAddress: 'MNDEFzGvMt87ueuHvVU9VcTqsAP5b3fTGPsHuuPA5ey',\n    decimals: 9,\n    tags: ['raydium'],\n  },\n  LIQ: {\n    symbol: 'LIQ',\n    name: 'LIQ',\n    mintAddress: '4wjPQJ6PrkC4dHhYghwJzGBVP78DkBzA2U3kHoFNBuhj',\n    decimals: 6,\n    tags: ['raydium'],\n  },\n  WAG: {\n    symbol: 'WAG',\n    name: 'WAG',\n    mintAddress: '5tN42n9vMi6ubp67Uy4NnmM5DMZYN8aS8GeB3bEDHr6E',\n    decimals: 9,\n    tags: ['raydium'],\n  },\n  wLDO: {\n    symbol: 'wLDO',\n    name: 'wLDO',\n    mintAddress: 'HZRCwxP2Vq9PCpPXooayhJ2bxTpo5xfpQrwB1svh332p',\n    decimals: 8,\n    tags: ['raydium'],\n  },\n  SLIM: {\n    symbol: 'SLIM',\n    name: 'SLIM',\n    mintAddress: 'xxxxa1sKNGwFtw2kFn8XauW9xq8hBZ5kVtcSesTT9fW',\n    decimals: 6,\n    tags: ['raydium'],\n  },\n  PRT: {\n    symbol: 'PRT',\n    name: 'PRT',\n    mintAddress: 'PRT88RkA4Kg5z7pKnezeNH4mafTvtQdfFgpQTGRjz44',\n    decimals: 6,\n    tags: ['raydium'],\n  },\n  SBR: {\n    symbol: 'SBR',\n    name: 'SBR',\n    mintAddress: 'Saber2gLauYim4Mvftnrasomsv6NvAuncvMEZwcLpD1',\n    decimals: 6,\n    tags: ['raydium'],\n  },\n  FAB: {\n    symbol: 'FAB',\n    name: 'FAB',\n    mintAddress: 'EdAhkbj5nF9sRM7XN7ewuW8C9XEUMs8P7cnoQ57SYE96',\n    decimals: 9,\n    tags: ['raydium'],\n  },\n  ABR: {\n    symbol: 'ABR',\n    name: 'ABR',\n    mintAddress: 'a11bdAAuV8iB2fu7X6AxAvDTo1QZ8FXB3kk5eecdasp',\n    decimals: 9,\n    tags: ['raydium'],\n  },\n  IVN: {\n    symbol: 'IVN',\n    name: 'IVN',\n    mintAddress: 'iVNcrNE9BRZBC9Aqf753iZiZfbszeAVUoikgT9yvr2a',\n    decimals: 6,\n    tags: ['raydium'],\n  },\n  CYS: {\n    symbol: 'CYS',\n    name: 'CYS',\n    mintAddress: 'BRLsMczKuaR5w9vSubF4j8HwEGGprVAyyVgS4EX7DKEg',\n    decimals: 6,\n    tags: ['raydium'],\n  },\n  FRKT: {\n    symbol: 'FRKT',\n    name: 'FRKT',\n    mintAddress: 'ErGB9xa24Szxbk1M28u2Tx8rKPqzL6BroNkkzk5rG4zj',\n    decimals: 8,\n    tags: ['raydium'],\n  },\n  AURY: {\n    symbol: 'AURY',\n    name: 'AURY',\n    mintAddress: 'AURYydfxJib1ZkTir1Jn1J9ECYUtjb6rKQVmtYaixWPP',\n    decimals: 9,\n    tags: ['raydium'],\n  },\n  SYP: {\n    symbol: 'SYP',\n    name: 'SYP',\n    mintAddress: 'FnKE9n6aGjQoNWRBZXy4RW6LZVao7qwBonUbiD7edUmZ',\n    decimals: 9,\n    tags: ['raydium'],\n  },\n  WOOF: {\n    symbol: 'WOOF',\n    name: 'WOOF',\n    mintAddress: '9nEqaUcb16sQ3Tn1psbkWqyhPdLmfHWjKGymREjsAgTE',\n    decimals: 6,\n    tags: ['raydium'],\n  },\n  ORCA: {\n    symbol: 'ORCA',\n    name: 'ORCA',\n    mintAddress: 'orcaEKTdK7LKz57vaAYr9QeNsVEPfiu6QeMU1kektZE',\n    decimals: 6,\n    tags: ['raydium'],\n  },\n  SLND: {\n    symbol: 'SLND',\n    name: 'SLND',\n    mintAddress: 'SLNDpmoWTVADgEdndyvWzroNL7zSi1dF9PC3xHGtPwp',\n    decimals: 6,\n    tags: ['raydium'],\n  },\n  weWETH: {\n    symbol: 'weWETH',\n    name: 'weWETH',\n    mintAddress: '7vfCXTUXx5WJV5JADk17DUJ4ksgau7utNKj4b963voxs',\n    decimals: 8,\n    tags: ['raydium'],\n  },\n  weUNI: {\n    symbol: 'weUNI',\n    name: 'weUNI',\n    mintAddress: '8FU95xFJhUUkyyCLU13HSzDLs7oC4QZdXQHL6SCeab36',\n    decimals: 8,\n    tags: ['raydium'],\n  },\n  weSUSHI: {\n    symbol: 'weSUSHI',\n    name: 'weSUSHI',\n    mintAddress: 'ChVzxWRmrTeSgwd3Ui3UumcN8KX7VK3WaD4KGeSKpypj',\n    decimals: 8,\n    tags: ['raydium'],\n  },\n  GOFX: {\n    symbol: 'GOFX',\n    name: 'GOFX',\n    mintAddress: 'GFX1ZjR2P15tmrSwow6FjyDYcEkoFb4p4gJCpLBjaxHD',\n    decimals: 9,\n    tags: ['raydium'],\n  },\n  IN: {\n    symbol: 'IN',\n    name: 'IN',\n    mintAddress: 'inL8PMVd6iiW3RCBJnr5AsrRN6nqr4BTrcNuQWQSkvY',\n    decimals: 9,\n    tags: ['raydium'],\n  },\n  weDYDX: {\n    symbol: 'weDYDX',\n    name: 'weDYDX',\n    mintAddress: '4Hx6Bj56eGyw8EJrrheM6LBQAvVYRikYCWsALeTrwyRU',\n    decimals: 8,\n    tags: ['raydium'],\n  },\n  STARS: {\n    symbol: 'STARS',\n    name: 'STARS',\n    mintAddress: 'HCgybxq5Upy8Mccihrp7EsmwwFqYZtrHrsmsKwtGXLgW',\n    decimals: 6,\n    tags: ['raydium'],\n  },\n  weAXS: {\n    symbol: 'weAXS',\n    name: 'weAXS',\n    mintAddress: 'HysWcbHiYY9888pHbaqhwLYZQeZrcQMXKQWRqS7zcPK5',\n    decimals: 8,\n    tags: ['raydium'],\n  },\n  weSHIB: {\n    symbol: 'weSHIB',\n    name: 'weSHIB',\n    mintAddress: 'CiKu4eHsVrc1eueVQeHn7qhXTcVu95gSQmBpX4utjL9z',\n    decimals: 8,\n    tags: ['raydium'],\n  },\n  OXS: {\n    symbol: 'OXS',\n    name: 'OXS',\n    mintAddress: '4TGxgCSJQx2GQk9oHZ8dC5m3JNXTYZHjXumKAW3vLnNx',\n    decimals: 9,\n    tags: ['raydium'],\n  },\n  CWAR: {\n    symbol: 'CWAR',\n    name: 'CWAR',\n    mintAddress: 'HfYFjMKNZygfMC8LsQ8LtpPsPxEJoXJx4M6tqi75Hajo',\n    decimals: 9,\n    tags: ['raydium'],\n  },\n  UPS: {\n    symbol: 'UPS',\n    name: 'UPS',\n    mintAddress: 'EwJN2GqUGXXzYmoAciwuABtorHczTA5LqbukKXV1viH7',\n    decimals: 6,\n    tags: ['raydium'],\n  },\n  weSAND: {\n    symbol: 'weSAND',\n    name: 'weSAND',\n    mintAddress: '49c7WuCZkQgc3M4qH8WuEUNXfgwupZf1xqWkDQ7gjRGt',\n    decimals: 8,\n    tags: ['raydium'],\n  },\n  weMANA: {\n    symbol: 'weMANA',\n    name: 'weMANA',\n    mintAddress: '7dgHoN8wBZCc5wbnQ2C47TDnBMAxG4Q5L3KjP67z8kNi',\n    decimals: 8,\n    tags: ['raydium'],\n  },\n  CAVE: {\n    symbol: 'CAVE',\n    name: 'CAVE',\n    mintAddress: '4SZjjNABoqhbd4hnapbvoEPEqT8mnNkfbEoAwALf1V8t',\n    decimals: 6,\n    tags: ['raydium'],\n  },\n  JSOL: {\n    symbol: 'JSOL',\n    name: 'JSOL',\n    mintAddress: '7Q2afV64in6N6SeZsAAB81TJzwDoD6zpqmHkzi9Dcavn',\n    decimals: 9,\n    tags: ['raydium'],\n  },\n  APT: {\n    symbol: 'APT',\n    name: 'APT',\n    mintAddress: 'APTtJyaRX5yGTsJU522N4VYWg3vCvSb65eam5GrPT5Rt',\n    decimals: 6,\n    tags: ['raydium'],\n  },\n  SONAR: {\n    symbol: 'SONAR',\n    name: 'SONAR',\n    mintAddress: 'sonarX4VtVkQemriJeLm6CKeW3GDMyiBnnAEMw1MRAE',\n    decimals: 9,\n    tags: ['raydium'],\n  },\n  SHILL: {\n    symbol: 'SHILL',\n    name: 'SHILL',\n    mintAddress: '6cVgJUqo4nmvQpbgrDZwyfd6RwWw5bfnCamS3M9N1fd',\n    decimals: 6,\n    tags: ['raydium'],\n  },\n  TTT: {\n    symbol: 'TTT',\n    name: 'TabTrader',\n    mintAddress: 'FNFKRV3V8DtA3gVJN6UshMiLGYA8izxFwkNWmJbFjmRj',\n    decimals: 6,\n\n    detailLink:\n      'https://raydium.medium.com/tabtrader-is-launching-on-acceleraytor-bc570b6a9628',\n    details:\n      'TabTrader is a trading terminal that supports 34 exchanges with over 12,000 instruments, a variety of analytical tools, and a convenient interface. It’s a quick-access application allowing you to track your exchange accounts, trade, analyze charts, and get instantly notified on price changes, all within one unified interface. The app has a rating of 4.7 on the Apple App Store (with over 52,000 ratings) and a rating of 4.5 on the Google Play Store (with over 55,000 ratings).',\n    docs: {\n      website: 'https://tab-trader.com/',\n      // whitepaper: ''\n    },\n    socials: {\n      Twitter: 'https://twitter.com/tabtraderpro',\n      Telegram: 'https://t.me/tabtrader_en',\n    },\n    tags: ['raydium'],\n  },\n  BOKU: {\n    symbol: 'BOKU',\n    name: 'BOKU',\n    mintAddress: 'CN7qFa5iYkHz99PTctvT4xXUHnxwjQ5MHxCuTJtPN5uS',\n    decimals: 9,\n    tags: ['raydium'],\n  },\n  MIMO: {\n    symbol: 'MIMO',\n    name: 'MIMO',\n    mintAddress: '9TE7ebz1dsFo1uQ2T4oYAKSm39Y6fWuHrd6Uk6XaiD16',\n    decimals: 9,\n    tags: ['raydium'],\n  },\n  wbWBNB: {\n    symbol: 'wbWBNB',\n    name: 'wbWBNB',\n    mintAddress: '9gP2kCy3wA1ctvYWQk75guqXuHfrEomqydHLtcTCqiLa',\n    decimals: 8,\n    tags: ['raydium'],\n  },\n  wePEOPLE: {\n    symbol: 'wePEOPLE',\n    name: 'wePEOPLE',\n    mintAddress: 'CobcsUrt3p91FwvULYKorQejgsm5HoQdv5T8RUZ6PnLA',\n    decimals: 8,\n    tags: ['raydium'],\n  },\n  XTAG: {\n    symbol: 'XTAG',\n    name: 'XTAG',\n    mintAddress: '5gs8nf4wojB5EXgDUWNLwXpknzgV2YWDhveAeBZpVLbp',\n    decimals: 6,\n    tags: ['raydium'],\n  },\n  KKO: {\n    symbol: 'KKO',\n    name: 'KKO',\n    mintAddress: 'kiNeKo77w1WBEzFFCXrTDRWGRWGP8yHvKC9rX6dqjQh',\n    decimals: 9,\n    tags: ['raydium'],\n  },\n  VI: {\n    symbol: 'VI',\n    name: 'VI',\n    mintAddress: '7zBWymxbZt7PVHQzfi3i85frc1YRiQc23K7bh3gos8ZC',\n    decimals: 9,\n    tags: ['raydium'],\n  },\n  SOLC: {\n    symbol: 'SOLC',\n    name: 'SOLC',\n    mintAddress: 'Bx1fDtvTN6NvE4kjdPHQXtmGSg582bZx9fGy4DQNMmAT',\n    decimals: 9,\n    tags: ['raydium'],\n  },\n  STR: {\n    symbol: 'STR',\n    name: 'STR',\n    mintAddress: '9zoqdwEBKWEi9G5Ze8BSkdmppxGgVv1Kw4LuigDiNr9m',\n    decimals: 9,\n    tags: ['raydium'],\n  },\n  SPWN: {\n    symbol: 'SPWN',\n    name: 'SPWN',\n    mintAddress: '5U9QqCPhqXAJcEv9uyzFJd5zhN93vuPk1aNNkXnUfPnt',\n    decimals: 9,\n    tags: ['raydium'],\n  },\n  ISOLA: {\n    symbol: 'ISOLA',\n    name: 'ISOLA',\n    mintAddress: '333iHoRM2Awhf9uVZtSyTfU8AekdGrgQePZsKMFPgKmS',\n    decimals: 6,\n    tags: ['raydium'],\n  },\n  RUN: {\n    symbol: 'RUN',\n    name: 'RUN',\n    mintAddress: '6F9XriABHfWhit6zmMUYAQBSy6XK5VF1cHXuW5LDpRtC',\n    decimals: 9,\n\n    detailLink:\n      'https://raydium.medium.com/runnode-is-launching-on-acceleraytor-3ff7326864b0',\n    details:\n      'RunNode is a bridge from web 2.0 to 3.0 and powers the infrastructure of Solana through its RPC protocol. With a quick onboarding application to get an RPC endpoint in under 30 seconds, any project can launch, build and scale its Solana dApp — now.',\n    docs: {\n      website: 'https://runnode.com/',\n      // whitepaper: ''\n    },\n    socials: {\n      Twitter: 'https://twitter.com/RunNode',\n      Telegram: 'https://t.me/runnode',\n      Discord: 'https://discord.gg/V2f74X8Zrt',\n    },\n\n    tags: ['raydium'],\n  },\n  REAL: {\n    symbol: 'REAL',\n    name: 'REAL',\n    mintAddress: 'AD27ov5fVU2XzwsbvnFvb1JpCBaCB5dRXrczV9CqSVGb',\n    decimals: 9,\n\n    detailLink:\n      'https://raydium.medium.com/realy-is-launching-on-acceleraytor-b6d6a63d69d8',\n    details:\n      'Realy Metaverse will be the 1st Live-to-Earn metaverse on Solana. Developed via Unreal Engine, Realy is a virtual city with AAA graphics that seamlessly integrates virtual and reality.',\n    docs: {\n      website: 'https://realy.pro/',\n      // whitepaper: ''\n    },\n    socials: {\n      Twitter: 'https://twitter.com/RealyOfficial',\n      Telegram: 'https://t.me/realyofficial',\n      Discord: 'https://discord.gg/realy',\n    },\n\n    tags: ['raydium'],\n  },\n  CRWNY: {\n    symbol: 'CRWNY',\n    name: 'CRWNY',\n    mintAddress: 'CRWNYkqdgvhGGae9CKfNka58j6QQkaD5bLhKXvUYqnc1',\n    decimals: 6,\n    tags: ['raydium'],\n  },\n  BLOCK: {\n    symbol: 'BLOCK',\n    name: 'BLOCK',\n    mintAddress: 'NFTUkR4u7wKxy9QLaX2TGvd9oZSWoMo4jqSJqdMb7Nk',\n    decimals: 6,\n    tags: ['raydium'],\n  },\n  SOLAR: {\n    symbol: 'SOLAR',\n    name: 'SOLAR',\n    mintAddress: '2wmKXX1xsxLfrvjEPrt2UHiqj8Gbzwxvffr9qmNjsw8g',\n    decimals: 9,\n    tags: ['raydium'],\n  },\n  BASIS: {\n    symbol: 'BASIS',\n    name: 'BASIS',\n    mintAddress: 'Basis9oJw9j8cw53oMV7iqsgo6ihi9ALw4QR31rcjUJa',\n    decimals: 6,\n    tags: ['raydium'],\n  },\n  SOLX: {\n    symbol: 'SOLX',\n    name: 'SOLX',\n    mintAddress: 'CH74tuRLTYcxG7qNJCsV9rghfLXJCQJbsu7i52a8F1Gn',\n    decimals: 9,\n    tags: ['raydium'],\n  },\n  CHICKS: {\n    symbol: 'CHICKS',\n    name: 'CHICKS',\n    mintAddress: 'cxxShYRVcepDudXhe7U62QHvw8uBJoKFifmzggGKVC2',\n    decimals: 9,\n    tags: ['raydium'],\n  },\n  GST: {\n    symbol: 'GST',\n    name: 'GST',\n    mintAddress: 'AFbX8oGjGpmVFywbVouvhQSRmiW2aR1mohfahi4Y2AdB',\n    decimals: 9,\n    tags: ['raydium'],\n  },\n  MBS: {\n    symbol: 'MBS',\n    name: 'MBS',\n    mintAddress: 'Fm9rHUTF5v3hwMLbStjZXqNBBoZyGriQaFM6sTFz3K8A',\n    decimals: 6,\n    tags: ['raydium'],\n  },\n  PRISM: {\n    symbol: 'PRISM',\n    name: 'PRISM',\n    mintAddress: 'PRSMNsEPqhGVCH1TtWiJqPjJyh2cKrLostPZTNy1o5x',\n    decimals: 6,\n    tags: ['raydium'],\n  },\n  MEAN: {\n    symbol: 'MEAN',\n    name: 'MEAN',\n    mintAddress: 'MEANeD3XDdUmNMsRGjASkSWdC8prLYsoRJ61pPeHctD',\n    decimals: 6,\n    tags: ['raydium'],\n  },\n  TINY: {\n    symbol: 'TINY',\n    name: 'TINY',\n    mintAddress: 'HKfs24UEDQpHS5hUyKYkHd9q7GY5UQ679q2bokeL2whu',\n    decimals: 6,\n    tags: ['raydium'],\n  },\n  SHDW: {\n    symbol: 'SHDW',\n    name: 'SHDW',\n    mintAddress: 'SHDWyBxihqiCj6YekG2GUr7wqKLeLAMK1gHZck9pL6y',\n    decimals: 9,\n    tags: ['raydium'],\n  },\n  SCY: {\n    symbol: 'SCY',\n    name: 'SCY',\n    mintAddress: 'SCYfrGCw8aDiqdgcpdGjV6jp4UVVQLuphxTDLNWu36f',\n    decimals: 9,\n    tags: ['raydium'],\n  },\n  SLC: {\n    symbol: 'SLC',\n    name: 'SLC',\n    mintAddress: 'METAmTMXwdb8gYzyCPfXXFmZZw4rUsXX58PNsDg7zjL',\n    decimals: 6,\n    tags: ['raydium'],\n  },\n};\n\nexport const LP_TOKENS: Tokens = {\n  'RAY-WUSDT': {\n    symbol: 'RAY-WUSDT',\n    name: 'RAY-WUSDT V2 LP',\n    coin: { ...TOKENS.RAY },\n    pc: { ...TOKENS.WUSDT },\n\n    mintAddress: 'CzPDyvotTcxNqtPne32yUiEVQ6jk42HZi1Y3hUu7qf7f',\n    decimals: TOKENS.RAY.decimals,\n  },\n  'RAY-SOL': {\n    symbol: 'RAY-SOL',\n    name: 'RAY-SOL LP',\n    coin: { ...TOKENS.RAY },\n    pc: { ...NATIVE_SOL },\n\n    mintAddress: '134Cct3CSdRCbYgq5SkwmHgfwjJ7EM5cG9PzqffWqECx',\n    decimals: TOKENS.RAY.decimals,\n  },\n  'LINK-WUSDT': {\n    symbol: 'LINK-WUSDT',\n    name: 'LINK-WUSDT LP',\n    coin: { ...TOKENS.LINK },\n    pc: { ...TOKENS.WUSDT },\n\n    mintAddress: 'EVDmwajM5U73PD34bYPugwiA4Eqqbrej4mLXXv15Z5qR',\n    decimals: TOKENS.LINK.decimals,\n  },\n  'ETH-WUSDT': {\n    symbol: 'ETH-WUSDT',\n    name: 'ETH-WUSDT LP',\n    coin: { ...TOKENS.ETH },\n    pc: { ...TOKENS.WUSDT },\n\n    mintAddress: 'KY4XvwHy7JPzbWYAbk23jQvEb4qWJ8aCqYWREmk1Q7K',\n    decimals: TOKENS.ETH.decimals,\n  },\n  'RAY-USDC': {\n    symbol: 'RAY-USDC',\n    name: 'RAY-USDC V2 LP',\n    coin: { ...TOKENS.RAY },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'FgmBnsF5Qrnv8X9bomQfEtQTQjNNiBCWRKGpzPnE5BDg',\n    decimals: TOKENS.RAY.decimals,\n  },\n  'RAY-SRM': {\n    symbol: 'RAY-SRM',\n    name: 'RAY-SRM V2 LP',\n    coin: { ...TOKENS.RAY },\n    pc: { ...TOKENS.SRM },\n\n    mintAddress: '5QXBMXuCL7zfAk39jEVVEvcrz1AvBGgT9wAhLLHLyyUJ',\n    decimals: TOKENS.RAY.decimals,\n  },\n  // v3\n  'RAY-WUSDT-V3': {\n    symbol: 'RAY-WUSDT',\n    name: 'RAY-WUSDT V3 LP',\n    coin: { ...TOKENS.RAY },\n    pc: { ...TOKENS.WUSDT },\n\n    mintAddress: 'FdhKXYjCou2jQfgKWcNY7jb8F2DPLU1teTTTRfLBD2v1',\n    decimals: TOKENS.RAY.decimals,\n  },\n  'RAY-USDC-V3': {\n    symbol: 'RAY-USDC',\n    name: 'RAY-USDC V3 LP',\n    coin: { ...TOKENS.RAY },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'BZFGfXMrjG2sS7QT2eiCDEevPFnkYYF7kzJpWfYxPbcx',\n    decimals: TOKENS.RAY.decimals,\n  },\n  'RAY-SRM-V3': {\n    symbol: 'RAY-SRM',\n    name: 'RAY-SRM V3 LP',\n    coin: { ...TOKENS.RAY },\n    pc: { ...TOKENS.SRM },\n\n    mintAddress: 'DSX5E21RE9FB9hM8Nh8xcXQfPK6SzRaJiywemHBSsfup',\n    decimals: TOKENS.RAY.decimals,\n  },\n  'RAY-SOL-V3': {\n    symbol: 'RAY-SOL',\n    name: 'RAY-SOL V3 LP',\n    coin: { ...TOKENS.RAY },\n    pc: { ...NATIVE_SOL },\n\n    mintAddress: 'F5PPQHGcznZ2FxD9JaxJMXaf7XkaFFJ6zzTBcW8osQjw',\n    decimals: TOKENS.RAY.decimals,\n  },\n  'RAY-ETH-V3': {\n    symbol: 'RAY-ETH',\n    name: 'RAY-ETH V3 LP',\n    coin: { ...TOKENS.RAY },\n    pc: { ...TOKENS.ETH },\n\n    mintAddress: '8Q6MKy5Yxb9vG1mWzppMtMb2nrhNuCRNUkJTeiE3fuwD',\n    decimals: TOKENS.RAY.decimals,\n  },\n  // v4\n  'FIDA-RAY-V4': {\n    symbol: 'FIDA-RAY',\n    name: 'FIDA-RAY LP',\n    coin: { ...TOKENS.FIDA },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: 'DsBuznXRTmzvEdb36Dx3aVLVo1XmH7r1PRZUFugLPTFv',\n    decimals: TOKENS.FIDA.decimals,\n  },\n  'OXY-RAY-V4': {\n    symbol: 'OXY-RAY',\n    name: 'OXY-RAY LP',\n    coin: { ...TOKENS.OXY },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: 'FwaX9W7iThTZH5MFeasxdLpxTVxRcM7ZHieTCnYog8Yb',\n    decimals: TOKENS.OXY.decimals,\n  },\n  'MAPS-RAY-V4': {\n    symbol: 'MAPS-RAY',\n    name: 'MAPS-RAY LP',\n    coin: { ...TOKENS.MAPS },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: 'CcKK8srfVdTSsFGV3VLBb2YDbzF4T4NM2C3UEjC39RLP',\n    decimals: TOKENS.MAPS.decimals,\n  },\n  'KIN-RAY-V4': {\n    symbol: 'KIN-RAY',\n    name: 'KIN-RAY LP',\n    coin: { ...TOKENS.KIN },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: 'CHT8sft3h3gpLYbCcZ9o27mT5s3Z6VifBVbUiDvprHPW',\n    decimals: 6,\n  },\n  'RAY-USDT-V4': {\n    symbol: 'RAY-USDT',\n    name: 'RAY-USDT LP',\n    coin: { ...TOKENS.RAY },\n    pc: { ...TOKENS.USDT },\n\n    mintAddress: 'C3sT1R3nsw4AVdepvLTLKr5Gvszr7jufyBWUCvy4TUvT',\n    decimals: TOKENS.RAY.decimals,\n  },\n  'SOL-USDC-V4': {\n    symbol: 'SOL-USDC',\n    name: 'SOL-USDC LP',\n    coin: { ...NATIVE_SOL },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '8HoQnePLqPj4M7PUDzfw8e3Ymdwgc7NLGnaTUapubyvu',\n    decimals: NATIVE_SOL.decimals,\n  },\n  'YFI-USDC-V4': {\n    symbol: 'YFI-USDC',\n    name: 'YFI-USDC LP',\n    coin: { ...TOKENS.YFI },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '865j7iMmRRycSYUXzJ33ZcvLiX9JHvaLidasCyUyKaRE',\n    decimals: TOKENS.YFI.decimals,\n  },\n  'SRM-USDC-V4': {\n    symbol: 'SRM-USDC',\n    name: 'SRM-USDC LP',\n    coin: { ...TOKENS.SRM },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '9XnZd82j34KxNLgQfz29jGbYdxsYznTWRpvZE3SRE7JG',\n    decimals: TOKENS.SRM.decimals,\n  },\n  'FTT-USDC-V4': {\n    symbol: 'FTT-USDC',\n    name: 'FTT-USDC LP',\n    coin: { ...TOKENS.FTT },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '75dCoKfUHLUuZ4qEh46ovsxfgWhB4icc3SintzWRedT9',\n    decimals: TOKENS.FTT.decimals,\n  },\n  'BTC-USDC-V4': {\n    symbol: 'BTC-USDC',\n    name: 'BTC-USDC LP',\n    coin: { ...TOKENS.BTC },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '2hMdRdVWZqetQsaHG8kQjdZinEMBz75vsoWTCob1ijXu',\n    decimals: TOKENS.BTC.decimals,\n  },\n  'SUSHI-USDC-V4': {\n    symbol: 'SUSHI-USDC',\n    name: 'SUSHI-USDC LP',\n    coin: { ...TOKENS.SUSHI },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '2QVjeR9d2PbSf8em8NE8zWd8RYHjFtucDUdDgdbDD2h2',\n    decimals: TOKENS.SUSHI.decimals,\n  },\n  'TOMO-USDC-V4': {\n    symbol: 'TOMO-USDC',\n    name: 'TOMO-USDC LP',\n    coin: { ...TOKENS.TOMO },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'CHyUpQFeW456zcr5XEh4RZiibH8Dzocs6Wbgz9aWpXnQ',\n    decimals: TOKENS.TOMO.decimals,\n  },\n  'LINK-USDC-V4': {\n    symbol: 'LINK-USDC',\n    name: 'LINK-USDC LP',\n    coin: { ...TOKENS.LINK },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'BqjoYjqKrXtfBKXeaWeAT5sYCy7wsAYf3XjgDWsHSBRs',\n    decimals: TOKENS.LINK.decimals,\n  },\n  'ETH-USDC-V4': {\n    symbol: 'ETH-USDC',\n    name: 'ETH-USDC LP',\n    coin: { ...TOKENS.ETH },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '13PoKid6cZop4sj2GfoBeujnGfthUbTERdE5tpLCDLEY',\n    decimals: TOKENS.ETH.decimals,\n  },\n  'xCOPE-USDC-V4': {\n    symbol: 'xCOPE-USDC',\n    name: 'xCOPE-USDC LP',\n    coin: { ...TOKENS.xCOPE },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '2Vyyeuyd15Gp8aH6uKE72c4hxc8TVSLibxDP9vzspQWG',\n    decimals: TOKENS.xCOPE.decimals,\n  },\n  'SOL-USDT-V4': {\n    symbol: 'SOL-USDT',\n    name: 'SOL-USDT LP',\n    coin: { ...NATIVE_SOL },\n    pc: { ...TOKENS.USDT },\n\n    mintAddress: 'Epm4KfTj4DMrvqn6Bwg2Tr2N8vhQuNbuK8bESFp4k33K',\n    decimals: NATIVE_SOL.decimals,\n  },\n  'YFI-USDT-V4': {\n    symbol: 'YFI-USDT',\n    name: 'YFI-USDT LP',\n    coin: { ...TOKENS.YFI },\n    pc: { ...TOKENS.USDT },\n\n    mintAddress: 'FA1i7fej1pAbQbnY8NbyYUsTrWcasTyipKreDgy1Mgku',\n    decimals: TOKENS.YFI.decimals,\n  },\n  'SRM-USDT-V4': {\n    symbol: 'SRM-USDT',\n    name: 'SRM-USDT LP',\n    coin: { ...TOKENS.SRM },\n    pc: { ...TOKENS.USDT },\n\n    mintAddress: 'HYSAu42BFejBS77jZAZdNAWa3iVcbSRJSzp3wtqCbWwv',\n    decimals: TOKENS.SRM.decimals,\n  },\n  'FTT-USDT-V4': {\n    symbol: 'FTT-USDT',\n    name: 'FTT-USDT LP',\n    coin: { ...TOKENS.FTT },\n    pc: { ...TOKENS.USDT },\n\n    mintAddress: '2cTCiUnect5Lap2sk19xLby7aajNDYseFhC9Pigou11z',\n    decimals: TOKENS.FTT.decimals,\n  },\n  'BTC-USDT-V4': {\n    symbol: 'BTC-USDT',\n    name: 'BTC-USDT LP',\n    coin: { ...TOKENS.BTC },\n    pc: { ...TOKENS.USDT },\n\n    mintAddress: 'DgGuvR9GSHimopo3Gc7gfkbKamLKrdyzWkq5yqA6LqYS',\n    decimals: TOKENS.BTC.decimals,\n  },\n  'SUSHI-USDT-V4': {\n    symbol: 'SUSHI-USDT',\n    name: 'SUSHI-USDT LP',\n    coin: { ...TOKENS.SUSHI },\n    pc: { ...TOKENS.USDT },\n\n    mintAddress: 'Ba26poEYDy6P2o95AJUsewXgZ8DM9BCsmnU9hmC9i4Ki',\n    decimals: TOKENS.SUSHI.decimals,\n  },\n  'TOMO-USDT-V4': {\n    symbol: 'TOMO-USDT',\n    name: 'TOMO-USDT LP',\n    coin: { ...TOKENS.TOMO },\n    pc: { ...TOKENS.USDT },\n\n    mintAddress: 'D3iGro1vn6PWJXo9QAPj3dfta6dKkHHnmiiym2EfsAmi',\n    decimals: TOKENS.TOMO.decimals,\n  },\n  'LINK-USDT-V4': {\n    symbol: 'LINK-USDT',\n    name: 'LINK-USDT LP',\n    coin: { ...TOKENS.LINK },\n    pc: { ...TOKENS.USDT },\n\n    mintAddress: 'Dr12Sgt9gkY8WU5tRkgZf1TkVWJbvjYuPAhR3aDCwiiX',\n    decimals: TOKENS.LINK.decimals,\n  },\n  'ETH-USDT-V4': {\n    symbol: 'ETH-USDT',\n    name: 'ETH-USDT LP',\n    coin: { ...TOKENS.ETH },\n    pc: { ...TOKENS.USDT },\n\n    mintAddress: 'nPrB78ETY8661fUgohpuVusNCZnedYCgghzRJzxWnVb',\n    decimals: TOKENS.ETH.decimals,\n  },\n  'YFI-SRM-V4': {\n    symbol: 'YFI-SRM',\n    name: 'YFI-SRM LP',\n    coin: { ...TOKENS.YFI },\n    pc: { ...TOKENS.SRM },\n\n    mintAddress: 'EGJht91R7dKpCj8wzALkjmNdUUUcQgodqWCYweyKcRcV',\n    decimals: TOKENS.YFI.decimals,\n  },\n  'FTT-SRM-V4': {\n    symbol: 'FTT-SRM',\n    name: 'FTT-SRM LP',\n    coin: { ...TOKENS.FTT },\n    pc: { ...TOKENS.SRM },\n\n    mintAddress: 'AsDuPg9MgPtt3jfoyctUCUgsvwqAN6RZPftqoeiPDefM',\n    decimals: TOKENS.FTT.decimals,\n  },\n  'BTC-SRM-V4': {\n    symbol: 'BTC-SRM',\n    name: 'BTC-SRM LP',\n    coin: { ...TOKENS.BTC },\n    pc: { ...TOKENS.SRM },\n\n    mintAddress: 'AGHQxXb3GSzeiLTcLtXMS2D5GGDZxsB2fZYZxSB5weqB',\n    decimals: TOKENS.BTC.decimals,\n  },\n  'SUSHI-SRM-V4': {\n    symbol: 'SUSHI-SRM',\n    name: 'SUSHI-SRM LP',\n    coin: { ...TOKENS.SUSHI },\n    pc: { ...TOKENS.SRM },\n\n    mintAddress: '3HYhUnUdV67j1vn8fu7ExuVGy5dJozHEyWvqEstDbWwE',\n    decimals: TOKENS.SUSHI.decimals,\n  },\n  'TOMO-SRM-V4': {\n    symbol: 'TOMO-SRM',\n    name: 'TOMO-SRM LP',\n    coin: { ...TOKENS.TOMO },\n    pc: { ...TOKENS.SRM },\n\n    mintAddress: 'GgH9RnKrQpaMQeqmdbMvs5oo1A24hERQ9wuY2pSkeG7x',\n    decimals: TOKENS.TOMO.decimals,\n  },\n  'LINK-SRM-V4': {\n    symbol: 'LINK-SRM',\n    name: 'LINK-SRM LP',\n    coin: { ...TOKENS.LINK },\n    pc: { ...TOKENS.SRM },\n\n    mintAddress: 'GXN6yJv12o18skTmJXaeFXZVY1iqR18CHsmCT8VVCmDD',\n    decimals: TOKENS.LINK.decimals,\n  },\n  'ETH-SRM-V4': {\n    symbol: 'ETH-SRM',\n    name: 'ETH-SRM LP',\n    coin: { ...TOKENS.ETH },\n    pc: { ...TOKENS.SRM },\n\n    mintAddress: '9VoY3VERETuc2FoadMSYYizF26mJinY514ZpEzkHMtwG',\n    decimals: TOKENS.ETH.decimals,\n  },\n  'SRM-SOL-V4': {\n    symbol: 'SRM-SOL',\n    name: 'SRM-SOL LP',\n    coin: { ...TOKENS.SRM },\n    pc: { ...NATIVE_SOL },\n\n    mintAddress: 'AKJHspCwDhABucCxNLXUSfEzb7Ny62RqFtC9uNjJi4fq',\n    decimals: TOKENS.SRM.decimals,\n  },\n  'STEP-USDC-V4': {\n    symbol: 'STEP-USDC',\n    name: 'STEP-USDC LP',\n    coin: { ...TOKENS.STEP },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '3k8BDobgihmk72jVmXYLE168bxxQUhqqyESW4dQVktqC',\n    decimals: TOKENS.STEP.decimals,\n  },\n  'MEDIA-USDC-V4': {\n    symbol: 'MEDIA-USDC',\n    name: 'MEDIA-USDC LP',\n    coin: { ...TOKENS.MEDIA },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'A5zanvgtioZGiJMdEyaKN4XQmJsp1p7uVxaq2696REvQ',\n    decimals: TOKENS.MEDIA.decimals,\n  },\n  'ROPE-USDC-V4': {\n    symbol: 'ROPE-USDC',\n    name: 'ROPE-USDC LP',\n    coin: { ...TOKENS.ROPE },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'Cq4HyW5xia37tKejPF2XfZeXQoPYW6KfbPvxvw5eRoUE',\n    decimals: TOKENS.ROPE.decimals,\n  },\n  'MER-USDC-V4': {\n    symbol: 'MER-USDC',\n    name: 'MER-USDC LP',\n    coin: { ...TOKENS.MER },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '3H9NxvaZoxMZZDZcbBDdWMKbrfNj7PCF5sbRwDr7SdDW',\n    decimals: TOKENS.MER.decimals,\n  },\n  'COPE-USDC-V4': {\n    symbol: 'COPE-USDC',\n    name: 'COPE-USDC LP',\n    coin: { ...TOKENS.COPE },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'Cz1kUvHw98imKkrqqu95GQB9h1frY8RikxPojMwWKGXf',\n    decimals: TOKENS.COPE.decimals,\n  },\n  'ALEPH-USDC-V4': {\n    symbol: 'ALEPH-USDC',\n    name: 'ALEPH-USDC LP',\n    coin: { ...TOKENS.ALEPH },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'iUDasAP2nXm5wvTukAHEKSdSXn8vQkRtaiShs9ceGB7',\n    decimals: TOKENS.ALEPH.decimals,\n  },\n  'TULIP-USDC-V4': {\n    symbol: 'TULIP-USDC',\n    name: 'TULIP-USDC LP',\n    coin: { ...TOKENS.TULIP },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '2doeZGLJyACtaG9DCUyqMLtswesfje1hjNA11hMdj6YU',\n    decimals: TOKENS.TULIP.decimals,\n  },\n  'WOO-USDC-V4': {\n    symbol: 'WOO-USDC',\n    name: 'WOO-USDC LP',\n    coin: { ...TOKENS.WOO },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '7cu42ao8Jgrd5A3y3bNQsCxq5poyGZNmTydkGfJYQfzh',\n    decimals: TOKENS.WOO.decimals,\n  },\n  'SNY-USDC-V4': {\n    symbol: 'SNY-USDC',\n    name: 'SNY-USDC LP',\n    coin: { ...TOKENS.SNY },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'G8qcfeFqxwbCqpxv5LpLWxUCd1PyMB5nWb5e5YyxLMKg',\n    decimals: TOKENS.SNY.decimals,\n  },\n  'BOP-RAY-V4': {\n    symbol: 'BOP-RAY',\n    name: 'BOP-RAY LP',\n    coin: { ...TOKENS.BOP },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: '9nQPYJvysyfnXhQ6nkK5V7sZG26hmDgusfdNQijRk5LD',\n    decimals: TOKENS.BOP.decimals,\n  },\n  'SLRS-USDC-V4': {\n    symbol: 'SLRS-USDC',\n    name: 'SLRS-USDC LP',\n    coin: { ...TOKENS.SLRS },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '2Xxbm1hdv5wPeen5ponDSMT3VqhGMTQ7mH9stNXm9shU',\n    decimals: TOKENS.SLRS.decimals,\n  },\n  'SAMO-RAY-V4': {\n    symbol: 'SAMO-RAY',\n    name: 'SAMO-RAY LP',\n    coin: { ...TOKENS.SAMO },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: 'HwzkXyX8B45LsaHXwY8su92NoRBS5GQC32HzjQRDqPnr',\n    decimals: TOKENS.SAMO.decimals,\n  },\n  'renBTC-USDC-V4': {\n    symbol: 'renBTC-USDC',\n    name: 'renBTC-USDC LP',\n    coin: { ...TOKENS.renBTC },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'CTEpsih91ZLo5gunvryLpJ3pzMjmt5jbS6AnSQrzYw7V',\n    decimals: TOKENS.renBTC.decimals,\n  },\n  'renDOGE-USDC-V4': {\n    symbol: 'renDOGE-USDC',\n    name: 'renDOGE-USDC LP',\n    coin: { ...TOKENS.renDOGE },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'Hb8KnZNKvRxu7pgMRWJgoMSMcepfvNiBFFDDrdf9o3wA',\n    decimals: TOKENS.renDOGE.decimals,\n  },\n  'RAY-USDC-V4': {\n    symbol: 'RAY-USDC',\n    name: 'RAY-USDC LP',\n    coin: { ...TOKENS.RAY },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'FbC6K13MzHvN42bXrtGaWsvZY9fxrackRSZcBGfjPc7m',\n    decimals: TOKENS.RAY.decimals,\n  },\n  'RAY-SRM-V4': {\n    symbol: 'RAY-SRM',\n    name: 'RAY-SRM LP',\n    coin: { ...TOKENS.RAY },\n    pc: { ...TOKENS.SRM },\n\n    mintAddress: '7P5Thr9Egi2rvMmEuQkLn8x8e8Qro7u2U7yLD2tU2Hbe',\n    decimals: TOKENS.RAY.decimals,\n  },\n  'RAY-ETH-V4': {\n    symbol: 'RAY-ETH',\n    name: 'RAY-ETH LP',\n    coin: { ...TOKENS.RAY },\n    pc: { ...TOKENS.ETH },\n\n    mintAddress: 'mjQH33MqZv5aKAbKHi8dG3g3qXeRQqq1GFcXceZkNSr',\n    decimals: TOKENS.RAY.decimals,\n  },\n  'RAY-SOL-V4': {\n    symbol: 'RAY-SOL',\n    name: 'RAY-SOL LP',\n    coin: { ...TOKENS.RAY },\n    pc: { ...NATIVE_SOL },\n\n    mintAddress: '89ZKE4aoyfLBe2RuV6jM3JGNhaV18Nxh8eNtjRcndBip',\n    decimals: TOKENS.RAY.decimals,\n  },\n  'DXL-USDC-V4': {\n    symbol: 'DXL-USDC',\n    name: 'DXL-USDC LP',\n    coin: { ...TOKENS.DXL },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '4HFaSvfgskipvrzT1exoVKsUZ174JyExEsA8bDfsAdY5',\n    decimals: TOKENS.DXL.decimals,\n  },\n  'LIKE-USDC-V4': {\n    symbol: 'LIKE-USDC',\n    name: 'LIKE-USDC LP',\n    coin: { ...TOKENS.LIKE },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'cjZmbt8sJgaoyWYUttomAu5LJYU44ZrcKTbzTSEPDVw',\n    decimals: TOKENS.LIKE.decimals,\n  },\n  'mSOL-USDC-V4': {\n    symbol: 'mSOL-USDC',\n    name: 'mSOL-USDC LP',\n    coin: { ...TOKENS.mSOL },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '4xTpJ4p76bAeggXoYywpCCNKfJspbuRzZ79R7pRhbqSf',\n    decimals: TOKENS.mSOL.decimals,\n  },\n  'mSOL-SOL-V4': {\n    symbol: 'mSOL-SOL',\n    name: 'mSOL-SOL LP',\n    coin: { ...TOKENS.mSOL },\n    pc: { ...NATIVE_SOL },\n\n    mintAddress: '5ijRoAHVgd5T5CNtK5KDRUBZ7Bffb69nktMj5n6ks6m4',\n    decimals: TOKENS.mSOL.decimals,\n  },\n  'MER-PAI-V4': {\n    symbol: 'MER-PAI',\n    name: 'MER-PAI LP',\n    coin: { ...TOKENS.MER },\n    pc: { ...TOKENS.PAI },\n\n    mintAddress: 'DU5RT2D9EviaSmX6Ta8MZwMm85HwSEqGMRdqUiuCGfmD',\n    decimals: TOKENS.MER.decimals,\n  },\n  'PORT-USDC-V4': {\n    symbol: 'PORT-USDC',\n    name: 'PORT-USDC LP',\n    coin: { ...TOKENS.PORT },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '9tmNtbUCrLS15qC4tEfr5NNeqcqpZ4uiGgi2vS5CLQBS',\n    decimals: TOKENS.PORT.decimals,\n  },\n  'MNGO-USDC-V4': {\n    symbol: 'MNGO-USDC',\n    name: 'MNGO-USDC LP',\n    coin: { ...TOKENS.MNGO },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'DkiqCQ792n743xjWQVCbBUaVtkdiuvQeYndM53ReWnCC',\n    decimals: TOKENS.MNGO.decimals,\n  },\n  'ATLAS-USDC-V4': {\n    symbol: 'ATLAS-USDC',\n    name: 'ATLAS-USDC LP',\n    coin: { ...TOKENS.ATLAS },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '9shGU9f1EsxAbiR567MYZ78WUiS6ZNCYbHe53WUULQ7n',\n    decimals: TOKENS.ATLAS.decimals,\n  },\n  'POLIS-USDC-V4': {\n    symbol: 'POLIS-USDC',\n    name: 'POLIS-USDC LP',\n    coin: { ...TOKENS.POLIS },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '8MbKSBpyXs8fVneKgt71jfHrn5SWtX8n4wMLpiVfF9So',\n    decimals: TOKENS.POLIS.decimals,\n  },\n  'ATLAS-RAY-V4': {\n    symbol: 'ATLAS-RAY',\n    name: 'ATLAS-RAY LP',\n    coin: { ...TOKENS.ATLAS },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: '418MFhkaYQtbn529wmjLLqL6uKxDz7j4eZBaV1cobkyd',\n    decimals: TOKENS.ATLAS.decimals,\n  },\n  'POLIS-RAY-V4': {\n    symbol: 'POLIS-RAY',\n    name: 'POLIS-RAY LP',\n    coin: { ...TOKENS.POLIS },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: '9ysGKUH6WqzjQEUT4dxqYCUaFNVK9QFEa24pGzjFq8xg',\n    decimals: TOKENS.POLIS.decimals,\n  },\n  'ALEPH-RAY-V4': {\n    symbol: 'ALEPH-RAY',\n    name: 'ALEPH-RAY LP',\n    coin: { ...TOKENS.ALEPH },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: 'n76skjqv4LirhdLok2zJELXNLdRpYDgVJQuQFbamscy',\n    decimals: TOKENS.ALEPH.decimals,\n  },\n  'TULIP-RAY-V4': {\n    symbol: 'TULIP-RAY',\n    name: 'TULIP-RAY LP',\n    coin: { ...TOKENS.TULIP },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: '3AZTviji5qduMG2s4FfWGR3SSQmNUCyx8ao6UKCPg3oJ',\n    decimals: TOKENS.TULIP.decimals,\n  },\n  'SLRS-RAY-V4': {\n    symbol: 'SLRS-RAY',\n    name: 'SLRS-RAY LP',\n    coin: { ...TOKENS.SLRS },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: '2pk78vsKT3jfJAcN2zbpMUnrR57SZrxHqaZYyFgp92mM',\n    decimals: TOKENS.SLRS.decimals,\n  },\n  'MER-RAY-V4': {\n    symbol: 'MER-RAY',\n    name: 'MER-RAY LP',\n    coin: { ...TOKENS.MER },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: '214hxy3AbKoaEKgqcg2aC1cP5R67cGGAyDEg5GDwC7Ub',\n    decimals: TOKENS.MER.decimals,\n  },\n  'MEDIA-RAY-V4': {\n    symbol: 'MEDIA-RAY',\n    name: 'MEDIA-RAY LP',\n    coin: { ...TOKENS.MEDIA },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: '9Aseg5A1JD1yCiFFdDaNNxCiJ7XzrpZFmcEmLjXFdPaH',\n    decimals: TOKENS.MEDIA.decimals,\n  },\n  'SNY-RAY-V4': {\n    symbol: 'SNY-RAY',\n    name: 'SNY-RAY LP',\n    coin: { ...TOKENS.SNY },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: '2k4quTuuLUxrSEhFH99qcoZzvgvVEc3b5sz3xz3qstfS',\n    decimals: TOKENS.SNY.decimals,\n  },\n  'LIKE-RAY-V4': {\n    symbol: 'LIKE-RAY',\n    name: 'LIKE-RAY LP',\n    coin: { ...TOKENS.LIKE },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: '7xqDycbFSCpUpzkYapFeyPJWPwEpV7zdWbYf2MVHTNjv',\n    decimals: TOKENS.LIKE.decimals,\n  },\n  'COPE-RAY-V4': {\n    symbol: 'COPE-RAY',\n    name: 'COPE-RAY LP',\n    coin: { ...TOKENS.COPE },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: 'A7GCVHA8NSsbdFscHdoNU41tL1TRKNmCH4K94CgcLK9F',\n    decimals: TOKENS.COPE.decimals,\n  },\n  'ETH-SOL-V4': {\n    symbol: 'ETH-SOL',\n    name: 'ETH-SOL LP',\n    coin: { ...TOKENS.ETH },\n    pc: { ...NATIVE_SOL },\n\n    mintAddress: 'GKfgC86iJoMjwAtcyiLu6nWnjggqUXsDQihXkP14fDez',\n    decimals: TOKENS.ETH.decimals,\n  },\n  'stSOL-USDC-V4': {\n    symbol: 'stSOL-USDC',\n    name: 'stSOL-USDC LP',\n    coin: { ...TOKENS.stSOL },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'HDUJMwYZkjUZre63xUeDhdCi8c6LgUDiBqxmP3QC3VPX',\n    decimals: TOKENS.stSOL.decimals,\n  },\n  'GRAPE-USDC-V4': {\n    symbol: 'GRAPE-USDC',\n    name: 'GRAPE-USDC LP',\n    coin: { ...TOKENS.GRAPE },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'A8ZYmnZ1vwxUa4wpJVUaJgegsuTEz5TKy5CiJXffvmpt',\n    decimals: TOKENS.GRAPE.decimals,\n  },\n  'LARIX-USDC-V4': {\n    symbol: 'LARIX-USDC',\n    name: 'LARIX-USDC LP',\n    coin: { ...TOKENS.LARIX },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '7yieit4YsNsZ9CAK8H5ZEMvvk35kPEHHeXwp6naoWU9V',\n    decimals: TOKENS.LARIX.decimals,\n  },\n  'RIN-USDC-V4': {\n    symbol: 'RIN-USDC',\n    name: 'RIN-USDC LP',\n    coin: { ...TOKENS.RIN },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'GfCWfrZez7BDmCSEeMERVDVUaaM2TEreyYUgb2cpuS3w',\n    decimals: TOKENS.RIN.decimals,\n  },\n  'APEX-USDC-V4': {\n    symbol: 'APEX-USDC',\n    name: 'APEX-USDC LP',\n    coin: { ...TOKENS.APEX },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '444cVqYyDxJNo6FqiMb9qQWFUd7tYzFRdDuJRFrSAGnU',\n    decimals: TOKENS.APEX.decimals,\n  },\n  'mSOL-RAY-V4': {\n    symbol: 'mSOL-RAY',\n    name: 'mSOL-RAY LP',\n    coin: { ...TOKENS.mSOL },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: 'De2EHBAdkgfc72DpShqDGG42cV3iDWh8wvvZdPsiEcqP',\n    decimals: TOKENS.mSOL.decimals,\n  },\n  'MNDE-mSOL-V4': {\n    symbol: 'MNDE-mSOL',\n    name: 'MNDE-mSOL LP',\n    coin: { ...TOKENS.MNDE },\n    pc: { ...TOKENS.mSOL },\n\n    mintAddress: '4bh8XCzTHSbqbWN8o1Jn4ueBdz1LvJFoEasN6K6CQ8Ny',\n    decimals: TOKENS.MNDE.decimals,\n  },\n  'LARIX-RAY-V4': {\n    symbol: 'LARIX-RAY',\n    name: 'LARIX-RAY LP',\n    coin: { ...TOKENS.LARIX },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: 'ZRDfSLgWGeaYSmhdPvFNKQQhDcYdZQaue2N8YDmHX4q',\n    decimals: TOKENS.LARIX.decimals,\n  },\n  'LIQ-USDC-V4': {\n    symbol: 'LIQ-USDC',\n    name: 'LIQ-USDC LP',\n    coin: { ...TOKENS.LIQ },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'GWpD3eTfhJB5KDCcnE85dBQrjAk2CsrgDF9b52R9CrjV',\n    decimals: TOKENS.LIQ.decimals,\n  },\n  'WAG-USDC-V4': {\n    symbol: 'WAG-USDC',\n    name: 'WAG-USDC LP',\n    coin: { ...TOKENS.WAG },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '4yykyPugitUVRewNPXXCviRvxGfsfsRMoP32z3b6FmUC',\n    decimals: TOKENS.WAG.decimals,\n  },\n  'ETH-mSOL-V4': {\n    symbol: 'ETH-mSOL',\n    name: 'ETH-mSOL LP',\n    coin: { ...TOKENS.ETH },\n    pc: { ...TOKENS.mSOL },\n\n    mintAddress: 'HYv3grQfi8QbV7nG7EFgNK1aJSrsJ7HynXJKJVPLL2Uh',\n    decimals: TOKENS.ETH.decimals,\n  },\n  'mSOL-USDT-V4': {\n    symbol: 'mSOL-USDT',\n    name: 'mSOL-USDT LP',\n    coin: { ...TOKENS.mSOL },\n    pc: { ...TOKENS.USDT },\n\n    mintAddress: '69NCmEW9mGpiWLjAcAWHq51k4ionJZmzgRfRT3wQaCCf',\n    decimals: TOKENS.mSOL.decimals,\n  },\n  'BTC-mSOL-V4': {\n    symbol: 'BTC-mSOL',\n    name: 'BTC-mSOL LP',\n    coin: { ...TOKENS.BTC },\n    pc: { ...TOKENS.mSOL },\n\n    mintAddress: '92bcERNtUmuaJ6mwLSxYHZYSph37jdKxRdoYNxpcYNPp',\n    decimals: TOKENS.BTC.decimals,\n  },\n  'SLIM-SOL-V4': {\n    symbol: 'SLIM-SOL',\n    name: 'SLIM-SOL LP',\n    coin: { ...TOKENS.SLIM },\n    pc: { ...NATIVE_SOL },\n\n    mintAddress: '9X4EK8E59VAVi6ChnNvvd39m6Yg9RtkBbAPq1mDVJT57',\n    decimals: TOKENS.SLIM.decimals,\n  },\n  'AURY-USDC-V4': {\n    symbol: 'AURY-USDC',\n    name: 'AURY-USDC LP',\n    coin: { ...TOKENS.AURY },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'Gub5dvTy4nzP82qpmpNkBxmRqjtqRddBTBqHSdNcf2oS',\n    decimals: TOKENS.AURY.decimals,\n  },\n  'PRT-SOL-V4': {\n    symbol: 'PRT-SOL',\n    name: 'PRT-SOL LP',\n    coin: { ...TOKENS.PRT },\n    pc: { ...NATIVE_SOL },\n\n    mintAddress: 'EcJ8Wgwt1AzSPiDpVr6aaSur8TKAsNTPmmzRACeqT68Z',\n    decimals: TOKENS.PRT.decimals,\n  },\n  'LIQ-RAY-V4': {\n    symbol: 'LIQ-RAY',\n    name: 'LIQ-RAY LP',\n    coin: { ...TOKENS.LIQ },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: '49YUsDrThJosHSagCn1F59Uc9NRxbr9thVrZikUnQDXy',\n    decimals: TOKENS.LIQ.decimals,\n  },\n  'SYP-SOL-V4': {\n    symbol: 'SYP-SOL',\n    name: 'SYP-SOL LP',\n    coin: { ...TOKENS.SYP },\n    pc: { ...NATIVE_SOL },\n\n    mintAddress: 'KHV6dfj2bDntzJ9z1S26cDfqWfUZdJRFmteLR6LxHwW',\n    decimals: TOKENS.SYP.decimals,\n  },\n  'SYP-RAY-V4': {\n    symbol: 'SYP-RAY',\n    name: 'SYP-RAY LP',\n    coin: { ...TOKENS.SYP },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: 'FT2KZqxxM8F2h9pZtTF4PyjK88bM4YbuBzd7ZPwQ5wMB',\n    decimals: TOKENS.SYP.decimals,\n  },\n  'SYP-USDC-V4': {\n    symbol: 'SYP-USDC',\n    name: 'SYP-USDC LP',\n    coin: { ...TOKENS.SYP },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '2xJGuLAivAR1WkARRA6zP1v4jaA9jV2Qis8JfMNvrVyZ',\n    decimals: TOKENS.SYP.decimals,\n  },\n  'FAB-USDC-V4': {\n    symbol: 'FAB-USDC',\n    name: 'FAB-USDC LP',\n    coin: { ...TOKENS.FAB },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '5rTCvZq6BcApsC3VV1EEUuTJfaVd8uYhcGjwTy1By6P8',\n    decimals: TOKENS.FAB.decimals,\n  },\n  'WOOF-RAY-V4': {\n    symbol: 'WOOF-RAY',\n    name: 'WOOF-RAY LP',\n    coin: { ...TOKENS.WOOF },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: 'H2FAnazDaGFutcmnrwDxhmdncR1Bd7GG4mhPCSUiamDX',\n    decimals: TOKENS.WOOF.decimals,\n  },\n  'WOOF-USDC-V4': {\n    symbol: 'WOOF-USDC',\n    name: 'WOOF-USDC LP',\n    coin: { ...TOKENS.WOOF },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'EFSu5TMc1ijRevaYCxUkS7uGvbhsymDHEaTK3UVdNE3q',\n    decimals: TOKENS.WOOF.decimals,\n  },\n  'SLND-USDC-V4': {\n    symbol: 'SLND-USDC',\n    name: 'SLND-USDC LP',\n    coin: { ...TOKENS.SLND },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'EunE9uDh2cGsyJcsGuGKc6wte7kBn8iye2gzC4w2ePHn',\n    decimals: TOKENS.SLND.decimals,\n  },\n  'FRKT-SOL-V4': {\n    symbol: 'FRKT-SOL',\n    name: 'FRKT-SOL LP',\n    coin: { ...TOKENS.FRKT },\n    pc: { ...NATIVE_SOL },\n\n    mintAddress: 'HYUKXgpjaxMXHttyrFYtv3z2rdhZ1U9QDH8zEc8BooQC',\n    decimals: TOKENS.FRKT.decimals,\n  },\n  'weWETH-SOL-V4': {\n    symbol: 'weWETH-SOL',\n    name: 'weWETH-SOL LP',\n    coin: { ...TOKENS.weWETH },\n    pc: { ...NATIVE_SOL },\n\n    mintAddress: '3hbozt2Por7bcrGod8N7kEeJNMocFFjCJrQR16TQGBrE',\n    decimals: TOKENS.weWETH.decimals,\n  },\n  'weWETH-USDC-V4': {\n    symbol: 'weWETH-USDC',\n    name: 'weWETH-USDC LP',\n    coin: { ...TOKENS.weWETH },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '3529SBnMCDW3S3xQ52aABbRHo7PcHvpQA4no8J12L5eK',\n    decimals: TOKENS.weWETH.decimals,\n  },\n  'weUNI-USDC-V4': {\n    symbol: 'weUNI-USDC',\n    name: 'weUNI-USDC LP',\n    coin: { ...TOKENS.weUNI },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'EEC4QnT41py39QaYnzQnoYQEtDUDNa6Se8SBDgfPSN2a',\n    decimals: TOKENS.weUNI.decimals,\n  },\n  'weSUSHI-USDC-V4': {\n    symbol: 'weSUSHI-USDC',\n    name: 'weSUSHI-USDC LP',\n    coin: { ...TOKENS.weSUSHI },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '3wVrtQZsiDNp5yTPyfEzQHPU6iuJoMmpnWg6CTt4V8sR',\n    decimals: TOKENS.weSUSHI.decimals,\n  },\n  'CYS-USDC-V4': {\n    symbol: 'CYS-USDC',\n    name: 'CYS-USDC LP',\n    coin: { ...TOKENS.CYS },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'GfV3QDzzdVUwCNSdfn6PjhmyJvjw18tn51RingWZYwk3',\n    decimals: TOKENS.CYS.decimals,\n  },\n  'SAMO-USDC-V4': {\n    symbol: 'SAMO-USDC',\n    name: 'SAMO-USDC LP',\n    coin: { ...TOKENS.SAMO },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'B2PjGEP3vPf1999fUD14pYdxvSDRVBk43hxB2rgthwEY',\n    decimals: TOKENS.SAMO.decimals,\n  },\n  'ABR-USDC-V4': {\n    symbol: 'ABR-USDC',\n    name: 'ABR-USDC LP',\n    coin: { ...TOKENS.ABR },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'ECHfxkf5zjjZFTX95QfFahNyzG7feyEKcfTdjsdrMSGU',\n    decimals: TOKENS.ABR.decimals,\n  },\n  'IN-USDC-V4': {\n    symbol: 'IN-USDC',\n    name: 'IN-USDC LP',\n    coin: { ...TOKENS.IN },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'GbmJtVgg9fRmmmjKUYGMZeSt8wZ47cDDXasg5Y3iF4kz',\n    decimals: TOKENS.IN.decimals,\n  },\n  'weDYDX-USDC-V4': {\n    symbol: 'weDYDX-USDC',\n    name: 'weDYDX-USDC LP',\n    coin: { ...TOKENS.weDYDX },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'BjkkMZnnzmgLqzGErzDbkk15ozv48iVKQuunpeM2Hqnk',\n    decimals: TOKENS.weDYDX.decimals,\n  },\n  'STARS-USDC-V4': {\n    symbol: 'STARS-USDC',\n    name: 'STARS-USDC LP',\n    coin: { ...TOKENS.STARS },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'FJ68q7NChhETcGVdinMbM2FF1Cy79dpmUi6HC83K55Hv',\n    decimals: TOKENS.STARS.decimals,\n  },\n  'weAXS-USDC-V4': {\n    symbol: 'weAXS-USDC',\n    name: 'weAXS-USDC LP',\n    coin: { ...TOKENS.weAXS },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '6PSoJQ7myQ1BJtbQC6oiWR8HSecQGyoWsPYTZRJo2ci3',\n    decimals: TOKENS.weAXS.decimals,\n  },\n  'weSHIB-USDC-V4': {\n    symbol: 'weSHIB-USDC',\n    name: 'weSHIB-USDC LP',\n    coin: { ...TOKENS.weSHIB },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'AcjX5pmTMGSgxkdxc3r82r6WMKBvS6eQXXFz5ck5KKUa',\n    decimals: TOKENS.weSHIB.decimals,\n  },\n  'SBR-USDC-V4': {\n    symbol: 'SBR-USDC',\n    name: 'SBR-USDC LP',\n    coin: { ...TOKENS.SBR },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '9FC8xTFRbgTpuZZYAYnZLxgnQ8r7FwfSBM1SWvGwgF7s',\n    decimals: TOKENS.SBR.decimals,\n  },\n  'OXS-USDC-V4': {\n    symbol: 'OXS-USDC',\n    name: 'OXS-USDC LP',\n    coin: { ...TOKENS.OXS },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'et9pdjWm97rbmsJoN183GkFV5qzTGru79GE1Zhe7NTU',\n    decimals: TOKENS.OXS.decimals,\n  },\n  'CWAR-USDC-V4': {\n    symbol: 'CWAR-USDC',\n    name: 'CWAR-USDC LP',\n    coin: { ...TOKENS.CWAR },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'HjR23bxn2gtRDB2P1Tm3DLepAPPZgazsWJpLG9wqjnYR',\n    decimals: TOKENS.CWAR.decimals,\n  },\n  'UPS-USDC-V4': {\n    symbol: 'UPS-USDC',\n    name: 'UPS-USDC LP',\n    coin: { ...TOKENS.UPS },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '9hSUZdREEsbaYaKY4FouvXr7xyAqtpdHRDoYCb6Mb28a',\n    decimals: TOKENS.UPS.decimals,\n  },\n  'weSAND-USDC-V4': {\n    symbol: 'weSAND-USDC',\n    name: 'weSAND-USDC LP',\n    coin: { ...TOKENS.weSAND },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '3dADrQa7utyiCsaFeVk9r7oebW1WheowhKo5soBYKBVT',\n    decimals: TOKENS.weSAND.decimals,\n  },\n  'weMANA-USDC-V4': {\n    symbol: 'weMANA-USDC',\n    name: 'weMANA-USDC LP',\n    coin: { ...TOKENS.weMANA },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'HpUkVAPRJ5zNRuJ1ZwMXEhbMHL3gSuPb2QuSER9YUd3a',\n    decimals: TOKENS.weMANA.decimals,\n  },\n  'CAVE-USDC-V4': {\n    symbol: 'CAVE-USDC',\n    name: 'CAVE-USDC LP',\n    coin: { ...TOKENS.CAVE },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '5Gba1k3fU7Vh7UtAiBmie9vhQNNq1JfEwgn1DPGZ7NKQ',\n    decimals: TOKENS.CAVE.decimals,\n  },\n  'GENE-USDC-V4': {\n    symbol: 'GENE-USDC',\n    name: 'GENE-USDC LP',\n    coin: { ...TOKENS.GENE },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '7GKvfHEXenNiWYbJBKae89mdaMPr5gGMYwZmyC8gBNVG',\n    decimals: TOKENS.GENE.decimals,\n  },\n  'GENE-RAY-V4': {\n    symbol: 'GENE-RAY',\n    name: 'GENE-RAY LP',\n    coin: { ...TOKENS.GENE },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: '3HzXnc1qZ8mGqun18Ck3KA616XnZNqF1RWbgYE2nGRMA',\n    decimals: TOKENS.GENE.decimals,\n  },\n  'APT-USDC-V4': {\n    symbol: 'APT-USDC',\n    name: 'APT-USDC LP',\n    coin: { ...TOKENS.APT },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'Hk8mDAJFq4E9kF3DtNgPFwzbo5kbeiusNFJgWmo3LoQ5',\n    decimals: TOKENS.APT.decimals,\n  },\n  'GOFX-USDC-V4': {\n    symbol: 'GOFX-USDC',\n    name: 'GOFX-USDC LP',\n    coin: { ...TOKENS.GOFX },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '4svqAwrLPGRDCQuuieYTmtLXF75wiahjeK2rEN9tY1YL',\n    decimals: TOKENS.GOFX.decimals,\n  },\n  'SONAR-USDC-V4': {\n    symbol: 'SONAR-USDC',\n    name: 'SONAR-USDC LP',\n    coin: { ...TOKENS.SONAR },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '2tAcfqJ1YYjpGLqwh76kyNt9VaNFDd4fJySfH6SmWfKt',\n    decimals: TOKENS.SONAR.decimals,\n  },\n  'JSOL-SOL-V4': {\n    symbol: 'JSOL-SOL',\n    name: 'JSOL-SOL LP',\n    coin: { ...TOKENS.JSOL },\n    pc: { ...NATIVE_SOL },\n\n    mintAddress: '61z37rpHsU6d3Fq5sUjJ85K6tXGzkoYKDAG3kPJQNDRo',\n    decimals: TOKENS.JSOL.decimals,\n  },\n  'JSOL-USDC-V4': {\n    symbol: 'JSOL-USDC',\n    name: 'JSOL-USDC LP',\n    coin: { ...TOKENS.JSOL },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '3JZqf2VPNxj1kDZQsfzC7myM6spsGQbGuFv1gVfdYosN',\n    decimals: TOKENS.JSOL.decimals,\n  },\n  'SHILL-USDC-V4': {\n    symbol: 'SHILL-USDC',\n    name: 'SHILL-USDC LP',\n    coin: { ...TOKENS.SHILL },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'CnUhYBtQEbSBZ76bgxAouVCTCb8rofZzwerVF5z5LREJ',\n    decimals: TOKENS.SHILL.decimals,\n  },\n  'DFL-USDC-V4': {\n    symbol: 'DFL-USDC',\n    name: 'DFL-USDC LP',\n    coin: { ...TOKENS.DFL },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'Fffijd6UVJdQeLVXhenS8YcsnMUdWJqpbBeH42LFkXgS',\n    decimals: TOKENS.DFL.decimals,\n  },\n  'BOKU-USDC-V4': {\n    symbol: 'BOKU-USDC',\n    name: 'BOKU-USDC LP',\n    coin: { ...TOKENS.BOKU },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '8jjQn5Yagb6Nm2WGAxPW1bcGqrTWpg5adf6QukXEarcP',\n    decimals: TOKENS.BOKU.decimals,\n  },\n  'MIMO-SOL-V4': {\n    symbol: 'MIMO-SOL',\n    name: 'MIMO-SOL LP',\n    coin: { ...TOKENS.MIMO },\n    pc: { ...NATIVE_SOL },\n\n    mintAddress: 'HUJ1opSk8AiPfDT47r7n4hTiK2EXgrR3Msy7T8q1BywS',\n    decimals: TOKENS.MIMO.decimals,\n  },\n  'wbWBNB-USDC-V4': {\n    symbol: 'wbWBNB-USDC',\n    name: 'wbWBNB-USDC LP',\n    coin: { ...TOKENS.wbWBNB },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'FEsEfEJJSfiMQcshUgZ5UigfytfGRQ3z5puyF6DXDp9C',\n    decimals: TOKENS.wbWBNB.decimals,\n  },\n  'wePEOPLE-USDC-V4': {\n    symbol: 'wePEOPLE-USDC',\n    name: 'wePEOPLE-USDC LP',\n    coin: { ...TOKENS.wePEOPLE },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '3e5ZCKi4etorpV4pv1fSckP5iJD67xcUkx3RtFCZhbzD',\n    decimals: TOKENS.wePEOPLE.decimals,\n  },\n  'ISOLA-USDT-V4': {\n    symbol: 'ISOLA-USDT',\n    name: 'ISOLA-USDT LP',\n    coin: { ...TOKENS.ISOLA },\n    pc: { ...TOKENS.USDT },\n\n    mintAddress: 'H8s1wQsZpRK61pyLF3XwyQc6E8vNUnwRDhy3TBDCDENQ',\n    decimals: TOKENS.ISOLA.decimals,\n  },\n  'SPWN-USDC-V4': {\n    symbol: 'SPWN-USDC',\n    name: 'SPWN-USDC LP',\n    coin: { ...TOKENS.SPWN },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'B5uyCAQcX6nAjZypLgiivbEKabSptgUb8JK9tkaSnqdW',\n    decimals: TOKENS.SPWN.decimals,\n  },\n  'STR-USDC-V4': {\n    symbol: 'STR-USDC',\n    name: 'STR-USDC LP',\n    coin: { ...TOKENS.STR },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '8uDVKmVwNmbXHDB7rNKqtpcT9VAsFHTJ5pPYxjyoBbNg',\n    decimals: TOKENS.STR.decimals,\n  },\n  'SOLC-USDT-V4': {\n    symbol: 'SOLC-USDT',\n    name: 'SOLC-USDT LP',\n    coin: { ...TOKENS.SOLC },\n    pc: { ...TOKENS.USDT },\n\n    mintAddress: '2g9JzTWycLzK4KEBBHsponAtZRee2ii63bRrJ8tefEyt',\n    decimals: TOKENS.SOLC.decimals,\n  },\n  'VI-USDC-V4': {\n    symbol: 'VI-USDC',\n    name: 'VI-USDC LP',\n    coin: { ...TOKENS.VI },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '3MwHyHCRfVqtH3ABFtdKXdY9dwemr9GGxQFaBkeq6NjY',\n    decimals: TOKENS.VI.decimals,\n  },\n  'KKO-USDC-V4': {\n    symbol: 'KKO-USDC',\n    name: 'KKO-USDC LP',\n    coin: { ...TOKENS.KKO },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '7xr1Doc1NiMWbUg99YVFqQSLfYXNzo6YvacXUsSgBMNW',\n    decimals: TOKENS.KKO.decimals,\n  },\n  'XTAG-USDC-V4': {\n    symbol: 'XTAG-USDC',\n    name: 'XTAG-USDC LP',\n    coin: { ...TOKENS.XTAG },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'GCEQbLg4ik5YJ4CMcbtuVqEc4sjLdSGy34rFk1CtGjdg',\n    decimals: TOKENS.XTAG.decimals,\n  },\n  'TTT-USDC-V4': {\n    symbol: 'TTT-USDC',\n    name: 'TTT-USDC LP',\n    coin: { ...TOKENS.TTT },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '84fmrerHGohoRf4iLPDQ1KG4CjSjCRksYWGzjWfCRM8a',\n    decimals: TOKENS.TTT.decimals,\n  },\n  'RUN-USDC-V4': {\n    symbol: 'RUN-USDC',\n    name: 'RUN-USDC LP',\n    coin: { ...TOKENS.RUN },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'CjTLvvKSQdEujcSzeZRYgk4w1DpuXBbMppLHaxZyz11Y',\n    decimals: TOKENS.RUN.decimals,\n  },\n  'CRWNY-USDC-V4': {\n    symbol: 'CRWNY-USDC',\n    name: 'CRWNY-USDC LP',\n    coin: { ...TOKENS.CRWNY },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'H3D9Gyi4frRLW6bS9vBthDVDJyzyRJ6XhhpP6PJGWaDC',\n    decimals: TOKENS.CRWNY.decimals,\n  },\n  'CRWNY-RAY-V4': {\n    symbol: 'CRWNY-RAY',\n    name: 'CRWNY-RAY LP',\n    coin: { ...TOKENS.CRWNY },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: '5Cz9wGStNjiUg81q8t6sJJeckuT2C14CYSfyQbtYirSX',\n    decimals: TOKENS.CRWNY.decimals,\n  },\n  'BLOCK-USDC-V4': {\n    symbol: 'BLOCK-USDC',\n    name: 'BLOCK-USDC LP',\n    coin: { ...TOKENS.BLOCK },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '8i44Y23GkkwDYZ5iSkVEqmrXUfwNmwo9grguTDWKM8wg',\n    decimals: TOKENS.BLOCK.decimals,\n  },\n  'REAL-USDC-V4': {\n    symbol: 'REAL-USDC',\n    name: 'REAL-USDC LP',\n    coin: { ...TOKENS.REAL },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'EN43tp8xdkcM8RYSJ4msFHMPTJRXKhUteVYBDJLwTvr3',\n    decimals: TOKENS.REAL.decimals,\n  },\n  'FRKT-USDC-V4': {\n    symbol: 'FRKT-USDC',\n    name: 'FRKT-USDC LP',\n    coin: { ...TOKENS.FRKT },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '7MgzqVTGeA4wENme81QPTrPy45NJMKVL9XGwxmNT87cG',\n    decimals: TOKENS.FRKT.decimals,\n  },\n  'MBS-USDC-V4': {\n    symbol: 'MBS-USDC',\n    name: 'MBS-USDC LP',\n    coin: { ...TOKENS.MBS },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'BAgSWaPZpsQKyZJdvB5KyvmCNj6hzczzentt5FhDCVHb',\n    decimals: TOKENS.MBS.decimals,\n  },\n  'PRISM-USDC-V4': {\n    symbol: 'PRISM-USDC',\n    name: 'PRISM-USDC LP',\n    coin: { ...TOKENS.PRISM },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '3baYkTcudvSFMe25UpZcBfdp4FA5kL2E4pfaeJ8AiYJB',\n    decimals: TOKENS.PRISM.decimals,\n  },\n  'CHICKS-USDC-V4': {\n    symbol: 'CHICKS-USDC',\n    name: 'CHICKS-USDC LP',\n    coin: { ...TOKENS.CHICKS },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'CPzmcw81a6PDasSXhVLfDRKuTJXZPUqocS9VFf5zCFhs',\n    decimals: TOKENS.CHICKS.decimals,\n  },\n  'MEAN-RAY-V4': {\n    symbol: 'MEAN-RAY',\n    name: 'MEAN-RAY LP',\n    coin: { ...TOKENS.MEAN },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: 'H9wUyrxpAErmdNVPitpHSXgwoomoh91ggJKPWtQQoCn1',\n    decimals: TOKENS.MEAN.decimals,\n  },\n  'TINY-USDC-V4': {\n    symbol: 'TINY-USDC',\n    name: 'TINY-USDC LP',\n    coin: { ...TOKENS.TINY },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'Hho6ZzRDj49L4z6zog8nQZFaxMSz6FX6wNzVpMeAMen',\n    decimals: TOKENS.TINY.decimals,\n  },\n  'SCY-USDC-V4': {\n    symbol: 'SCY-USDC',\n    name: 'SCY-USDC LP',\n    coin: { ...TOKENS.SCY },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'EcYk7t6Vw59HDnY2u6H1KDPkk8juMeA1NpGpHiGk1LDf',\n    decimals: TOKENS.SCY.decimals,\n  },\n};\n\nfunction addUserLocalCoinMint() {\n  const localMintStr = window.localStorage.user_add_coin_mint;\n  const localMintList = (localMintStr ?? '').split('---');\n  if (localMintList.length % 3 !== 0) {\n    window.localStorage.removeItem('user_add_coin_mint');\n  } else {\n    for (\n      let index = 0;\n      index < Math.floor(localMintList.length / 3);\n      index += 1\n    ) {\n      const name = localMintList[index * 3 + 0];\n      const mintAddress = localMintList[index * 3 + 1];\n      const decimals = localMintList[index * 3 + 2];\n      if (\n        !Object.values(TOKENS).find((item) => item.mintAddress === mintAddress)\n      ) {\n        TOKENS[name + mintAddress + 'unofficialUserAdd'] = {\n          name,\n          symbol: name,\n          decimals: parseInt(decimals),\n          mintAddress,\n          tags: ['userAdd'],\n        };\n      } else if (\n        !Object.values(TOKENS)\n          .find((item) => item.mintAddress === mintAddress)\n          .tags.includes('userAdd')\n      ) {\n        Object.values(TOKENS)\n          .find((item) => item.mintAddress === mintAddress)\n          .tags.push('userAdd');\n      }\n    }\n  }\n}\n\n// fake\nconst BLACK_LIST = [\n  '3pX59cis3ZXnX6ZExPoUQjpvJVspmj4YavtUmpTpkB33',\n  'EUjf7vzZsWjR3eGo5jEASxYyqt7ALqdmE87bDbURUWWV',\n  '2bXBmaYJwJfj5Cu8TDqLLrW1b9L7dK6sLgKoBBYRBzTH',\n];\n\nfunction blockBlackList(tokens: { address: string }[]) {\n  return tokens.filter((item) => !BLACK_LIST.includes(item.address));\n}\n\nfunction addTokensSolana() {\n  fetch('https://api.raydium.io/cache/solana-token-list')\n    .then(async (response) => {\n      addTokensSolanaFunc(blockBlackList((await response.json()).tokens));\n    })\n    .catch(() => {\n      fetch(\n        'https://raw.githubusercontent.com/solana-labs/token-list/main/src/tokens/solana.tokenlist.json',\n      )\n        .then(function (response) {\n          return response.json();\n        })\n        .then(function (myJson) {\n          addTokensSolanaFunc(blockBlackList(myJson.tokens));\n        });\n    });\n\n  fetch('https://sdk.raydium.io/token/raydium.mainnet.json').then(\n    async (response) => {\n      flushTokenIcon(Object.values((await response.json()).spl));\n    },\n  );\n}\n\nconst notUseSolanaPicMint: string[] = [TOKENS.TTT.mintAddress];\n\nfunction flushTokenIcon(tokens: any[]) {\n  tokens.forEach((itemToken: any) => {\n    const token = Object.values(TOKENS).find(\n      (item) => item.mintAddress === itemToken.mint,\n    );\n    if (token) {\n      token.picUrl = `https://sdk.raydium.io/icons/${token.mintAddress}.png`;\n    }\n  });\n}\n\nfunction addTokensSolanaFunc(tokens: any[]) {\n  tokens.forEach((itemToken: any) => {\n    if (itemToken.tags && itemToken.tags.includes('lp-token')) {\n      return;\n    }\n    if (\n      !Object.values(TOKENS).find(\n        (item) => item.mintAddress === itemToken.address,\n      )\n    ) {\n      TOKENS[itemToken.symbol + itemToken.address + 'solana'] = {\n        symbol: itemToken.symbol,\n        name: itemToken.name,\n        mintAddress: itemToken.address,\n        decimals: itemToken.decimals,\n        picUrl: itemToken.logoURI,\n        tags: ['solana'],\n      };\n    } else {\n      const token = Object.values(TOKENS).find(\n        (item) => item.mintAddress === itemToken.address,\n      );\n      if (\n        token.symbol !== itemToken.symbol &&\n        !token.tags.includes('raydium')\n      ) {\n        token.symbol = itemToken.symbol;\n        token.name = itemToken.name;\n        token.decimals = itemToken.decimals;\n        token.tags.push('solana');\n      }\n      const picToken = Object.values(TOKENS).find(\n        (item) => item.mintAddress === itemToken.address,\n      );\n      if (picToken && !notUseSolanaPicMint.includes(itemToken.address)) {\n        picToken.picUrl = itemToken.logoURI;\n      }\n    }\n  });\n\n  if (window.localStorage.addSolanaCoin) {\n    window.localStorage.addSolanaCoin\n      .split('---')\n      .forEach((itemMint: string) => {\n        if (itemMint === NATIVE_SOL.mintAddress)\n          NATIVE_SOL.tags.push('userAdd');\n        else\n          Object.keys(TOKENS).forEach((item) => {\n            if (TOKENS[item].mintAddress === itemMint) {\n              TOKENS[item].tags.push('userAdd');\n            }\n          });\n      });\n  }\n}\n\nfunction updateTokenTagsChange() {\n  const userSelectSource = window.localStorage.userSelectSource ?? '';\n  const userSelectSourceList: string[] = userSelectSource.split('---');\n  for (const itemSource of userSelectSourceList) {\n    if (TOKENS_TAGS[itemSource] && !TOKENS_TAGS[itemSource].mustShow) {\n      TOKENS_TAGS[itemSource].show = true;\n    }\n  }\n}\n\naddUserLocalCoinMint();\naddTokensSolana();\nupdateTokenTagsChange();\n","/* eslint-disable */\n\nimport { initializeAccount } from '@project-serum/serum/lib/token-instructions';\n// @ts-ignore without ts ignore, yarn build will failed\nimport { Token } from '@solana/spl-token';\nimport {\n  Account,\n  AccountInfo,\n  Commitment,\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionInstruction,\n  TransactionSignature,\n} from '@solana/web3.js';\n\nimport {\n  ASSOCIATED_TOKEN_PROGRAM_ID,\n  RENT_PROGRAM_ID,\n  SYSTEM_PROGRAM_ID,\n  TOKEN_PROGRAM_ID,\n} from 'src/utils/ids';\nimport { ACCOUNT_LAYOUT, MINT_LAYOUT } from 'src/utils/layouts';\nimport { TOKENS } from 'src/utils/tokens';\n\nexport const web3Config = {\n  strategy: 'speed',\n  rpcs: [\n    { url: 'https://raydium.rpcpool.com', weight: 50 },\n    { url: 'https://raydium.genesysgo.net', weight: 30 },\n    { url: 'https://solana-api.projectserum.com', weight: 10 },\n    { url: 'https://solana-api.tt-prod.net', weight: 10 },\n  ],\n};\n\n// export const commitment: Commitment = 'processed'\nexport const commitment: Commitment = 'confirmed';\n// export const commitment: Commitment = 'finalized'\n\nexport async function findProgramAddress(\n  seeds: Array<Buffer | Uint8Array>,\n  programId: PublicKey,\n) {\n  const [publicKey, nonce] = await PublicKey.findProgramAddress(\n    seeds,\n    programId,\n  );\n  return { publicKey, nonce };\n}\n\nexport async function createAmmAuthority(programId: PublicKey) {\n  return await findProgramAddress(\n    [\n      new Uint8Array(\n        Buffer.from('amm authority'.replace('\\u00A0', ' '), 'utf-8'),\n      ),\n    ],\n    programId,\n  );\n}\n\nexport async function createAssociatedId(\n  infoId: PublicKey,\n  marketAddress: PublicKey,\n  bufferKey: string,\n) {\n  const { publicKey } = await findProgramAddress(\n    [infoId.toBuffer(), marketAddress.toBuffer(), Buffer.from(bufferKey)],\n    infoId,\n  );\n  return publicKey;\n}\n\nexport async function findAssociatedTokenAddress(\n  walletAddress: PublicKey,\n  tokenMintAddress: PublicKey,\n) {\n  const { publicKey } = await findProgramAddress(\n    [\n      walletAddress.toBuffer(),\n      TOKEN_PROGRAM_ID.toBuffer(),\n      tokenMintAddress.toBuffer(),\n    ],\n    ASSOCIATED_TOKEN_PROGRAM_ID,\n  );\n  return publicKey;\n}\n\nexport async function findAssociatedStakeInfoAddress(\n  poolId: PublicKey,\n  walletAddress: PublicKey,\n  programId: PublicKey,\n) {\n  const { publicKey } = await findProgramAddress(\n    [\n      poolId.toBuffer(),\n      walletAddress.toBuffer(),\n      Buffer.from('staker_info_v2_associated_seed'),\n    ],\n    programId,\n  );\n  return publicKey;\n}\n\nexport async function createTokenAccountIfNotExist(\n  connection: Connection,\n  account: string | undefined | null,\n  owner: PublicKey,\n  mintAddress: string,\n  lamports: number | null,\n\n  transaction: Transaction,\n  signer: Array<Account>,\n) {\n  let publicKey;\n\n  if (account) {\n    publicKey = new PublicKey(account);\n  } else {\n    publicKey = await createProgramAccountIfNotExist(\n      connection,\n      account,\n      owner,\n      TOKEN_PROGRAM_ID,\n      lamports,\n      ACCOUNT_LAYOUT,\n      transaction,\n      signer,\n    );\n\n    transaction.add(\n      initializeAccount({\n        account: publicKey,\n        mint: new PublicKey(mintAddress),\n        owner,\n      }),\n    );\n  }\n\n  return publicKey;\n}\n\nexport async function createAssociatedTokenAccountIfNotExist(\n  account: string | undefined | null,\n  owner: PublicKey,\n  mintAddress: string,\n\n  transaction: Transaction,\n  atas: string[] = [],\n) {\n  let publicKey;\n  if (account) {\n    publicKey = new PublicKey(account);\n  }\n\n  const mint = new PublicKey(mintAddress);\n  // @ts-ignore without ts ignore, yarn build will failed\n  const ata = await Token.getAssociatedTokenAddress(\n    ASSOCIATED_TOKEN_PROGRAM_ID,\n    TOKEN_PROGRAM_ID,\n    mint,\n    owner,\n    true,\n  );\n\n  if (\n    (!publicKey || !ata.equals(publicKey)) &&\n    !atas.includes(ata.toBase58())\n  ) {\n    transaction.add(\n      Token.createAssociatedTokenAccountInstruction(\n        ASSOCIATED_TOKEN_PROGRAM_ID,\n        TOKEN_PROGRAM_ID,\n        mint,\n        ata,\n        owner,\n        owner,\n      ),\n    );\n    atas.push(ata.toBase58());\n  }\n\n  return ata;\n}\n\nexport async function createAtaSolIfNotExistAndWrap(\n  connection: Connection,\n  account: string | undefined | null,\n  owner: PublicKey,\n  transaction: Transaction,\n  signers: Array<Account>,\n  amount: number,\n) {\n  let publicKey;\n  if (account) {\n    publicKey = new PublicKey(account);\n  }\n  const mint = new PublicKey(TOKENS.WSOL.mintAddress);\n  // @ts-ignore without ts ignore, yarn build will failed\n  const ata = await Token.getAssociatedTokenAddress(\n    ASSOCIATED_TOKEN_PROGRAM_ID,\n    TOKEN_PROGRAM_ID,\n    mint,\n    owner,\n    true,\n  );\n  if (!publicKey) {\n    const rent = await Token.getMinBalanceRentForExemptAccount(connection);\n    transaction.add(\n      SystemProgram.transfer({\n        fromPubkey: owner,\n        toPubkey: ata,\n        lamports: amount + rent,\n      }),\n      Token.createAssociatedTokenAccountInstruction(\n        ASSOCIATED_TOKEN_PROGRAM_ID,\n        TOKEN_PROGRAM_ID,\n        mint,\n        ata,\n        owner,\n        owner,\n      ),\n    );\n  } else {\n    const rent = await Token.getMinBalanceRentForExemptAccount(connection);\n    const wsol = await createTokenAccountIfNotExist(\n      connection,\n      null,\n      owner,\n      TOKENS.WSOL.mintAddress,\n      amount + rent,\n      transaction,\n      signers,\n    );\n    transaction.add(\n      Token.createTransferInstruction(\n        TOKEN_PROGRAM_ID,\n        wsol,\n        ata,\n        owner,\n        [],\n        amount,\n      ),\n      Token.createCloseAccountInstruction(\n        TOKEN_PROGRAM_ID,\n        wsol,\n        owner,\n        owner,\n        [],\n      ),\n    );\n  }\n}\n\nexport async function createProgramAccountIfNotExist(\n  connection: Connection,\n  account: string | undefined | null,\n  owner: PublicKey,\n  programId: PublicKey,\n  lamports: number | null,\n  layout: any,\n\n  transaction: Transaction,\n  signer: Array<Account>,\n) {\n  let publicKey;\n\n  if (account) {\n    publicKey = new PublicKey(account);\n  } else {\n    const newAccount = new Account();\n    publicKey = newAccount.publicKey;\n\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: owner,\n        newAccountPubkey: publicKey,\n        lamports:\n          lamports ??\n          (await connection.getMinimumBalanceForRentExemption(layout.span)),\n        space: layout.span,\n        programId,\n      }),\n    );\n\n    signer.push(newAccount);\n  }\n\n  return publicKey;\n}\n\nexport async function createAssociatedTokenAccount(\n  tokenMintAddress: PublicKey,\n  owner: PublicKey,\n  transaction: Transaction,\n) {\n  const associatedTokenAddress = await findAssociatedTokenAddress(\n    owner,\n    tokenMintAddress,\n  );\n\n  const keys = [\n    {\n      pubkey: owner,\n      isSigner: true,\n      isWritable: false,\n    },\n    {\n      pubkey: associatedTokenAddress,\n      isSigner: false,\n      isWritable: true,\n    },\n    {\n      pubkey: owner,\n      isSigner: false,\n      isWritable: false,\n    },\n    {\n      pubkey: tokenMintAddress,\n      isSigner: false,\n      isWritable: false,\n    },\n    {\n      pubkey: SYSTEM_PROGRAM_ID,\n      isSigner: false,\n      isWritable: false,\n    },\n    {\n      pubkey: TOKEN_PROGRAM_ID,\n      isSigner: false,\n      isWritable: false,\n    },\n    {\n      pubkey: RENT_PROGRAM_ID,\n      isSigner: false,\n      isWritable: false,\n    },\n  ];\n\n  transaction.add(\n    new TransactionInstruction({\n      keys,\n      programId: ASSOCIATED_TOKEN_PROGRAM_ID,\n      data: Buffer.from([]),\n    }),\n  );\n\n  return associatedTokenAddress;\n}\n\nexport async function getFilteredProgramAccounts(\n  connection: Connection,\n  programId: PublicKey,\n  filters: any,\n): Promise<{ publicKey: PublicKey; accountInfo: AccountInfo<Buffer> }[]> {\n  // @ts-ignore\n  const resp = await connection._rpcRequest('getProgramAccounts', [\n    programId.toBase58(),\n    {\n      commitment: connection.commitment,\n      filters,\n      encoding: 'base64',\n    },\n  ]);\n  if (resp.error) {\n    throw new Error(resp.error.message);\n  }\n  // @ts-ignore\n  return resp.result.map(\n    // @ts-ignore\n    ({ pubkey, account: { data, executable, owner, lamports } }) => ({\n      publicKey: new PublicKey(pubkey),\n      accountInfo: {\n        data: Buffer.from(data[0], 'base64'),\n        executable,\n        owner: new PublicKey(owner),\n        lamports,\n      },\n    }),\n  );\n}\n\nexport async function getFilteredProgramAccountsAmmOrMarketCache(\n  cacheName: String,\n  connection: Connection,\n  programId: PublicKey,\n  filters: any,\n): Promise<{ publicKey: PublicKey; accountInfo: AccountInfo<Buffer> }[]> {\n  try {\n    if (!cacheName) {\n      throw new Error('cacheName error');\n    }\n\n    const resp = await (\n      await fetch('https://api.raydium.io/cache/rpc/' + cacheName)\n    ).json();\n    if (resp.error) {\n      throw new Error(resp.error.message);\n    }\n    // @ts-ignore\n    return resp.result.map(\n      // @ts-ignore\n      ({ pubkey, account: { data, executable, owner, lamports } }) => ({\n        publicKey: new PublicKey(pubkey),\n        accountInfo: {\n          data: Buffer.from(data[0], 'base64'),\n          executable,\n          owner: new PublicKey(owner),\n          lamports,\n        },\n      }),\n    );\n  } catch (e) {\n    return getFilteredProgramAccounts(connection, programId, filters);\n  }\n}\n\n// getMultipleAccounts\nexport async function getMultipleAccounts(\n  connection: Connection,\n  publicKeys: PublicKey[],\n  commitment?: Commitment,\n): Promise<\n  Array<null | { publicKey: PublicKey; account: AccountInfo<Buffer> }>\n> {\n  const keys: PublicKey[][] = [];\n  let tempKeys: PublicKey[] = [];\n\n  publicKeys.forEach((k) => {\n    if (tempKeys.length >= 100) {\n      keys.push(tempKeys);\n      tempKeys = [];\n    }\n    tempKeys.push(k);\n  });\n  if (tempKeys.length > 0) {\n    keys.push(tempKeys);\n  }\n\n  const accounts: Array<null | {\n    executable: any;\n    owner: PublicKey;\n    lamports: any;\n    data: Buffer;\n  }> = [];\n\n  const resArray: { [key: number]: any } = {};\n  await Promise.all(\n    keys.map(async (key, index) => {\n      const res = await connection.getMultipleAccountsInfo(key, commitment);\n      resArray[index] = res;\n    }),\n  );\n\n  Object.keys(resArray)\n    .sort((a, b) => parseInt(a) - parseInt(b))\n    .forEach((itemIndex) => {\n      const res = resArray[parseInt(itemIndex)];\n      for (const account of res) {\n        accounts.push(account);\n      }\n    });\n\n  return accounts.map((account, idx) => {\n    if (account === null) {\n      return null;\n    }\n    return {\n      publicKey: publicKeys[idx],\n      account,\n    };\n  });\n}\n\n// transaction\nexport async function signTransaction(\n  connection: Connection,\n  wallet: any,\n  transaction: Transaction,\n  signers: Array<Account> = [],\n) {\n  transaction.recentBlockhash = (\n    await connection.getRecentBlockhash()\n  ).blockhash;\n  transaction.setSigners(wallet.publicKey, ...signers.map((s) => s.publicKey));\n  if (signers.length > 0) {\n    transaction.partialSign(...signers);\n  }\n  return await wallet.signTransaction(transaction);\n}\n\nexport async function sendTransaction(\n  connection: Connection,\n  wallet: any,\n  transaction: Transaction,\n  signers: Array<Account> = [],\n) {\n  const txid: TransactionSignature = await wallet.sendTransaction(\n    transaction,\n    connection,\n    {\n      signers,\n      skipPreflight: true,\n      preflightCommitment: commitment,\n    },\n  );\n\n  return txid;\n}\n\nexport function mergeTransactions(transactions: (Transaction | undefined)[]) {\n  const transaction = new Transaction();\n  transactions\n    .filter((t): t is Transaction => t !== undefined)\n    .forEach((t) => {\n      transaction.add(t);\n    });\n  return transaction;\n}\n\nfunction throwIfNull<T>(value: T | null, message = 'account not found'): T {\n  if (value === null) {\n    throw new Error(message);\n  }\n  return value;\n}\n\nexport async function getMintDecimals(\n  connection: Connection,\n  mint: PublicKey,\n): Promise<number> {\n  const { data } = throwIfNull(\n    await connection.getAccountInfo(mint),\n    'mint not found',\n  );\n  const { decimals } = MINT_LAYOUT.decode(data);\n  return decimals;\n}\n\nexport async function getFilteredTokenAccountsByOwner(\n  connection: Connection,\n  programId: PublicKey,\n  mint: PublicKey,\n): Promise<{ context: {}; value: [] }> {\n  // @ts-ignore\n  const resp = await connection._rpcRequest('getTokenAccountsByOwner', [\n    programId.toBase58(),\n    {\n      mint: mint.toBase58(),\n    },\n    {\n      encoding: 'jsonParsed',\n    },\n  ]);\n  if (resp.error) {\n    throw new Error(resp.error.message);\n  }\n  return resp.result;\n}\n","import BigNumber from 'bignumber.js';\n\n// https://github.com/MikeMcl/bignumber.js\n// https://blog.csdn.net/shenxianhui1995/article/details/103985434\nexport class TokenAmount {\n  public wei: BigNumber;\n\n  public decimals: number;\n  public _decimals: BigNumber;\n\n  constructor(\n    wei: number | string | BigNumber,\n    decimals: number = 0,\n    isWei = true,\n  ) {\n    this.decimals = decimals;\n    this._decimals = new BigNumber(10).exponentiatedBy(decimals);\n\n    if (isWei) {\n      this.wei = new BigNumber(wei);\n    } else {\n      this.wei = new BigNumber(wei).multipliedBy(this._decimals);\n    }\n  }\n\n  toEther() {\n    return this.wei.dividedBy(this._decimals);\n  }\n\n  toWei() {\n    return this.wei;\n  }\n\n  format() {\n    const vaule = this.wei.dividedBy(this._decimals);\n    return vaule.toFormat(vaule.isInteger() ? 0 : this.decimals);\n  }\n\n  fixed() {\n    return this.wei.dividedBy(this._decimals).toFixed(this.decimals);\n  }\n\n  isNullOrZero() {\n    return this.wei.isNaN() || this.wei.isZero();\n  }\n  // + plus\n  // - minus\n  // × multipliedBy\n  // ÷ dividedBy\n}\n\n// >\nexport function gt(a: string | number, b: string | number) {\n  const valueA = new BigNumber(a);\n  const valueB = new BigNumber(b);\n\n  return valueA.isGreaterThan(valueB);\n}\n\n// >=\nexport function gte(a: string | number, b: string | number) {\n  const valueA = new BigNumber(a);\n  const valueB = new BigNumber(b);\n\n  return valueA.isGreaterThanOrEqualTo(valueB);\n}\n\n// <\nexport function lt(a: string | number, b: string | number) {\n  const valueA = new BigNumber(a);\n  const valueB = new BigNumber(b);\n\n  return valueA.isLessThan(valueB);\n}\n\n// <=\nexport function lte(a: string | number, b: string | number) {\n  const valueA = new BigNumber(a);\n  const valueB = new BigNumber(b);\n\n  return valueA.isLessThanOrEqualTo(valueB);\n}\n\nexport function isNullOrZero(value: string | number) {\n  const amount = new BigNumber(value);\n\n  return amount.isNaN() || amount.isZero();\n}\n","import { bool, publicKey, struct, u32, u64, u8 } from '@project-serum/borsh';\n\n// https://github.com/solana-labs/solana-program-library/blob/master/token/js/client/token.js#L210\nexport const ACCOUNT_LAYOUT = struct([\n  publicKey('mint'),\n  publicKey('owner'),\n  u64('amount'),\n  u32('delegateOption'),\n  publicKey('delegate'),\n  u8('state'),\n  u32('isNativeOption'),\n  u64('isNative'),\n  u64('delegatedAmount'),\n  u32('closeAuthorityOption'),\n  publicKey('closeAuthority'),\n]);\n\nexport const MINT_LAYOUT = struct([\n  u32('mintAuthorityOption'),\n  publicKey('mintAuthority'),\n  u64('supply'),\n  u8('decimals'),\n  bool('initialized'),\n  u32('freezeAuthorityOption'),\n  publicKey('freezeAuthority'),\n]);\n\nexport function getBigNumber(num: any) {\n  return num === undefined || num === null ? 0 : parseFloat(num.toString());\n}\n","import { Box } from '@chakra-ui/react';\nimport { TokenMap } from 'src/constants';\nimport { useContext } from 'react';\n\nimport { useWallet } from '@solana/wallet-adapter-react';\n\nimport ContextStore from 'src/store';\n\nexport default function App() {\n  const wallet = useWallet();\n  const { solBalance, tokenAccounts } = useContext(ContextStore);\n\n  const { publicKey } = wallet;\n\n  return (\n    <div>\n      <Box bg=\"cornflowerblue\" maxW=\"m\" m={2} p={4} color=\"white\">\n        address: {publicKey.toBase58()}\n      </Box>\n      <Box bg=\"cornflowerblue\" maxW=\"m\" m={2} p={4} color=\"white\">\n        sol balance: {solBalance}\n      </Box>\n      {Object.keys(tokenAccounts).map((k) => (\n        <Box key={k} bg=\"cornflowerblue\" maxW=\"m\" m={2} p={4} color=\"white\">\n          {TokenMap[k]?.symbol}: {tokenAccounts[k].balance.format()}\n        </Box>\n      ))}\n    </div>\n  );\n}\n","import { Box, Button } from '@chakra-ui/react';\nimport { useEffect, useState } from 'react';\n\nimport { NATIVE_SOL, TokenMap } from 'src/constants';\n\nexport default function Favorite(props) {\n  const { from, to, onClick } = props;\n\n  const [list, setList] = useState([]);\n\n  useEffect(() => {\n    setList(JSON.parse(window.localStorage.getItem('favorite_list')));\n  }, []);\n\n  useEffect(() => {\n    window.localStorage.setItem('favorite_list', JSON.stringify(list));\n  }, [list]);\n\n  const getSymbol = (address) => {\n    if (address === NATIVE_SOL.address) {\n      return NATIVE_SOL.symbol;\n    }\n\n    return TokenMap[address]?.symbol;\n  };\n\n  return (\n    <div>\n      <Button\n        color=\"teal\"\n        onClick={() => {\n          if (list.findIndex((v) => v.from === from && v.to === to) === -1) {\n            setList([...list, { from, to }]);\n          }\n        }}\n      >\n        ADD FAVORITE\n      </Button>\n      {list.map(({ from, to }, idx) => (\n        <Box\n          key={idx}\n          bg=\"gray\"\n          maxW=\"m\"\n          m={2}\n          p={4}\n          color=\"white\"\n          onClick={() => onClick(from, to)}\n        >\n          {`${getSymbol(from)} -> ${getSymbol(to)}`}\n        </Box>\n      ))}\n    </div>\n  );\n}\n","import {\n  Alert,\n  AlertIcon,\n  AlertTitle,\n  Box,\n  Button,\n  Center,\n  Flex,\n  FormControl,\n  FormLabel,\n  Link,\n  NumberInput,\n  NumberInputField,\n  Select,\n  useToast,\n} from '@chakra-ui/react';\nimport { ArrowForwardIcon, ArrowUpDownIcon } from '@chakra-ui/icons';\nimport { isEmpty } from 'lodash-es';\n\nimport { NATIVE_SOL, TokenList, TokenMap } from 'src/constants';\nimport { useCallback, useContext, useEffect, useState } from 'react';\nimport { useConnection, useWallet } from '@solana/wallet-adapter-react';\n\nimport { getPoolByTokenMintAddresses } from 'src/utils/pools';\nimport { getSwapOutAmount, swap } from 'src/utils/swap';\nimport ContextStore from 'src/store';\nimport Favorite from 'src/Favorite';\n\nexport default function Swap() {\n  const wallet = useWallet();\n  const { connection } = useConnection();\n  const { solBalance, tokenAccounts, liquidityPools } =\n    useContext(ContextStore);\n  const [fromToken, setFromToken] = useState(NATIVE_SOL.address);\n  const [toToken, setToToken] = useState(\n    'EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v', // usdc\n  );\n  const [fromAmount, setFromAmount] = useState(0);\n  const [toAmount, setToAmount] = useState(0);\n  const [slippage, setSlippage] = useState(3);\n  const [pool, setPool] = useState(undefined);\n  const [isLoading, setIsLoading] = useState(false);\n  const toast = useToast();\n\n  useEffect(() => {\n    const action = async () => {\n      const p = getPoolByTokenMintAddresses(fromToken, toToken);\n      console.log(p);\n\n      const poolWithFees = Object.values(liquidityPools).find(\n        (v) => v.ammId === p?.ammId,\n      );\n      console.log(poolWithFees);\n\n      setPool(poolWithFees);\n\n      if (!!poolWithFees) {\n        const f = getSwapOutAmount(\n          poolWithFees,\n          fromToken,\n          toToken,\n          fromAmount,\n          slippage,\n        );\n\n        setToAmount(f.amountOutWithSlippage.format());\n      }\n    };\n    setIsLoading(true);\n    !isEmpty(liquidityPools) && action();\n    setIsLoading(false);\n  }, [fromAmount, fromToken, liquidityPools, pool?.ammId, slippage, toToken]);\n\n  const doSwap = useCallback(async () => {\n    if (!!pool) {\n      try {\n        const tx = await swap(\n          connection,\n          wallet,\n          pool,\n          fromToken,\n          toToken,\n          tokenAccounts[fromToken]?.tokenAccountAddress,\n          tokenAccounts[toToken]?.tokenAccountAddress,\n          String(fromAmount),\n          String(toAmount),\n        );\n\n        console.log(tx);\n\n        toast({\n          position: 'bottom-left',\n          render: () => (\n            <Alert status=\"success\">\n              <AlertIcon />\n              <AlertTitle>\n                <Link href={`https://solscan.io/tx/${tx}`} isExternalk>\n                  Transaction\n                </Link>\n              </AlertTitle>\n            </Alert>\n          ),\n        });\n      } catch (error) {\n        console.log(error);\n\n        toast({\n          position: 'bottom-left',\n          render: () => (\n            <Alert status=\"error\">\n              <AlertIcon />\n              <AlertTitle>some error</AlertTitle>\n            </Alert>\n          ),\n        });\n      }\n    }\n  }, [\n    pool,\n    connection,\n    wallet,\n    fromToken,\n    toToken,\n    tokenAccounts,\n    fromAmount,\n    toAmount,\n    toast,\n  ]);\n\n  return (\n    <div style={{ margin: 8 }}>\n      <Flex color=\"white\" align=\"center\">\n        <FormControl bg=\"cornflowerblue\" flex=\"1\" p={5}>\n          <FormLabel htmlFor=\"from\">From</FormLabel>\n          <Select\n            id=\"from\"\n            value={fromToken}\n            onChange={(event) => setFromToken(event.target.value)}\n          >\n            <option value={NATIVE_SOL.address}>\n              {NATIVE_SOL.symbol} {solBalance}\n            </option>\n            {Object.keys(tokenAccounts).map((k) => (\n              <option key={TokenMap[k]?.address} value={TokenMap[k]?.address}>\n                {TokenMap[k]?.symbol} {tokenAccounts[k].balance.format()}\n              </option>\n            ))}\n            {TokenList.filter((k) => !tokenAccounts[k.address]).map((k) => (\n              <option key={k?.address} value={k?.address}>\n                {k?.symbol}\n              </option>\n            ))}\n          </Select>\n          <NumberInput\n            defaultValue={fromAmount}\n            precision={8}\n            onChange={(_, valueAsNumber) => setFromAmount(valueAsNumber)}\n          >\n            <NumberInputField id=\"fromAmount\" />\n          </NumberInput>\n        </FormControl>\n        <Box>\n          <Center w=\"40px\" h=\"40px\" color=\"black\">\n            <ArrowForwardIcon />\n          </Center>\n          <Center w=\"40px\" h=\"40px\" color=\"black\">\n            <ArrowUpDownIcon\n              style={{\n                transform: 'rotate(90deg)',\n              }}\n              onClick={() => {\n                setFromToken(toToken);\n                setToToken(fromToken);\n              }}\n            />\n          </Center>\n        </Box>\n        <FormControl bg=\"cornflowerblue\" flex=\"1\" p={5}>\n          <FormLabel htmlFor=\"to\">To</FormLabel>\n          <Select\n            id=\"to\"\n            value={toToken}\n            onChange={(event) => setToToken(event.target.value)}\n          >\n            <option value={NATIVE_SOL.address}>\n              {NATIVE_SOL.symbol} {solBalance}\n            </option>\n            {Object.keys(tokenAccounts).map((k) => (\n              <option key={TokenMap[k]?.address} value={TokenMap[k]?.address}>\n                {TokenMap[k]?.symbol} {tokenAccounts[k].balance.format()}\n              </option>\n            ))}\n            {TokenList.filter((k) => !tokenAccounts[k.address]).map((k) => (\n              <option key={k?.address} value={k?.address}>\n                {k?.symbol}\n              </option>\n            ))}\n          </Select>\n          <NumberInput\n            disabled\n            value={toAmount}\n            precision={8}\n            onChange={(_, valueAsNumber) => setToAmount(valueAsNumber)}\n          >\n            <NumberInputField id=\"toAmount\" />\n          </NumberInput>\n        </FormControl>\n      </Flex>\n\n      <Center p={10}>\n        <Button\n          color=\"teal\"\n          onClick={doSwap}\n          isLoading={isLoading}\n          disabled={\n            isLoading ||\n            solBalance < 0.02 ||\n            !pool ||\n            isNaN(fromAmount) ||\n            isNaN(toAmount)\n          }\n        >\n          swap\n        </Button>\n      </Center>\n\n      <FormControl>\n        <Flex align=\"center\">\n          <FormLabel htmlFor=\"email\">slippage</FormLabel>\n          <Select\n            id=\"slippage\"\n            value={slippage}\n            onChange={(event) => setSlippage(event.target.value)}\n          >\n            {[0.1, 3, 5, 10].map((v) => (\n              <option key={v} value={v}>\n                {v}%\n              </option>\n            ))}\n          </Select>\n        </Flex>\n      </FormControl>\n\n      <Favorite\n        from={fromToken}\n        to={toToken}\n        onClick={(from, to) => {\n          setFromToken(from);\n          setToToken(to);\n        }}\n      />\n\n      {solBalance < 0.02 && (\n        <Alert status=\"error\">\n          <AlertIcon />\n          <AlertTitle>sol too small (0.02)</AlertTitle>\n        </Alert>\n      )}\n\n      {!pool && (\n        <Alert status=\"error\">\n          <AlertIcon />\n          <AlertTitle>no swap route</AlertTitle>\n        </Alert>\n      )}\n    </div>\n  );\n}\n","import { ChakraProvider } from '@chakra-ui/react';\nimport {\n  ConnectionProvider,\n  WalletProvider,\n  useWallet,\n} from '@solana/wallet-adapter-react';\nimport {\n  LedgerWalletAdapter,\n  PhantomWalletAdapter,\n  SolletExtensionWalletAdapter,\n  SolletWalletAdapter,\n} from '@solana/wallet-adapter-wallets';\nimport { WalletAdapterNetwork } from '@solana/wallet-adapter-base';\nimport {\n  WalletModalProvider,\n  WalletMultiButton,\n} from '@solana/wallet-adapter-react-ui';\nimport { clusterApiUrl } from '@solana/web3.js';\nimport React, { useMemo } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { WrapContext } from 'src/store';\nimport WalletUpdate from 'src/store/wallet';\n\nimport App from './App';\nimport Swap from './Swap';\n\nimport '@solana/wallet-adapter-react-ui/styles.css';\n\nconst AppContent = () => {\n  const wallet = useWallet();\n\n  return (\n    wallet.connected && (\n      <>\n        <App />\n        <Swap />\n      </>\n    )\n  );\n};\n\nconst ConnectionWrap = (props) => {\n  const network = WalletAdapterNetwork.Mainnet;\n\n  const endpoint = useMemo(() => clusterApiUrl(network), [network]);\n  const wallets = useMemo(\n    () => [\n      new PhantomWalletAdapter(),\n      new LedgerWalletAdapter(),\n      new SolletWalletAdapter({ network }),\n      new SolletExtensionWalletAdapter({ network }),\n    ],\n    [network],\n  );\n\n  return (\n    <ConnectionProvider endpoint={endpoint}>\n      <WalletProvider wallets={wallets} autoConnect>\n        <WalletModalProvider>\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'end',\n            }}\n          >\n            <WalletMultiButton />\n          </div>\n          {props.children}\n        </WalletModalProvider>\n      </WalletProvider>\n    </ConnectionProvider>\n  );\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <WrapContext>\n        <ConnectionWrap>\n          <WalletUpdate />\n          <AppContent />\n        </ConnectionWrap>\n      </WrapContext>\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import { TokenListProvider } from '@solana/spl-token-registry';\n\nlet TokenList = [];\nlet TokenMap = {};\n\nconst NATIVE_SOL = {\n  symbol: 'SOL',\n  name: 'Native Solana',\n  address: '11111111111111111111111111111111',\n  decimals: 9,\n};\n\nnew TokenListProvider().resolve().then((tokens) => {\n  TokenList = tokens.filterByClusterSlug('mainnet-beta').getList();\n  TokenMap = TokenList.reduce((acc, curr) => {\n    acc[curr.address] = curr;\n    return acc;\n  }, {});\n});\nexport { NATIVE_SOL, TokenList, TokenMap };\n","/* eslint-disable */\n\nimport { cloneDeep } from 'lodash-es';\n\n// @ts-ignore\nimport SERUM_MARKETS from '@project-serum/serum/lib/markets.json';\n\nimport {\n  LIQUIDITY_POOL_PROGRAM_ID_V2,\n  LIQUIDITY_POOL_PROGRAM_ID_V3,\n  LIQUIDITY_POOL_PROGRAM_ID_V4,\n  SERUM_PROGRAM_ID_V2,\n  SERUM_PROGRAM_ID_V3,\n} from './ids';\nimport { LP_TOKENS, NATIVE_SOL, TokenInfo, TOKENS } from './tokens';\n\nexport interface LiquidityPoolInfo {\n  name: string;\n  coin: TokenInfo;\n  pc: TokenInfo;\n  lp: TokenInfo;\n\n  version: number;\n  programId: string;\n\n  ammId: string;\n  ammAuthority: string;\n  ammOpenOrders: string;\n  ammTargetOrders: string;\n  ammQuantities: string;\n\n  poolCoinTokenAccount: string;\n  poolPcTokenAccount: string;\n  poolWithdrawQueue: string;\n  poolTempLpTokenAccount: string;\n\n  serumProgramId: string;\n  serumMarket: string;\n  serumBids?: string;\n  serumAsks?: string;\n  serumEventQueue?: string;\n  serumCoinVaultAccount: string;\n  serumPcVaultAccount: string;\n  serumVaultSigner: string;\n\n  official: boolean;\n\n  status?: number;\n  currentK?: number;\n}\n\n/**\n * Get pool use two mint addresses\n\n * @param {string} coinMintAddress\n * @param {string} pcMintAddress\n\n * @returns {LiquidityPoolInfo | undefined} poolInfo\n */\nexport function getPoolByTokenMintAddresses(\n  coinMintAddress: string,\n  pcMintAddress: string,\n): LiquidityPoolInfo | undefined {\n  const pool = LIQUIDITY_POOLS.find(\n    (pool) =>\n      (pool.coin.mintAddress === coinMintAddress &&\n        pool.pc.mintAddress === pcMintAddress) ||\n      (pool.coin.mintAddress === pcMintAddress &&\n        pool.pc.mintAddress === coinMintAddress),\n  );\n\n  if (pool) {\n    return cloneDeep(pool);\n  }\n\n  return pool;\n}\n\nexport function getPoolListByTokenMintAddresses(\n  coinMintAddress: string,\n  pcMintAddress: string,\n  ammIdOrMarket: string | undefined,\n): LiquidityPoolInfo[] {\n  const pool = LIQUIDITY_POOLS.filter((pool) => {\n    if (coinMintAddress && pcMintAddress) {\n      if (\n        ((pool.coin.mintAddress === coinMintAddress &&\n          pool.pc.mintAddress === pcMintAddress) ||\n          (pool.coin.mintAddress === pcMintAddress &&\n            pool.pc.mintAddress === coinMintAddress)) &&\n        [4, 5].includes(pool.version) &&\n        pool.official\n      ) {\n        return !(\n          ammIdOrMarket !== undefined &&\n          pool.ammId !== ammIdOrMarket &&\n          pool.serumMarket !== ammIdOrMarket\n        );\n      }\n    } else {\n      return !(\n        ammIdOrMarket !== undefined &&\n        pool.ammId !== ammIdOrMarket &&\n        pool.serumMarket !== ammIdOrMarket\n      );\n    }\n    return false;\n  });\n  if (pool.length > 0) {\n    return cloneDeep(pool);\n  } else {\n    return cloneDeep(\n      LIQUIDITY_POOLS.filter((pool) => {\n        if (coinMintAddress && pcMintAddress) {\n          if (\n            ((pool.coin.mintAddress === coinMintAddress &&\n              pool.pc.mintAddress === pcMintAddress) ||\n              (pool.coin.mintAddress === pcMintAddress &&\n                pool.pc.mintAddress === coinMintAddress)) &&\n            [4, 5].includes(pool.version)\n          ) {\n            return !(\n              ammIdOrMarket !== undefined &&\n              pool.ammId !== ammIdOrMarket &&\n              pool.serumMarket !== ammIdOrMarket\n            );\n          }\n        } else {\n          return !(\n            ammIdOrMarket !== undefined &&\n            pool.ammId !== ammIdOrMarket &&\n            pool.serumMarket !== ammIdOrMarket\n          );\n        }\n        return false;\n      }),\n    );\n  }\n}\n\nexport function getLpMintByTokenMintAddresses(\n  coinMintAddress: string,\n  pcMintAddress: string,\n  version = [3, 4, 5],\n): string | null {\n  const pool = LIQUIDITY_POOLS.find(\n    (pool) =>\n      ((pool.coin.mintAddress === coinMintAddress &&\n        pool.pc.mintAddress === pcMintAddress) ||\n        (pool.coin.mintAddress === pcMintAddress &&\n          pool.pc.mintAddress === coinMintAddress)) &&\n      version.includes(pool.version),\n  );\n\n  if (pool) {\n    return pool.lp.mintAddress;\n  }\n\n  return null;\n}\n\nexport function getLpListByTokenMintAddresses(\n  coinMintAddress: string,\n  pcMintAddress: string,\n  ammIdOrMarket: string | undefined,\n  version = [4, 5],\n): LiquidityPoolInfo[] {\n  const pool = LIQUIDITY_POOLS.filter((pool) => {\n    if (coinMintAddress && pcMintAddress) {\n      if (\n        ((pool.coin.mintAddress === coinMintAddress &&\n          pool.pc.mintAddress === pcMintAddress) ||\n          (pool.coin.mintAddress === pcMintAddress &&\n            pool.pc.mintAddress === coinMintAddress)) &&\n        version.includes(pool.version) &&\n        pool.official\n      ) {\n        return !(\n          ammIdOrMarket !== undefined &&\n          pool.ammId !== ammIdOrMarket &&\n          pool.serumMarket !== ammIdOrMarket\n        );\n      }\n    } else {\n      return !(\n        ammIdOrMarket !== undefined &&\n        pool.ammId !== ammIdOrMarket &&\n        pool.serumMarket !== ammIdOrMarket\n      );\n    }\n    return false;\n  });\n  if (pool.length > 0) {\n    return pool;\n  } else {\n    return LIQUIDITY_POOLS.filter((pool) => {\n      if (coinMintAddress && pcMintAddress) {\n        if (\n          ((pool.coin.mintAddress === coinMintAddress &&\n            pool.pc.mintAddress === pcMintAddress) ||\n            (pool.coin.mintAddress === pcMintAddress &&\n              pool.pc.mintAddress === coinMintAddress)) &&\n          version.includes(pool.version)\n        ) {\n          return !(\n            ammIdOrMarket !== undefined &&\n            pool.ammId !== ammIdOrMarket &&\n            pool.serumMarket !== ammIdOrMarket\n          );\n        }\n      } else {\n        return !(\n          ammIdOrMarket !== undefined &&\n          pool.ammId !== ammIdOrMarket &&\n          pool.serumMarket !== ammIdOrMarket\n        );\n      }\n      return false;\n    });\n  }\n}\n\nexport function getPoolByLpMintAddress(\n  lpMintAddress: string,\n): LiquidityPoolInfo | undefined {\n  const pool = LIQUIDITY_POOLS.find(\n    (pool) => pool.lp.mintAddress === lpMintAddress,\n  );\n\n  if (pool) {\n    return cloneDeep(pool);\n  }\n\n  return pool;\n}\n\nexport function getAddressForWhat(address: string) {\n  for (const pool of LIQUIDITY_POOLS) {\n    for (const [key, value] of Object.entries(pool)) {\n      if (key === 'lp') {\n        if (value.mintAddress === address) {\n          return {\n            key: 'lpMintAddress',\n            lpMintAddress: pool.lp.mintAddress,\n            version: pool.version,\n          };\n        }\n      } else if (value === address) {\n        return {\n          key,\n          lpMintAddress: pool.lp.mintAddress,\n          version: pool.version,\n        };\n      }\n    }\n  }\n\n  return {};\n}\n\nexport function isOfficalMarket(marketAddress: string) {\n  for (const market of SERUM_MARKETS) {\n    if (market.address === marketAddress && !market.deprecated) {\n      return true;\n    }\n  }\n\n  for (const pool of LIQUIDITY_POOLS) {\n    if (pool.serumMarket === marketAddress && pool.official === true) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexport const LIQUIDITY_POOLS: LiquidityPoolInfo[] = [\n  {\n    name: 'RAY-WUSDT',\n    coin: { ...TOKENS.RAY },\n    pc: { ...TOKENS.WUSDT },\n    lp: { ...LP_TOKENS['RAY-WUSDT'] },\n\n    version: 2,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V2,\n\n    ammId: '4GygMmZgSoyfM3DEBpA8HvB8pooKWnTp232bKA17ptMG',\n    ammAuthority: 'E8ddPSxjVUdW8wa5rs3gbscqoXQF1o7sJrkUMFU18zMS',\n    ammOpenOrders: 'Ht7CkowEPZ5yHQpQQhzhgnN8W7Dq3Gw96Z3Ph8f3tVpY',\n    ammTargetOrders: '3FGv6AuhfsxPBsPz4dXRA629W7UF2rW3NjHaihxUNcrB',\n    ammQuantities: 'EwL1kwav5Z9dGrppUvusjPA4iJ4gVFsD3kGc5gCyAmMt',\n    poolCoinTokenAccount: 'G2zmxUhRGn12fuePJy9QsmJKem6XCRnmAEkf8G6xcRTj',\n    poolPcTokenAccount: 'H617sH2JNjMqPhRxsu43C8vDYfjZrFuoMEKdJyMu7V3t',\n    poolWithdrawQueue: '2QiXRE5yAfTbTUT9BCfmkahmPPhsmWRox1V88iaJppEX',\n    poolTempLpTokenAccount: '5ujWtJVhwzy8P3DJBYwLo4StxiFhJy5q6xHnMx7yrPPb',\n    serumProgramId: SERUM_PROGRAM_ID_V2,\n    serumMarket: 'HZyhLoyAnfQ72irTdqPdWo2oFL9zzXaBmAqN72iF3sdX',\n    serumCoinVaultAccount: '56KzKfd9LvsY4QuMZcGxcGCd78ZBFQ7JcyMFwgqpXH12',\n    serumPcVaultAccount: 'GLntTfM7RHeg5RuAuXcudT4NV7d4BGPrEFq7mmMxn29E',\n    serumVaultSigner: '6FYUBnwRVxxYCv1kpad4FaFLJAzLYuevFWmpVp7hViTn',\n    official: true,\n  },\n  {\n    name: 'RAY-SOL',\n    coin: { ...TOKENS.RAY },\n    pc: { ...NATIVE_SOL },\n    lp: { ...LP_TOKENS['RAY-SOL'] },\n\n    version: 2,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V2,\n\n    ammId: '5Ytcen7ZQRWA8Dt4EGyVJngyqDL36ZKAGSTVKxbDGZPN',\n    ammAuthority: '6LUFae1Ap44GVT9Dhw7NEqibFGSFxijdx4kzKVARsSuL',\n    ammOpenOrders: '4JGNm7gSaZguaNJExYsFsL91x4GPtPyHpU7nrb5Jjygh',\n    ammTargetOrders: '3rqYVkU3HkSj8XB9c2Y9e1LLPL6BjtNKr187qma6peCc',\n    ammQuantities: 'BMTLKbmwzsKRxzL45eKgb5or8spaStLZxvycrTGGAhdK',\n    poolCoinTokenAccount: 'CJukFFmH9FZ98uzFkUNgqRn8xUmSBTUETEDUMxZXk6p8',\n    poolPcTokenAccount: 'DoZyq9uo3W4WWBZJvPCvfB5cCBFvjU9oq3DdYjNgJNRX',\n    poolWithdrawQueue: '9FY699Gpyq4CcL8KFS4rEP76dAR3GQchQnUw7Xg1yaew',\n    poolTempLpTokenAccount: 'A1BMmYPBXudTXzQExpqy1LrqEkKuoasfwCLjwigiSfRh',\n    serumProgramId: SERUM_PROGRAM_ID_V2,\n    serumMarket: 'HTSoy7NCK98pYAkVV6M6n9CTziqVL6z7caS3iWFjfM4G',\n    serumCoinVaultAccount: '6dDDqzNsLx8u2Prk384Rs1jUxFPFQsKHne5oQxnf4kog',\n    serumPcVaultAccount: 'AzxRBcig9mGTfdbUgEdKq48eiNZ2M4ynwQQH4Pvxbcy2',\n    serumVaultSigner: 'FhTczYTxkXMyofPMDQFJGHxjcnPrjrEGQMexob4BVwXD',\n    official: true,\n  },\n  {\n    name: 'LINK-WUSDT',\n    coin: { ...TOKENS.LINK },\n    pc: { ...TOKENS.WUSDT },\n    lp: { ...LP_TOKENS['LINK-WUSDT'] },\n\n    version: 2,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V2,\n\n    ammId: 'Avkh3hMrjRRdGbm7EAmeXaJ1wWrbcwGWDGEroKq5wHJ8',\n    ammAuthority: 'v1uTXS1hrW2DJkKPcQ3Dm7WwhYbGm7LhHoRE29QrHsJ',\n    ammOpenOrders: 'HD7VPeJL2Sgict6oBPhb2s3DXvS9uieQmuw7KzhrfD3j',\n    ammTargetOrders: 'DQ7un7pYeWWcBrt1mpucasb2CaepJQJ3Z3axM3PJ4pJ4',\n    ammQuantities: '5KDL4Mtufuhe6Yof9nSPVjXgXgMFMHCXqKETzzbrsGzY',\n    poolCoinTokenAccount: '7r5YjMLMnmoYkD1bkyYq374yiTBG9XwBHMwi5ZVDptre',\n    poolPcTokenAccount: '6vMeQvJcC3VEGvtZ2TDXcShZerevxkqfW43yjX14vmSz',\n    poolWithdrawQueue: '3tgn1n9wMGfryZu37skcMhUuwbNYFWTT5hurWGijikXZ',\n    poolTempLpTokenAccount: 'EL8G5U28xw9djiEb9AZiEtBUtUdA5YtvaAHJu5hxipCK',\n    serumProgramId: SERUM_PROGRAM_ID_V2,\n    serumMarket: 'hBswhpNyz4m5nt4KwtCA7jYXvh7VmyZ4TuuPmpaKQb1',\n    serumCoinVaultAccount: '8ZP84HpFb5k4paAgDGgXaMtne537LDFaxEWP89WKBPD1',\n    serumPcVaultAccount: 'E3X7J1vyogGKZSySEo3WTS9GzipyTGVd5KKiXeFy1YHu',\n    serumVaultSigner: '7bwfaV98FDNtWvgPMo7wY3nE7cE8tKfXkFAVzCxtkw6w',\n    official: true,\n  },\n  {\n    name: 'ETH-WUSDT',\n    coin: { ...TOKENS.ETH },\n    pc: { ...TOKENS.WUSDT },\n    lp: { ...LP_TOKENS['ETH-WUSDT'] },\n\n    version: 2,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V2,\n\n    ammId: '7PGNXqdhrpQoVS5uQs9gjT1zfY6MUzEeYHopRnryj7rm',\n    ammAuthority: 'BFCEvcoD1xY1HK4psbC5wYXVXEvmgwg4wKggk89u1NWw',\n    ammOpenOrders: '3QaSNxMuA9zEXazLdD2oJq7jUCfShgtvdaepuq1uJFnS',\n    ammTargetOrders: '2exvd2T7yFYhBpi67XSrCVChVwMu23g653ELEnjvv8uu',\n    ammQuantities: 'BtwQvRXNudUrazbJNhazajSZXEXbrf51ddBrmnje27Li',\n    poolCoinTokenAccount: 'Gej1jXVRMdDKWSxmEZ78KJp5jruGJfR9dV3beedXe3BG',\n    poolPcTokenAccount: 'FUDEbQKfMTfAaKS3dGdPEacfcC9bRpa5gmmDW8KNoUKp',\n    poolWithdrawQueue: '4q3qXQsQSvzNE1fSyEh249vHGttKfQPJWM7A3AtffEX5',\n    poolTempLpTokenAccount: '8i2cZ1UCAjVac6Z76GvQeRqZMKgMyuoZQeNSsjdtEgHG',\n    serumProgramId: SERUM_PROGRAM_ID_V2,\n    serumMarket: '5abZGhrELnUnfM9ZUnvK6XJPoBU5eShZwfFPkdhAC7o',\n    serumCoinVaultAccount: 'Gwna45N1JGLmUMGhFVP1ELz8szVSajp12RgPqCbk46n7',\n    serumPcVaultAccount: '8uqjWjNQiZvoieaGSoCRkGZExrqMpaYJL5huknCEHBcP',\n    serumVaultSigner: '4fgnxw343cfYgcNgWvan8H6j6pNBskBmGX4XMbhxtFbi',\n    official: true,\n  },\n  {\n    name: 'RAY-USDC',\n    coin: { ...TOKENS.RAY },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['RAY-USDC'] },\n\n    version: 2,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V2,\n\n    ammId: 'G2PVNAKAp17xtruKiMwT1S2GWNxptWZfqK6oYrFWCXWX',\n    ammAuthority: '2XTg6m9wpuUyPNhHbi8DCGfyo58bpqmAmbujEEpUykSo',\n    ammOpenOrders: 'HuGmmcqH6ULntUdfaCVrx4uzuhHME55Dczt793EweoTZ',\n    ammTargetOrders: 'B3UeQ7SK9U9a5vP8fDtZ5gfDv6KRFSsNtawpoH7fziNW',\n    ammQuantities: 'LEgCPaQhYv9YSnKXvHtc6HixwxdXe9mmvLCuTTxW2Yn',\n    poolCoinTokenAccount: 'CvcqJtGdS9C1jKKFzgCi5p8qsnR5BZCohWvYMBJXcnJ8',\n    poolPcTokenAccount: 'AiYm8jzb2WB4HTTFTHX1XCS7uVSQM5XWnMsure5sMeQY',\n    poolWithdrawQueue: 'rYqeTgbeQvrDxeCg4kjqHA1X6rfjjLQvQTJeYLAgXq7',\n    poolTempLpTokenAccount: '4om345FvSd9dqwFpy1SVmPFY9KzeUk8WmKiMzTbQxCQf',\n    serumProgramId: SERUM_PROGRAM_ID_V2,\n    serumMarket: 'Bgz8EEMBjejAGSn6FdtKJkSGtvg4cuJUuRwaCBp28S3U',\n    serumCoinVaultAccount: 'BuMsEd7Ub6MtCCh1eT8pvL6zcBPbiifa1idVWa1BeE2R',\n    serumPcVaultAccount: 'G7i7ZKx7rfMXGreLYzvR3ZZERgaGK7646nAgi8yjE8iN',\n    serumVaultSigner: 'Aj6H2siiKsnAdAS5YVwuJPdXrHaLodsSyKs7ZiEtEZQN',\n    official: true,\n  },\n  {\n    name: 'RAY-SRM',\n    coin: { ...TOKENS.RAY },\n    pc: { ...TOKENS.SRM },\n    lp: { ...LP_TOKENS['RAY-SRM'] },\n\n    version: 2,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V2,\n\n    ammId: '3Y5dpV9DtwkhewxXpiVRscFeQR2dvsHovXQonkKbuDwB',\n    ammAuthority: '7iND8ysb6fGUy8tx4C8AS51wbjvRjBxxSoaaL7t1yWXX',\n    ammOpenOrders: '4QXs3bK3nyauMYutJjD8qGunFphAw944SsRdSD7n8oUj',\n    ammTargetOrders: '5oaHFj1aqz9xLxYwByddXiUfbSwRZ3gmSJsgBF4no7Xx',\n    ammQuantities: 'His9VQDWu55QdDUFu7tp5CpiCB1fMs6EDk5oC4uTaS4G',\n    poolCoinTokenAccount: '5fHS778vozoDDYzzJz2xYG39whTzGGW6bF71GVxRyMXi',\n    poolPcTokenAccount: 'CzVe191iLM2E31DBW7isXpZBPtcufRRsaxNRc8uShcEs',\n    poolWithdrawQueue: 'BGmJSiCR7uuahrajWv1RgBJrbUjcQHREFfewqZPhf346',\n    poolTempLpTokenAccount: '5aMZAZdab2iS62rfqPYd15AkQ7Y5zSSfz7WxHjV9ZRPw',\n    serumProgramId: SERUM_PROGRAM_ID_V2,\n    serumMarket: 'HSGuveQDXtvYR432xjpKPgHfzWQxnb3T8FNuAAvaBbsU',\n    serumCoinVaultAccount: '6wXCSGvFvWLVoiRaXJheHoXec4LiJhiCWnxmQbYc9kv5',\n    serumPcVaultAccount: 'G8KH5rE5EqeTpnLjTTNgKhVp47yRHCN28wH27vYFkWCR',\n    serumVaultSigner: 'EXZnYg9QCzujDwm621N286d4KLAZiMwpUv64GdECcxbm',\n    official: true,\n  },\n  // v3\n  {\n    name: 'RAY-WUSDT',\n    coin: { ...TOKENS.RAY },\n    pc: { ...TOKENS.WUSDT },\n    lp: { ...LP_TOKENS['RAY-WUSDT-V3'] },\n\n    version: 3,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V3,\n\n    ammId: 'FEAkBF4GhYKrYbxMa7tFcujvzxKrueC7xHT2NdyC9vxm',\n    ammAuthority: 'CgvoNxNc93c91zYkPTAkBsYxjcAn8bRsnLM5ZxNKUpDj',\n    ammOpenOrders: '2nzyzD5sdDKkP5pN5V5HGDmacpQJPEkMHqA1vopuRupY',\n    ammTargetOrders: 'BYCxxFuPB6MjLmpBoA7XMXHKk87LP1V62HPFh5BaobBd',\n    ammQuantities: 'H8P2YR1MTFgcRKnGHYWk6Aitqf72aXCN3ZKM29mRQqqe',\n    poolCoinTokenAccount: 'DTQTBTSy3tiy7kZZWgaczWxs9snnTVTi8DBYBzjaVwbj',\n    poolPcTokenAccount: 'Bk2G4zhjB7VmRsaBwh2ijPwq6tavMHALEq4guogxsosT',\n    poolWithdrawQueue: '9JnsD9Pm8YQhMMAKBV7RgPcdVnRTuwJW5PXdWx7T2K8C',\n    poolTempLpTokenAccount: 'FfNM2Szi8xKWj3SUAjYpsHKuyQsd9NuW8ARkMqyNYPiJ',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'C4z32zw9WKaGPhNuU54ohzrV4CE1Uau3cFx6T8RLjxYC',\n    serumCoinVaultAccount: '6hCHQufQsxsHDkHYNmw79WvfsAGXvomdZnkzWN7MYz8f',\n    serumPcVaultAccount: '7qM644QyBzMvqLLiEYhJksyPzwUpuQj44EodLb1va8aG',\n    serumVaultSigner: '2hzqYES4AcwVkuMdNsNNqi1jqjfKSyL2BNus4kimVXNk',\n    official: true,\n  },\n  {\n    name: 'RAY-USDC',\n    coin: { ...TOKENS.RAY },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['RAY-USDC-V3'] },\n\n    version: 3,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V3,\n\n    ammId: '5NMFfbccSpLdre6anA8P8vVy35n2a52AJiNPpQn8tJnE',\n    ammAuthority: 'Bjhs6Mrvxr34WAKLog2tiU77VMvwNZcrJ1g8UyGoic3e',\n    ammOpenOrders: '3Xq4vBd5EWs45v9YwG1Mpfr8Xjng23pDovVUbnAaPce9',\n    ammTargetOrders: '7ccgnj4dTuVTaQCwbECDc3GrKrQpuGNA4cETiSNo2cCN',\n    ammQuantities: '6ifgXdNx8zKd4bseuya6FEKb49VWx1dDvVTC8f7kc361',\n    poolCoinTokenAccount: 'DujWhSxnwqFd3TrLfScyUhJ3FdoaHrmoiVE6kU4ETQyL',\n    poolPcTokenAccount: 'D6F5CDaLDCHHWfE8kMLbMNAFULXLfM572AGDx2a6KeXc',\n    poolWithdrawQueue: '76QQPxNT422AL8w5RhssRFQ3gUGy7Y23YxV9BRWqs44Q',\n    poolTempLpTokenAccount: '2Q9PevhtVioNFyFFrbkzcGxn1QmzFph5Cpdy1FKe3nYJ',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '2xiv8A5xrJ7RnGdxXB42uFEkYHJjszEhaJyKKt4WaLep',\n    serumCoinVaultAccount: 'GGcdamvNDYFhAXr93DWyJ8QmwawUHLCyRqWL3KngtLRa',\n    serumPcVaultAccount: '22jHt5WmosAykp3LPGSAKgY45p7VGh4DFWSwp21SWBVe',\n    serumVaultSigner: 'FmhXe9uG6zun49p222xt3nG1rBAkWvzVz7dxERQ6ouGw',\n    official: true,\n  },\n  {\n    name: 'RAY-SRM',\n    coin: { ...TOKENS.RAY },\n    pc: { ...TOKENS.SRM },\n    lp: { ...LP_TOKENS['RAY-SRM-V3'] },\n\n    version: 3,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V3,\n\n    ammId: 'EGhB6FdyHtJPbPMRoBC8eeUVnVh2iRgnQ9HZBKAw46Uy',\n    ammAuthority: '3gSVizZA2BFsWAfW4j1wBSQiQE9Xn3Ds518jPGve31se',\n    ammOpenOrders: '6CVRtzecMaPZ1pdfT2ZzJ1qf89yuFsD7MKYGwvjYsy6w',\n    ammTargetOrders: 'CZYbET8zweaWtWLnFJnt5nouCE9snQxFi7zrTCGYycL1',\n    ammQuantities: '3NGwJe5bueAgLp6fMrY5HV2rpHF9xh3HhH97S6LrMLPo',\n    poolCoinTokenAccount: 'Eg6sR9H28cFaek5DVdgxxDcRKKbS85XvCFEzzkdmYNhq',\n    poolPcTokenAccount: '8g2nHtayS2JnRxaAY5ugsYC8CwiZutQrNWA9j2oH8UVM',\n    poolWithdrawQueue: '7Yc1P9nyev1uoLtLJu15o5vQugvfXoHcde6x2mm1HeED',\n    poolTempLpTokenAccount: '5WHmdyH7CgiezSGcD9PVMYth9hMEWETV1M64zmZ9UT5o',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'Cm4MmknScg7qbKqytb1mM92xgDxv3TNXos4tKbBqTDy7',\n    serumCoinVaultAccount: '5QDTh4Bpz4wruWMfayMSjUxRgDvMzvS2ifkarhYtjS1B',\n    serumPcVaultAccount: '76CofnHCvo5wEKtxNWfLa2jLDz4quwwSHFMne6BWWqx',\n    serumVaultSigner: 'AorjCaSV1L6NGcaFZXEyUrmbSqY3GdB3YXbQnrh85v6F',\n    official: true,\n  },\n  {\n    name: 'RAY-SOL',\n    coin: { ...TOKENS.RAY },\n    pc: { ...NATIVE_SOL },\n    lp: { ...LP_TOKENS['RAY-SOL-V3'] },\n\n    version: 3,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V3,\n\n    ammId: 'HeRUVkQyPuJAPFXUkTaJaWzimBopWbJ54q5DCMuPpBY4',\n    ammAuthority: '63Cw8omVwSQGDPP5nff3a9DakvL8ruaqqEpbQ4uDwPYf',\n    ammOpenOrders: 'JQEY8R9frhxuvcsewGfgkCVdGWztpHLx4P9zmTAsZFM',\n    ammTargetOrders: '7mdd7oqHqULV1Yxaaf5GW52FKFbJz78sZj9ePcfmL5Fi',\n    ammQuantities: 'HHU2THd3tocaYagZh826KCvLDv7QNWLGKjaJKmtdtTQM',\n    poolCoinTokenAccount: 'Fy6SnHwAkxoGMhUH2cLu2biqAnHmaAwFDDww9k6gq5ws',\n    poolPcTokenAccount: 'GoRindEPofTJ3axsonTnbyf7cFwdFdG1A3MG9ENyBZsn',\n    poolWithdrawQueue: '3bUwc23vXP9L6XBjVCvG9Mruuu7GRkcfmyXuaH6HdmW2',\n    poolTempLpTokenAccount: '9dALTRnKoLmfMn3hPyQoizmSJ5CZSLMLdJy1XMocwXMU',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'C6tp2RVZnxBPFbnAsfTjis8BN9tycESAT4SgDQgbbrsA',\n    serumCoinVaultAccount: '6U6U59zmFWrPSzm9sLX7kVkaK78Kz7XJYkrhP1DjF3uF',\n    serumPcVaultAccount: '4YEx21yeUAZxUL9Fs7YU9Gm3u45GWoPFs8vcJiHga2eQ',\n    serumVaultSigner: '7SdieGqwPJo5rMmSQM9JmntSEMoimM4dQn7NkGbNFcrd',\n    official: true,\n  },\n  {\n    name: 'RAY-ETH',\n    coin: { ...TOKENS.RAY },\n    pc: { ...TOKENS.ETH },\n    lp: { ...LP_TOKENS['RAY-ETH-V3'] },\n\n    version: 3,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V3,\n\n    ammId: 'FrDSSYXGcrJc7ZwY5KMfTmzDfrzjvqdxmSinJFwxLr14',\n    ammAuthority: '5Wbe7MYpw8y9iroZKVN8b3fLZNeBUbRKetQwULicDpw2',\n    ammOpenOrders: 'ugyjEMZLumc1M5c7MNXayMYmxpnuMRYiT4aPwfNb6bq',\n    ammTargetOrders: '2M6cT1GvGTiovTj7bRsZBeLMeJzjYoDTHNiTRVJqRFeM',\n    ammQuantities: '5YcH7AwHNLdDJd2K6YmZAxqqvGYjgE59NaYAh3pkgVd7',\n    poolCoinTokenAccount: 'ENjXaFNDiLTh44Gs89ZtfUH2i5MGLLkfYbSY7TmP4Du3',\n    poolPcTokenAccount: '9uzWJD2WqJYSmB6UHSyPMskFGoP5L6hB7FxqUdYP4Esm',\n    poolWithdrawQueue: 'BkrxkmYs1JViXbiBJfnwgns75CJd9yHcqUkFXB8Bz7oB',\n    poolTempLpTokenAccount: 'CKZ7NMunTef18yKHuizRoNZedzTdDEFwYRUgB3dFDcrd',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '6jx6aoNFbmorwyncVP5V5ESKfuFc9oUYebob1iF6tgN4',\n    serumCoinVaultAccount: 'EVVtYo4AeCbmn2dYS1UnhtfjpzCXCcN26G1HmuHwMo7w',\n    serumPcVaultAccount: '6ZT6KwvjLnJLpFdVfiRD9ifVUo4gv4MUie7VvPTuk69v',\n    serumVaultSigner: 'HXbRDLcX2FyqWJY95apnsTgBoRHyp7SWYXcMYod6EBrQ',\n    official: true,\n  },\n  // v4\n  {\n    name: 'FIDA-RAY',\n    coin: { ...TOKENS.FIDA },\n    pc: { ...TOKENS.RAY },\n    lp: { ...LP_TOKENS['FIDA-RAY-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: '2dRNngAm729NzLbb1pzgHtfHvPqR4XHFmFyYK78EfEeX',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'DUVSNpoCNyGDP9ef9gJC5Dg53khxTyM1pQrKVetmaW8R',\n    ammTargetOrders: '89HcsFvCQaUdorVF712EhNhecvVM7Dk6XAdPbaykB3q2',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '6YeEo7ZTRHotXd89JTBJKRXERBjv3N3ofgsgJ4FoAa39',\n    poolPcTokenAccount: 'DDNURcWy3CU3CpkCnDoGXwQAeCg1mp2CC8WqvwHp5Fdt',\n    poolWithdrawQueue: 'H8gZ2f4hp6LfaszDN5uHAeDwZ1qJ4M4s2A59i7nMFFkN',\n    poolTempLpTokenAccount: 'Bp7LNZH44vecbv69kY35bjmsTjboGbEKy62p7iRT8az',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '9wH4Krv8Vim3op3JAu5NGZQdGxU8HLGAHZh3K77CemxC',\n    serumBids: 'E2FEkqPVcQZgRaE7KabcHGbpNkpycnvVZMan2MPNGKeM',\n    serumAsks: '5TXqn1N2kpCWWV4AcXtFYJw8WqLrXP62qenxiSfhxJiD',\n    serumEventQueue: '58qMcacA2Qk4Tc4Rut3Lnao91JvvWJJ26f5kojKnMRen',\n    serumCoinVaultAccount: 'A2SMhqA1kMTudVeAeWdzCaYYeG6Dts19iEZd4ZQQAcUm',\n    serumPcVaultAccount: 'GhpccNwfein8qP6uhWnP4vuRva1iLivuQQHUTM7tW58r',\n    serumVaultSigner: 'F7VdEoWQGmdFK35SD21wAbDWtnkVpcrxM3DPVnmG8Q3i',\n    official: true,\n  },\n  {\n    name: 'OXY-RAY',\n    coin: { ...TOKENS.OXY },\n    pc: { ...TOKENS.RAY },\n    lp: { ...LP_TOKENS['OXY-RAY-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: 'B5ZguAWAGC3GXVtJZVfoMtzvEvDnDKBPCevsUKMy4DTZ',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'FVb13WU1W1vFouhRXZWVZWGkQdK5jo35EnaCrMzFqzyd',\n    ammTargetOrders: 'FYPP5v8SLHPPcivgBJPE9FgrN6o2QVMB627n3XcZ8rCS',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '6ttf7G7FR9GWqxiyCLFNaBTvwYzTLPdbbrNcRvShaqtS',\n    poolPcTokenAccount: '8orrvb6rHB776KbQmszcxPH44cZHdCTYC1fr2a3oHufC',\n    poolWithdrawQueue: '4Q9bNJsWreAGhkwhKYL7ApyhEBuwNxiPkcEQNmUjQGHZ',\n    poolTempLpTokenAccount: 'E12sRQvEHArCULaJu8xppoJKQgJsuDuwPVJZJRrUKYFu',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'HcVjkXmvA1815Es3pSiibsRaFw8r9Gy7BhyzZX83Zhjx',\n    serumBids: 'DaGRz2TAdcVcPwPmYF5JJ7d7kPWvLN68vuBTTMwnoM3T',\n    serumAsks: '3ZRtPBQVcjCpVmCt4xPPeJJiUnDDbrc5jommVHGsDLnT',\n    serumEventQueue: 'C5SGEXUCmN1LxmxapPn2XaHX1FF7fAuQG5Wu4yuu8VK6',\n    serumCoinVaultAccount: 'FcDWM8eKUEny2wxopDMrZqgmPr3Tmoen9Dckh3MoVX9N',\n    serumPcVaultAccount: '9ya4Hv4XdzntjiLwxpgqnX8eP4MtFf8YWEssF6C5Pqhq',\n    serumVaultSigner: 'Bf9MhS6hwAGSWVJ4uLWKSU6fqPAEroRsHX6ithEjGXiG',\n    official: true,\n  },\n  {\n    name: 'MAPS-RAY',\n    coin: { ...TOKENS.MAPS },\n    pc: { ...TOKENS.RAY },\n    lp: { ...LP_TOKENS['MAPS-RAY-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: '5VyLSjUvaRxsubirbvbfJMbrKZRx1b7JZzuCAfyqgimf',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'HViBtwESRNKLZY7qLQxP68b5vLdUQa1XMAKz19LbSHjx',\n    ammTargetOrders: '8Cwm1Z75hQdUpFUxCuoWmWBLcAaZvKMAn2xKeuotC4eC',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '6rYv6kLfhAVKZw1xN2S9NWNgp8EfUVvYKi1Hgzd5x9XE',\n    poolPcTokenAccount: '8HfvN4VyAQjX6MhziRxMg5LjbMh9Fw889yf3sDgrXakw',\n    poolWithdrawQueue: 'HnzkiYgZg22ZaQGdeTHiCgJaoW138CLqCb8tr6QJFkU4',\n    poolTempLpTokenAccount: 'DnTQwA9PdwLSibsiQFZ35yJJDNJfG9fNbHspPmb8v8TQ',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '7Q4hee42y8ZGguqKmwLhpFNqVTjeVNNBqhx8nt32VF85',\n    serumBids: 'J9ZmfF71eMMzisvaYW12EK87UaopZ4hgND2nr61YwmKw',\n    serumAsks: '9ah4Mewrh841gmfaX1v1wCByHU3rbCuUmWUgt2TBAfnb',\n    serumEventQueue: 'EtimVRtnRUAfv9tXVAHpGCGvtYezcpmzbkwZLuwWAYqe',\n    serumCoinVaultAccount: '2zriJ5sVApLD9TC9PxbXK41AkVCQBaRreeXtGx7AGE41',\n    serumPcVaultAccount: '2qAKnjzokKR4sL6Xtp1nZYKXTmsraXW9CL3HuBZx3qpA',\n    serumVaultSigner: 'CH76NgZMpUJ8QQqVNpjyCSpQmZBNZLXW6a5vDHj3aUUC',\n    official: true,\n  },\n  {\n    name: 'KIN-RAY',\n    coin: { ...TOKENS.KIN },\n    pc: { ...TOKENS.RAY },\n    lp: { ...LP_TOKENS['KIN-RAY-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: '6kmMMacvoCKBkBrqssLEdFuEZu2wqtLdNQxh9VjtzfwT',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'DiP4F6FTR5jiTar8fwuwRVuYop5wYRqy2EjbiKTXPrHw',\n    ammTargetOrders: '2ak4VVyS19sVESvvBuPZRMAhvY4vVCZCxeELYAybA7wk',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 's7LP6qptF1wufA9neYhekmVPqhav8Ak85AV5ip5h8wK',\n    poolPcTokenAccount: '9Q1Xs1s8tCirX3Ky3qo9UjvSqSoGinZvWaUMFXY5r2HF',\n    poolWithdrawQueue: 'DeHaCJ8KL5uwBGenkUwa39JyhacxPDqDqHAp5HLqgd1i',\n    poolTempLpTokenAccount: 'T2acWsGDQ4ZRXs4WXVi7vCeH4TxzgjcL6s14xFNuT26',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'Fcxy8qYgs8MZqiLx2pijjay6LHsSUqXW47pwMGysa3i9',\n    serumBids: 'HKWdSptDBeXTURKpQQ2AGPmT2B9LGNBVteq44UzDxKBh',\n    serumAsks: '2ceQrRfuNWL8kR2fockPo7C31uDeTyXTs4EyA28FD2kg',\n    serumEventQueue: 'GwnDyxFnHSnzDdu8dom3vydtTpSu443oZPKepXww5zNB',\n    serumCoinVaultAccount: '2sCJ5YZtwEbpXiw7HSXVx8Qot8hwyCpXNEkswZCssi2J',\n    serumPcVaultAccount: 'H6B59E77WZt4JLfaXdZQBKdATRcWaKy5N6Ki1ZRo1Mcv',\n    serumVaultSigner: '5V7FCcvmGtqkMJXHiTSeo61MS5LSMUFK1Esr5kn46cEv',\n    official: true,\n  },\n  {\n    name: 'RAY-USDT',\n    coin: { ...TOKENS.RAY },\n    pc: { ...TOKENS.USDT },\n    lp: { ...LP_TOKENS['RAY-USDT-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: 'DVa7Qmb5ct9RCpaU7UTpSaf3GVMYz17vNVU67XpdCRut',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '7UF3m8hDGZ6bNnHzaT2YHrhp7A7n9qFfBj6QEpHPv5S8',\n    ammTargetOrders: '3K2uLkKwVVPvZuMhcQAPLF8hw95somMeNwJS7vgWYrsJ',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '3wqhzSB9avepM9xMteiZnbJw75zmTBDVmPFLTQAGcSMN',\n    poolPcTokenAccount: '5GtSbKJEPaoumrDzNj4kGkgZtfDyUceKaHrPziazALC1',\n    poolWithdrawQueue: '8VuvrSWfQP8vdbuMAP9AkfgLxU9hbRR6BmTJ8Gfas9aK',\n    poolTempLpTokenAccount: 'FBzqDD1cBgkZ1h6tiZNFpkh4sZyg6AG8K5P9DSuJoS5F',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'teE55QrL4a4QSfydR9dnHF97jgCfptpuigbb53Lo95g',\n    serumBids: 'AvKStCiY8LTp3oDFrMkiHHxxhxk4sQUWnGVcetm4kRpy',\n    serumAsks: 'Hj9kckvMX96mQokfMBzNCYEYMLEBYKQ9WwSc1GxasW11',\n    serumEventQueue: '58KcficuUqPDcMittSddhT8LzsPJoH46YP4uURoMo5EB',\n    serumCoinVaultAccount: '2kVNVEgHicvfwiyhT2T51YiQGMPFWLMSp8qXc1hHzkpU',\n    serumPcVaultAccount: '5AXZV7XfR7Ctr6yjQ9m9dbgycKeUXWnWqHwBTZT6mqC7',\n    serumVaultSigner: 'HzWpBN6ucpsA9wcfmhLAFYqEUmHjE9n2cGHwunG5avpL',\n    official: true,\n  },\n  {\n    name: 'SOL-USDC',\n    coin: { ...NATIVE_SOL },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['SOL-USDC-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: '58oQChx4yWmvKdwLLZzBi4ChoCc2fqCUWBkwMihLYQo2',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'HRk9CMrpq7Jn9sh7mzxE8CChHG8dneX9p475QKz4Fsfc',\n    ammTargetOrders: 'CZza3Ej4Mc58MnxWA385itCC9jCo3L1D7zc3LKy1bZMR',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'DQyrAcCrDXQ7NeoqGgDCZwBvWDcYmFCjSb9JtteuvPpz',\n    poolPcTokenAccount: 'HLmqeL62xR1QoZ1HKKbXRrdN1p3phKpxRMb2VVopvBBz',\n    poolWithdrawQueue: 'G7xeGGLevkRwB5f44QNgQtrPKBdMfkT6ZZwpS9xcC97n',\n    poolTempLpTokenAccount: 'Awpt6N7ZYPBa4vG4BQNFhFxDj4sxExAA9rpBAoBw2uok',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '9wFFyRfZBsuAha4YcuxcXLKwMxJR43S7fPfQLusDBzvT',\n    serumBids: '14ivtgssEBoBjuZJtSAPKYgpUK7DmnSwuPMqJoVTSgKJ',\n    serumAsks: 'CEQdAFKdycHugujQg9k2wbmxjcpdYZyVLfV9WerTnafJ',\n    serumEventQueue: '5KKsLVU6TcbVDK4BS6K1DGDxnh4Q9xjYJ8XaDCG5t8ht',\n    serumCoinVaultAccount: '36c6YqAwyGKQG66XEp2dJc5JqjaBNv7sVghEtJv4c7u6',\n    serumPcVaultAccount: '8CFo8bL8mZQK8abbFyypFMwEDd8tVJjHTTojMLgQTUSZ',\n    serumVaultSigner: 'F8Vyqk3unwxkXukZFQeYyGmFfTG3CAX4v24iyrjEYBJV',\n    official: true,\n  },\n  {\n    name: 'YFI-USDC',\n    coin: { ...TOKENS.YFI },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['YFI-USDC-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: '83xxjVczDseaCzd7D61BRo7LcP7cMXut5n7thhB4rL4d',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'DdBAps8e64hpjdWqAAHTThcVFz8mQ6WU2h6s1Kjgb9vk',\n    ammTargetOrders: '8BFicQN1AKaVbf1KNoUieULun1bvpdMxsyjrgC15acM6',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'HhhqmQvx2GMQ6SRQh6nZ1A4C5KjCFLQ6yga1ZXDzRJ92',\n    poolPcTokenAccount: '4J4Y6qkF9yzxz1EsZYTSqviMz3Lo1VHx9ViCUoJph167',\n    poolWithdrawQueue: 'FPkMHzDo46vzy1eW9FuQFz7TdAp1MNCkZFgKxrHiuh3W',\n    poolTempLpTokenAccount: 'DuTzisr6Z2D37yTyY9E4jPMCxhQk3HCNxaL1zKqvwRjR',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '7qcCo8jqepnjjvB5swP4Afsr3keVBs6gNpBTNubd1Kr2',\n    serumBids: '8L8kU4H9Ah3fgbczYKFU9WUR1HgAghso1kKwWAPrmLfS',\n    serumAsks: '4M9kDzMGsNHT3k31i54wf2ceeApvx3224pLbhDvnoj2s',\n    serumEventQueue: '6wKPYgydqNrmcXwbfPeNwkzXmjKMgkUhQcGoGYrm9fS4',\n    serumCoinVaultAccount: '2N59Aig7wqhfffAUjMit7T9tk4FmSRzmByMD7mncTesq',\n    serumPcVaultAccount: 'FcDTYePeh2KJts4nroCghgceiJmSBRgq2Xd3PfpernZm',\n    serumVaultSigner: 'HDdQQNNf9EoCGWhWUgkQHRJVbG3huDXs2z6Fcow3grCr',\n    official: true,\n  },\n  {\n    name: 'SRM-USDC',\n    coin: { ...TOKENS.SRM },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['SRM-USDC-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: '8tzS7SkUZyHPQY7gLqsMCXZ5EDCgjESUHcB17tiR1h3Z',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'GJwrRrNeeQKY2eGzuXGc3KBrBftYbidCYhmA6AZj2Zur',\n    ammTargetOrders: '26LLpo8rscCpMxyAnJsqhqESPnzjMGiFdmXA4eF2Jrk5',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'zuLDJ5SEe76L3bpFp2Sm9qTTe5vpJL3gdQFT5At5xXG',\n    poolPcTokenAccount: '4usvfgPDwXBX2ySX11ubTvJ3pvJHbGEW2ytpDGCSv5cw',\n    poolWithdrawQueue: '7c1VbXTB7Xqx5eQQeUxAu5o6GHPq3P1ByhDsnRRUWYxB',\n    poolTempLpTokenAccount: '2sozAi6zXDUCCkpgG3usphzeCDm4e2jTFngbm5atSdC9',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'ByRys5tuUWDgL73G8JBAEfkdFf8JWBzPBDHsBVQ5vbQA',\n    serumBids: 'AuL9JzRJ55MdqzubK4EutJgAumtkuFcRVuPUvTX39pN8',\n    serumAsks: '8Lx9U9wdE3afdqih1mCAXy3unJDfzSaXFqAvoLMjhwoD',\n    serumEventQueue: '6o44a9xdzKKDNY7Ff2Qb129mktWbsCT4vKJcg2uk41uy',\n    serumCoinVaultAccount: 'Ecfy8et9Mft9Dkavnuh4mzHMa2KWYUbBTA5oDZNoWu84',\n    serumPcVaultAccount: 'hUgoKy5wjeFbZrXDW4ecr42T4F5Z1Tos31g68s5EHbP',\n    serumVaultSigner: 'GVV4ZT9pccwy9d17STafFDuiSqFbXuRTdvKQ1zJX6ttX',\n    official: true,\n  },\n  {\n    name: 'FTT-USDC',\n    coin: { ...TOKENS.FTT },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['FTT-USDC-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: '4C2Mz1bVqe42QDDTyJ4HFCFFGsH5YDzo91Cen5w5NGun',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '23WS5XY3srvBtnP6hXK64HAsXTuj1kT7dd7srjrJUNTR',\n    ammTargetOrders: 'CYbPm6BCkMyX8NnnS7AoCUkpxHVwYyxvjQWwZLsrFcLR',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '4TaBaR1ZgHNuQM3QNHnjJdAT4Sws9cz46MtVWVebg7Ax',\n    poolPcTokenAccount: '7eDiHvsfcZf1VFC2sUDJwr5EMMr66TpQ2nmAreUjoASV',\n    poolWithdrawQueue: '36Aa83kffwBuEP7AqNU1w5c9oB9kLxmR4FMfadXfjNbJ',\n    poolTempLpTokenAccount: '8hdJm5bvgXVtb5LA18QgGeKxnXBcp3cYKwRz8vb3fV44',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '2Pbh1CvRVku1TgewMfycemghf6sU9EyuFDcNXqvRmSxc',\n    serumBids: '9HTDV2r7cQBUKL3fgcJZCUfmJsKA9qCP7nZAXyoyaQou',\n    serumAsks: 'EpnUJCMCQNZi45nCBoNs6Bugy67Kj3bCSTLYPfz6jkYH',\n    serumEventQueue: '2XHxua6ZaPKpCGUNvSvTwc9teJBmexp8iMWCLu4mtzGb',\n    serumCoinVaultAccount: '4LXjM6rptNvhBZTcWk4AL49oF4oA8AH7D4CV6z7tmpX3',\n    serumPcVaultAccount: '2ycZAqQ3YNPfBZnKTbz2FqPiV7fmTQpzF95vjMUekP5z',\n    serumVaultSigner: 'B5b9ddFHrjndUieLAKkyzB1xmq8sNqGGZPmbyYWPzCyu',\n    official: true,\n  },\n  {\n    name: 'BTC-USDC',\n    coin: { ...TOKENS.BTC },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['BTC-USDC-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: '6kbC5epG18DF2DwPEW34tBy5pGFS7pEGALR3v5MGxgc5',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'L6A7qW935i2HgaiaRx6xNGCGQfFr4myFU51dUSnCshd',\n    ammTargetOrders: '6DGjaczWfFthTYW7oBk3MXP2mMwrYq86PA3ki5YF6hLg',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'HWTaEDR6BpWjmyeUyfGZjeppLnH7s8o225Saar7FYDt5',\n    poolPcTokenAccount: '7iGcnvoLAxthsXY3AFSgkTDoqnLiuti5fyPNm2VwZ3Wz',\n    poolWithdrawQueue: '8g6jrVU7E7eghT3FQa7uPbwHUHwHHLVCEjBh94pA1NVk',\n    poolTempLpTokenAccount: '2Nhg2RBqHBx7R74VSEAbfSF8Kmi1x3HxyzCu3oFgpRJJ',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'A8YFbxQYFVqKZaoYJLLUVcQiWP7G2MeEgW5wsAQgMvFw',\n    serumBids: '6wLt7CX1zZdFpa6uGJJpZfzWvG6W9rxXjquJDYiFwf9K',\n    serumAsks: '6EyVXMMA58Nf6MScqeLpw1jS12RCpry23u9VMfy8b65Y',\n    serumEventQueue: '6NQqaa48SnBBJZt9HyVPngcZFW81JfDv9EjRX2M4WkbP',\n    serumCoinVaultAccount: 'GZ1YSupuUq9kB28kX9t1j9qCpN67AMMwn4Q72BzeSpfR',\n    serumPcVaultAccount: '7sP9fug8rqZFLbXoEj8DETF81KasaRA1fr6jQb6ScKc5',\n    serumVaultSigner: 'GBWgHXLf1fX4J1p5fAkQoEbnjpgjxUtr4mrVgtj9wW8a',\n    official: true,\n  },\n  {\n    name: 'SUSHI-USDC',\n    coin: { ...TOKENS.SUSHI },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['SUSHI-USDC-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: '5dHEPTgvscKkAc54R77xUeGdgShdG9Mf6gJ9bwBqyb3V',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '7a8WXaxsvDV9CjSxgSpJG8LZgdxmSps1ehvtgQj2qt4j',\n    ammTargetOrders: '9f5b3uy3hQutS6pka2GxcSoKjvKaTcB1ivkj1GK43UAV',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'B8vMKgzKHkapzdDu1jW76ALFvVYzHGGKhR5Afz3A4mZd',\n    poolPcTokenAccount: 'Hsxi4jvmszcMaWfU3tk98fQa9pVXtRktfKvKJ7rKBQYi',\n    poolWithdrawQueue: 'AgEspvUPUuaTqyJTjZMCAW3zTuxQBSaU17GhLJoc6Jad',\n    poolTempLpTokenAccount: 'BHLDqVcYUrAwv8RvDUQ76BQDQzvb2yftFN8UccpA2stx',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'A1Q9iJDVVS8Wsswr9ajeZugmj64bQVCYLZQLra2TMBMo',\n    serumBids: 'J8JVRuBojWcHFRGosQKRdDtzxwux8fy2dwfk42Z3dCaf',\n    serumAsks: '6DScSyKZKBi9cXhD3mRkTkpsxrhw6HABFxebsteCP1zU',\n    serumEventQueue: 'Hvpz2Cv2LgWUfTtdfjpnefYrjQuaw8gGjKoDAeGxzrwE',\n    serumCoinVaultAccount: 'BJfPQ2iKTJknyWo2wtCVEpRGWVt8sgpvmSQVNwLioQrk',\n    serumPcVaultAccount: '2UN8qfXzoUDAxZMX1KqKut93frkt5hFREL8xcw6Hgtsg',\n    serumVaultSigner: 'uWhVkK44yR6V5XywVom4oWzDQACSPYHhNjkwXprtUij',\n    official: true,\n  },\n  {\n    name: 'TOMO-USDC',\n    coin: { ...TOKENS.TOMO },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['TOMO-USDC-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: '8mBJC9qdPNDyrpAbrdwGbBpEAjPqwtvZQVmbnKFXXY2P',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'H11WJQWj51KyYU5gdrnsXvpaYZM6ZLGULV93VbTmvaBL',\n    ammTargetOrders: '5E9x2QRpTM2oTtwb62C4rDYR8nJZxN8NFhAtnr2uYFKt',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '5swtuQhJQFid8uMd3DsegoxFKXVS8WoiiB3t9Pos9UHj',\n    poolPcTokenAccount: 'Eqbux46eaW4aZiuy6VUX6z7MJ2TsszeSA7TPnpdw3jVf',\n    poolWithdrawQueue: 'Hwtv6M9iTJc8SH49WjQx5rbRwzAryGm8f1NSQDmnY2iq',\n    poolTempLpTokenAccount: '7YXJQ4rM59A69ow3M21MKbWEEKHbNeZQ1XFESVnbwEPx',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '8BdpjpSD5n3nk8DQLqPUyTZvVqFu6kcff5bzUX5dqDpy',\n    serumBids: 'DriSFYDLxWCEHcnFVaxKu2NrsWGB2htWhD1wkp39qxwU',\n    serumAsks: 'jd3YYp9WqjzyPxhBvj4ixa4DY3bCG1b74VquM4oCUbH',\n    serumEventQueue: 'J82jqHzNAzVYs9ZV3zuRgzRKuu1nGDFMrzJwdxvipjXk',\n    serumCoinVaultAccount: '9tQtmWT3LCbVEoHFK5WK93wmDXv4us5s7NRYhficg9ih',\n    serumPcVaultAccount: 'HRFqUnxuegNbAf2auxqRwECyDijkVGDw25BCJkf5ohM5',\n    serumVaultSigner: '7i7rf8LANeECyi8TAwwLTyvfiVUo4x12iJtKeeA6eG53',\n    official: true,\n  },\n  {\n    name: 'LINK-USDC',\n    coin: { ...TOKENS.LINK },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['LINK-USDC-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: 'Hr8i6MAm4W5Lwb2fB2CD44A2t3Ag3gGc1rmd6amrWsWC',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'G4WdXwbczwDSs6iQmYt1F3sHDhfL6aD2uBkbAoMaaTt4',\n    ammTargetOrders: 'Hf3g2Q63UPSLFSCKZBPJvjVVZxVr83rXm1xWR7yC6spn',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '2ueuL35kQShG1ebZz3Cov4ug9Ex6xVXx4Fc4ZKvxFqMz',\n    poolPcTokenAccount: '66JxeTwodpafkYLPYYAFoVoTh6ukNYoHvtwMMSzSPBCb',\n    poolWithdrawQueue: 'AgVo29AiDosdiXysfwMj8bF2AyD1Nvmn971x8PLwaNAA',\n    poolTempLpTokenAccount: '58EPUPaefpjDxUppc4oyDeDGc9n7sUo7vapinKXigbd',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '3hwH1txjJVS8qv588tWrjHfRxdqNjBykM1kMcit484up',\n    serumBids: 'GhmGNpJhGDz6zhmJ2kskmETbX9SGxhstRsmUejMXC24t',\n    serumAsks: '83KiGivH1w4SiSK9YoN9WZrTSmtwveuCUd1nuZ9AFd2V',\n    serumEventQueue: '9ZZ8eGhTEYK3uBNaFWSYo6ugLD6UVvudxpFXff7XSrmx',\n    serumCoinVaultAccount: '9BswoEnX3SN7YUnRujZa5ygiL8AXVHXE4xqp8USX4QSY',\n    serumPcVaultAccount: '9TibPFxakkdogUYizRhj9Av92fxuY2HxS3nrmme81Sma',\n    serumVaultSigner: '8zqs77myZg6wkPjbh9YdSKtNmfPh4FJTzeo9R39mbjCm',\n    official: true,\n  },\n  {\n    name: 'ETH-USDC',\n    coin: { ...TOKENS.ETH },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['ETH-USDC-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: 'AoPebtuJC4f2RweZSxcVCcdeTgaEXY64Uho8b5HdPxAR',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '7PwhFjfFaYp7w9N8k2do5Yz7c1G5ebp3YyJRhV4pkUJW',\n    ammTargetOrders: 'BV2ucC7miDqsmABSkXGzsibCVWBp7gGPcvkhevDSTyZ1',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'EHT99uYfAnVxWHPLUMJRTyhD4AyQZDDknKMEssHDtor5',\n    poolPcTokenAccount: '58tgdkogRoMsrXZJubnFPsFmNp5mpByEmE1fF6FTNvDL',\n    poolWithdrawQueue: '9qPsKm82ZFacGn4ipV1DH85k7efP21Zbxrxbxm5v3GPb',\n    poolTempLpTokenAccount: '2WtX2ow4h5FK1vb8VjwpJ3hmwmYKfJfa1hy1rcDBohBT',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '4tSvZvnbyzHXLMTiFonMyxZoHmFqau1XArcRCVHLZ5gX',\n    serumBids: '8tFaNpFPWJ8i7inhKSfAcSestudiFqJ2wHyvtTfsBZZU',\n    serumAsks: '2po4TC8qiTgPsqcnbf6uMZRMVnPBzVwqqYfHP15QqREU',\n    serumEventQueue: 'Eac7hqpaZxiBtG4MdyKpsgzcoVN6eMe9tAbsdZRYH4us',\n    serumCoinVaultAccount: '7Nw66LmJB6YzHsgEGQ8oDSSsJ4YzUkEVAvysQuQw7tC4',\n    serumPcVaultAccount: 'EsDTx47jjFACkBhy48Go2W7AQPk4UxtT4765f3tpK21a',\n    serumVaultSigner: 'C5v68qSzDdGeRcs556YoEMJNsp8JiYEiEhw2hVUR8Z8y',\n    official: true,\n  },\n  {\n    name: 'xCOPE-USDC',\n    coin: { ...TOKENS.xCOPE },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['xCOPE-USDC-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: '3mYsmBQLB8EZSjRwtWjPbbE8LiM1oCCtNZZKiVBKsePa',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '4tN7g8KbPt5bU9YDpeAsUNs2FY4G6GRvajTwCCHXt9Lk',\n    ammTargetOrders: 'Fe5ZjyEhnB7mCgFhRkSLWNgvtkrut4iRzk1ydfJxwA9b',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'Guw4ErphtZQRC1foic6WweDSvA9AfuqJHKDXDcbrWH4f',\n    poolPcTokenAccount: '86WgydpDUFRWa9aHzd9JgcKBELPJZVrkZ3uwxiiC3w2V',\n    poolWithdrawQueue: 'Gvmc1zR72pdgoWSzNBqMyNoVHe78nxKgd7FSCE422Lcp',\n    poolTempLpTokenAccount: '6FpDRYsKds3WkiCLjqpDzNBHWZP2Bz6CK9dZryBLKB9D',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '7MpMwArporUHEGW7quUpkPZp5L5cHPs9eKUfKCdaPHq2',\n    serumBids: '5SZ6xDgLzp3QbzkqT68BBAB7orCezSsV5Gb9eAk84zdY',\n    serumAsks: 'Gwt93Xzp8aFrP8YFV8YSuHmYbkrGURBVVHnE6AqDT4Hp',\n    serumEventQueue: 'Ea4bQ4wBJ5MXAwTG1hKzEv1zry5WnGY2G58YR8hcZTk3',\n    serumCoinVaultAccount: '6LtcYXZVb7zfQG33F5dCDKZ29hyQaUh6BBhWjdHp8moy',\n    serumPcVaultAccount: 'FCqm5xfy8ZvMxifVFfSz9Gxv1CTRABVMyLXuJrWvzAq7',\n    serumVaultSigner: 'XoGZnpfyqj539wneBe8xUQyD282mwy5AMUaChz12JCH',\n    official: true,\n  },\n  {\n    name: 'SOL-USDT',\n    coin: { ...NATIVE_SOL },\n    pc: { ...TOKENS.USDT },\n    lp: { ...LP_TOKENS['SOL-USDT-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: '7XawhbbxtsRcQA8KTkHT9f9nc6d69UwqCDh6U5EEbEmX',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '4NJVwEAoudfSvU5kdxKm5DsQe4AAqG6XxpZcNdQVinS4',\n    ammTargetOrders: '9x4knb3nuNAzxsV7YFuGLgnYqKArGemY54r2vFExM1dp',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '876Z9waBygfzUrwwKFfnRcc7cfY4EQf6Kz1w7GRgbVYW',\n    poolPcTokenAccount: 'CB86HtaqpXbNWbq67L18y5x2RhqoJ6smb7xHUcyWdQAQ',\n    poolWithdrawQueue: '52AfgxYPTGruUA9XyE8eF46hdR6gMQiA6ShVoMMsC6jQ',\n    poolTempLpTokenAccount: '2JKZRQc92TaH3fgTcUZyxfD7k7V7BMqhF24eussPtkwh',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'HWHvQhFmJB3NUcu1aihKmrKegfVxBEHzwVX6yZCKEsi1',\n    serumBids: '2juozaawVqhQHfYZ9HNcs66sPatFHSHeKG5LsTbrS2Dn',\n    serumAsks: 'ANXcuziKhxusxtthGxPxywY7FLRtmmCwFWDmU5eBDLdH',\n    serumEventQueue: 'GR363LDmwe25NZQMGtD2uvsiX66FzYByeQLcNFr596FK',\n    serumCoinVaultAccount: '29cTsXahEoEBwbHwVc59jToybFpagbBMV6Lh45pWEmiK',\n    serumPcVaultAccount: 'EJwyNJJPbHH4pboWQf1NxegoypuY48umbfkhyfPew4E',\n    serumVaultSigner: 'CzZAjoEqA6sjqtaiZiPqDkmxG6UuZWxwRWCenbBMc8Xz',\n    official: true,\n  },\n  {\n    name: 'YFI-USDT',\n    coin: { ...TOKENS.YFI },\n    pc: { ...TOKENS.USDT },\n    lp: { ...LP_TOKENS['YFI-USDT-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: '81PmLJ8j2P8CC5EJAAhWGYA4HgJvoKs4Y94ALZF2uKKG',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'pxedkTHh23HBYoarBPKML3xWh96EaNzKLW3oXvHHCw5',\n    ammTargetOrders: 'GUMQZC9SAqynDvoV12sRUzACF8GzLpC5fUtRuzwCbU9S',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'GwY3weBBK4dQFwC96tHAoAQq4pSfMYmMZ4m6Njqq7Wbk',\n    poolPcTokenAccount: 'Bs3DatsVrDujvjpV1JUVmVgNrPkaVwvp6WtuHz4z1QE6',\n    poolWithdrawQueue: '2JJPww9oCvBxTdZaiB2H69Jx4dKWctCEuvbLtFfNCqHd',\n    poolTempLpTokenAccount: 'B46wMQncJ2Ugp2NwWDxK6Qd4Q9T24NK3naNVdyVYxbug',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '3Xg9Q4VtZhD4bVYJbTfgGWFV5zjE3U7ztSHa938zizte',\n    serumBids: '7FN1TgMmjQ8iwTdmJZAiwdTM3MddvxmgiF2J4GVHUtQ1',\n    serumAsks: '5nudyjGUfjwVYCk1MzzuBeXcj9k59g9mruAUXrsQfcrR',\n    serumEventQueue: '4AMp4qKTwE7RwExstg7Pk4JZwJGeRMnjkFmf52tqCHJN',\n    serumCoinVaultAccount: '5KgKdCWVyWi9YJ6GipzozhWxAvnbQPpUtaxuMXXEn3Zs',\n    serumPcVaultAccount: '29CnTKiFKwGPFfLBXDXGRX6ywGz3ToZfqZuLkoa33dbE',\n    serumVaultSigner: '6LRcCMsRoGsye95Ck5oSyNqHJW8kk2iXt9z9YQyi9JkV',\n    official: true,\n  },\n  {\n    name: 'SRM-USDT',\n    coin: { ...TOKENS.SRM },\n    pc: { ...TOKENS.USDT },\n    lp: { ...LP_TOKENS['SRM-USDT-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: 'af8HJg2ffWoKJ6vKvkWJUJ9iWbRR83WgXs8HPs26WGr',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '8E2GLzSgLmzWdpdXjjEaHbPXRXsA5CFehg6FP6N39q2e',\n    ammTargetOrders: '8R5TVxXvRfCaYvT493FWAJyLt8rVssUHYVGbGupAbYaQ',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'D6b4Loa4LoidUor2ffouE5BTMt6tLP6MtkNrsfBWG2C3',\n    poolPcTokenAccount: '4gNeJniq6yqEygFmbAJa82TQjH1j3Fczm4bdeBHhwGJ1',\n    poolWithdrawQueue: 'D3JQytXAydpHKUPChDe8JXdmvYRRV4EpnrxsqzMHNjFp',\n    poolTempLpTokenAccount: '2dYW9SoJb51YNneQG7AywSB75jmzZa2R8rzzW7gT61h1',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'AtNnsY1AyRERWJ8xCskfz38YdvruWVJQUVXgScC1iPb',\n    serumBids: 'EE2CYFBSoMvcUR9mkEF6tt8kBFhW9zcuFmYqRM9GmqYb',\n    serumAsks: 'nkNzrV3ZtkWCft6ykeNGXXCbNSemqcauYKiZdf5JcKQ',\n    serumEventQueue: '2i34Kriz23ZaQaJK6FVhzkfLhQj8DSqdQTmMwz4FF9Cf',\n    serumCoinVaultAccount: 'GxPFMyeb7BUnu2mtGV2Zvorjwt8gxHqwL3r2kVDe6rZ8',\n    serumPcVaultAccount: '149gvUQZeip4u8bGra5yyN11btUDahDVHrixzknfKFrL',\n    serumVaultSigner: '4yWr7H2p8rt11QnXb2yxQF3zxSdcToReu5qSndWFEJw',\n    official: true,\n  },\n  {\n    name: 'FTT-USDT',\n    coin: { ...TOKENS.FTT },\n    pc: { ...TOKENS.USDT },\n    lp: { ...LP_TOKENS['FTT-USDT-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: '4fgubfZVL6L8tc5x1j65S14P2Tnxr1YayKtKavQV5MBo',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'BSDKUy73wuGskKDVgzNGLL2k7hzDEwj237nZZ3Ch3bwz',\n    ammTargetOrders: '4j1JaKap2s4XrkJeMDaMabfEDsQm9ykeUgJ9CWa9w4JU',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'HHTXo4Q8HFWMSDKnPJWCe1Y5UmYPFNZ6hU4mc8km7Zf4',\n    poolPcTokenAccount: '5rbAHV9ufT11XRR5LcvMVsuA5FcpBozLKj91z372wpZR',\n    poolWithdrawQueue: 'AMU4FFUUahWfaUA6WWzTWNNuiXoNDEgNNsZjFLWhvB8f',\n    poolTempLpTokenAccount: 'FUVUCrKB6c7x9uVn1zK8qxbVwb6rNLqA2W17TM9Bhvta',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'Hr3wzG8mZXNHV7TuL6YqtgfVUesCqMxGYCEyP3otywZE',\n    serumBids: '3k5bWdYn9thQmqrye2gSobzFBYTyYosx3bKvMJRcfTTN',\n    serumAsks: 'DPW1r1p2uyfQxVC7vx3xVQcVvyUeiS2vhAnveQiXs9AT',\n    serumEventQueue: '9zMcCfjdHH2Z7iCBtVdkmf9qXUN6y7AhbuWhRMu2DmcV',\n    serumCoinVaultAccount: 'H1VJqo3piiadyVAUQW6yfZq4an8pgDFvAdqHJkRXMDbq',\n    serumPcVaultAccount: '9SQ4Sjsszt59X3aLwRrTqa5SLxonEdXk5jF7KUfAxc8Z',\n    serumVaultSigner: 'CgV9LcnAukrgDZmqhUwcNQ31z4KEjZEz4DHUSE4bRaVg',\n    official: true,\n  },\n  {\n    name: 'BTC-USDT',\n    coin: { ...TOKENS.BTC },\n    pc: { ...TOKENS.USDT },\n    lp: { ...LP_TOKENS['BTC-USDT-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: 'AMMwkf57c7ZsbbDCXvBit9zFehMr1xRn8ZzaT1iDF18o',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'G5rZ4Qfv5SxpJegVng5FuZftDrJkzLkxQUNjEXuoczX5',\n    ammTargetOrders: 'DMEasFJLDw27MLkTBFqSX2duvV5GV6LzwtoVqVfBqeGR',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '7KwCHoQ9nqTnGea4XrcfLUr1pwEWp2maGBHWFqBTeoKW',\n    poolPcTokenAccount: 'HwbXe9YJVez3BKK22jBH1i64YeX2fSKaYny5jrcPDxAk',\n    poolWithdrawQueue: '3XUXNx72jcaXB3N56UjrtWwxv99ivqUwLAdkagvop4HF',\n    poolTempLpTokenAccount: '8rZSQ23HWfZ1P6qd9ZL4ywTgRYtRZDd3xW3aK1hY7pkR',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'C1EuT9VokAKLiW7i2ASnZUvxDoKuKkCpDDeNxAptuNe4',\n    serumBids: '2e2bd5NtEGs6pb758QHUArNxt6X9TTC5abuE1Tao6fhS',\n    serumAsks: 'F1tDtTDNzusig3kJwhKwGWspSu8z2nRwNXFWc6wJowjM',\n    serumEventQueue: 'FERWWtsZoSLcHVpfDnEBnUqHv4757kTUUZhLKBCbNfpS',\n    serumCoinVaultAccount: 'DSf7hGudcxhhegMpZA1UtSiW4RqKgyEex9mqQECWwRgZ',\n    serumPcVaultAccount: 'BD8QnhY2T96h6KwyJoCT9abMcPBkiaFuBNK9h6FUNX2M',\n    serumVaultSigner: 'EPzuCsSzHwhYWn2j69HQPKWuWz6wuv4ANZiVigLGMBoD',\n    official: true,\n  },\n  {\n    name: 'SUSHI-USDT',\n    coin: { ...TOKENS.SUSHI },\n    pc: { ...TOKENS.USDT },\n    lp: { ...LP_TOKENS['SUSHI-USDT-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: 'DWvhPYVogsEKEsehHApUtjhP1UFtApkAPFJqFh2HPmWz',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'ARZWhFKLtqubNWdotvqeiTTpmBw4XfrySNtY4485Zmq',\n    ammTargetOrders: 'J8f8p2x3wPTbpaqJydxTY5CvxtiB8HrMdW1DouaEVvRx',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'C77d7jRkxu3WyzL7K2UZZPdWXPzsFrmzLG4uHrsZhGTz',\n    poolPcTokenAccount: 'BtweN6cYHBntMJiRY2gGB2u4oZFsbapjLz7QJeV3KWF1',\n    poolWithdrawQueue: '6WsofMBNdHWacgButviYgn8CCTGyjW19H13vYntkzBzp',\n    poolTempLpTokenAccount: 'CgaVy8TjkUdxFhi4h3RdszmPtf6MPUyfquqAWUwAnim7',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '6DgQRTpJTnAYBSShngAVZZDq7j9ogRN1GfSQ3cq9tubW',\n    serumBids: '7U3FPNGvcDkmfnD4u5jKVd2AKwc66RFBZ8GnyjzeNfML',\n    serumAsks: '3Zx74FxHwttDuYxeqHzMijitrf25FhSzeoWBT9VeCrVj',\n    serumEventQueue: '9PqaWBQ6gSZDZsztbWTnXp6LfrS2TUfVfPTSnf8tbgkE',\n    serumCoinVaultAccount: '5LmHe3x8VwGzWZ6rooARZJNMo6AaN1P73478AuhBUjUr',\n    serumPcVaultAccount: 'iLCNUheHbq3bE1868XwWXs8enoTvjFnwpnmLFmBQGi3',\n    serumVaultSigner: '9GN4139oezNfddWhcAc3c8Ke5aU4cwzcxL8cLkqE37Yy',\n    official: true,\n  },\n  {\n    name: 'TOMO-USDT',\n    coin: { ...TOKENS.TOMO },\n    pc: { ...TOKENS.USDT },\n    lp: { ...LP_TOKENS['TOMO-USDT-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: 'GjrXcSvwzGrz1RwKYGVWdbZyXzyotgichSHB95moDmf8',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '6As7AcwxnvawiY4mKnVTYqjTSRe9Uu2yW5hhJB97Ur6y',\n    ammTargetOrders: 'BPU6CpQ9RVrftpofrXD3Gui5iNXpbiNiCm9ecQUahgH6',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '8Ev8a9a8ZQi2xHYa7fwkYqzrmMrwbnUf6D9z762zAWcF',\n    poolPcTokenAccount: 'DriE8fPjPcTf7jzzyMqnQYqBPAVQPNS6bjZ4EABEJPUd',\n    poolWithdrawQueue: 'CR4AmK8geX2e1VLdFKgC2raxMwB4JsVUKXd3mBGkv4YW',\n    poolTempLpTokenAccount: 'GLXgb5oGNHQAVr2t68sET3NGPBtDitE5cQaMG3zgc7D8',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'GnKPri4thaGipzTbp8hhSGSrHgG4F8MFiZVrbRn16iG2',\n    serumBids: '7C1XnffUgQVnfRTUPBPxQQT1QKsHwnQ7ogAWmmJqbW9L',\n    serumAsks: 'Hbd8HWXcZDPUUHYXJLH4vn9t1SfQZ83fqf4jQN65QpYL',\n    serumEventQueue: '5AB3QbR7Ck5qsn21fM5zBzxVUnyougXroWHeR33bscwH',\n    serumCoinVaultAccount: 'P6qAvA6s7DHzzH4i74CUFAzx5bM4Yj3xk5TKmF7eWdb',\n    serumPcVaultAccount: '8zFodcf4pKcRBq7Zhdg4tQeB76op7kSjPC2haPjPkDEm',\n    serumVaultSigner: 'ECTnLdZEaxUiCwyjKcts3CoMfT4kj3CNfVCd9B18hRim',\n    official: true,\n  },\n  {\n    name: 'LINK-USDT',\n    coin: { ...TOKENS.LINK },\n    pc: { ...TOKENS.USDT },\n    lp: { ...LP_TOKENS['LINK-USDT-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: 'E9EvurfzdSQaqCFBUaD4MgV93htuRQ93sghm922Pik88',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'CQ9roBWWPV5efTeZHoqgzJJvTSeVNMca6rteaenNwqF6',\n    ammTargetOrders: 'DVXgN8m2f8Ggs8zddLZyQdsh49jeUGnLq66s4Lhfd1uj',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'BKNf6HxSz9tCmeZts4ABHpYuXwP2wfKf4uRycwdTm3Jh',\n    poolPcTokenAccount: '5Uzq3c6rnedxMF7t7s7PJVQkxxZE7YXGFPJUToyhdebY',\n    poolWithdrawQueue: 'Hj5vcVZCm6JXtkmCa1MPjteoxzkWQCmHQutXxofj2sy6',\n    poolTempLpTokenAccount: '7WhsN9LGSeGxhZPT4E4rczauDvhmfquAKHQUESAXYS3k',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '3yEZ9ZpXSQapmKjLAGKZEzUNA1rcupJtsDp5mPBWmGZR',\n    serumBids: '9fkA2oJQ7BKP5n2WxdLkY7mDA1mzBrGZ9osqVhvdBkH7',\n    serumAsks: 'G8c3xQURJk1oukLqJd3W4SJykmRq4wq3GrSWJwWipECH',\n    serumEventQueue: '4MDEwZYKXuvEdQ58yMsE2zwXLG973aYp4EFvoaUSDMP2',\n    serumCoinVaultAccount: 'EmS34LncbTGs4yU4GM9bESRYMCFL3JBW6mnAeKB4UtEb',\n    serumPcVaultAccount: 'AseZZ8ZRqyvkZMMGAAG8dAqM9XFf2xGX2tWWbko7a4hC',\n    serumVaultSigner: 'FezSC2d6sXEcJ9ah8nYxHC18nh4FZzc4u7ZTtRSrk6Nd',\n    official: true,\n  },\n  {\n    name: 'ETH-USDT',\n    coin: { ...TOKENS.ETH },\n    pc: { ...TOKENS.USDT },\n    lp: { ...LP_TOKENS['ETH-USDT-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: 'He3iAEV5rYjv6Xf7PxKro19eVrC3QAcdic5CF2D2obPt',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '8x4uasC632WSrk3wgwoCWHy7MK7Xo2WKAe9vV93tj5se',\n    ammTargetOrders: 'G1eji3rrfRFfvHUbPEEbvnjmJ4eEyXeiJBVbMTUPfKL1',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'DZZwxvJakqbraXTbjRW3QoGbW5GK4R5nmyrrGrFMKWgh',\n    poolPcTokenAccount: 'HoGPb5Rp44TyR1EpM5pjQQyFUdgteeuzuMHtimGkAVHo',\n    poolWithdrawQueue: 'EispXkJcfh2PZA2fSXWsAanEGq1GHXzRRtu1DuqADQsL',\n    poolTempLpTokenAccount: '9SrcJk8TB4JvutZcA4tMvvkdnxCXda8Gtepre7jcCaQr',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '7dLVkUfBVfCGkFhSXDCq1ukM9usathSgS716t643iFGF',\n    serumBids: 'J8a3dcUkMwrE5kxN86gsL1Mwrg63RnGdvWsPbgdFqC6X',\n    serumAsks: 'F6oqP13HNZho3bhwuxTmic4w5iNgTdn89HdihMUNR24i',\n    serumEventQueue: 'CRjXyfAxboMfCAmsvBw7pdvkfBY7XyGxB7CBTuDkm67v',\n    serumCoinVaultAccount: '2CZ9JbDYPux5obFXb9sefwKyG6cyteNBSzbstYQ3iZxE',\n    serumPcVaultAccount: 'D2f4NG1NC1yeBM2SgRe5YUF91w3M4naumGQMWjGtxiiE',\n    serumVaultSigner: 'CVVGPFejAj3A75qPy2116iJFma7zGEuL8DgnxhwUaFBF',\n    official: true,\n  },\n  {\n    name: 'YFI-SRM',\n    coin: { ...TOKENS.YFI },\n    pc: { ...TOKENS.SRM },\n    lp: { ...LP_TOKENS['YFI-SRM-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: 'GDVhJmDTdSExwHeMT5RvUBUNKLwwXNKhH8ndm1tpTv6B',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '5k2VpDkhbvypWvg9erQTZu4KsKjVLe1VAo3K71THrNM8',\n    ammTargetOrders: '4dhnWeEq5aeqDFkEa5CKwS2TYrUmTZs7drFBAS656f6e',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '8FufHk1xV2j9RpVztnt9vuw9KJ89rpR7FMT1HTfsqyPH',\n    poolPcTokenAccount: 'FTuzfUyp6fhLMQ5kUdAkBWd9BjY114DfjkrVocAFKwkQ',\n    poolWithdrawQueue: 'A266ybcveVZYraGgEKWb9JqVWVp9Tsxa9hTudzvTQJgY',\n    poolTempLpTokenAccount: 'BXHfb8E4KNVnAVvz1eyVS12QqpvBUimtCnnNiBuoMrRa',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '6xC1ia74NbGZdBkySTw93wdxN4Sh2VfULtXh1utPaJDJ',\n    serumBids: 'EmfyNgr2t1mz6QJoGfs7ytLPpnT3A4kmZj2huGBFHtpr',\n    serumAsks: 'HQhD6ZoNfCjvUTfsE8KS46PLC8rpeyBYy1tY4FPgEbpQ',\n    serumEventQueue: '4QGAwMgfi5PrMUoHvoSbGQV168kuRMURBK4pwGfSV7nC',\n    serumCoinVaultAccount: 'GzZCBp3Z3fYHZW9b4WusfQhp7p4rZXeSNahCpn8HBD9',\n    serumPcVaultAccount: 'ANK9Lpi4pUe9SxPvcKvd82jkG6AoKvvgo5kN8BCXukfA',\n    serumVaultSigner: '9VAdxQgKNLkHgtQ4fkDetwwTKZG8xVaKeUFQwBVG7c7a',\n    official: true,\n  },\n  {\n    name: 'FTT-SRM',\n    coin: { ...TOKENS.FTT },\n    pc: { ...TOKENS.SRM },\n    lp: { ...LP_TOKENS['FTT-SRM-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: '21r2zeCacmm5YvbGoPZh9ZoGREuodhcbQHaP5tZmzY14',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'CimwwQH1h2MKbFbodHHByMq8MreFuJznMGVXxYKMpyiB',\n    ammTargetOrders: 'Fewh6hVTfeduAnbqwNuUx2Cu7uTyJTALP76hjpWCvRoV',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'Atc9Prscs9RLmDEpsCQzFgCqzkscAtTck5ZSZGV9s7hE',\n    poolPcTokenAccount: '31ZJVJMap4WpPbzaScPwg5MGRUDjatP2kXVsSgf12yVZ',\n    poolWithdrawQueue: 'yAZD46BC1Bti2X5FEjveobueuyevi7jFV5ew6DH8Thz',\n    poolTempLpTokenAccount: '7Ro1o6Vbh3Ech2zeozNDicRP1gZfHAWcRnxvrzdnLfYi',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'CDvQqnMrt9rmjAxGGE6GTPUdzLpEhgNuNZ1tWAvPsF3W',\n    serumBids: '9NfJWy5QNqRDGmNARphS9kJyYtR6nkkWcFyJRLbgECtd',\n    serumAsks: '9VEVBJZHVv6N2MzAzNLiCwN2MAdt5GDScCtpE4zkzDFW',\n    serumEventQueue: 'CbnLQT9Jwo3RHpWBnsPisAybSN4CBuwj4fcF1S9qJchV',\n    serumCoinVaultAccount: '8qTUSDRxJ65sGKEUu746xJdCquoP38AqKsQo6ZruSSBk',\n    serumPcVaultAccount: 'ALe3hiZR35cCjcrzbJi1vKEhNftdVQjwkt4S8rbPZogq',\n    serumVaultSigner: 'CAAeuJAgnP368num8bCv6VMWCqMZ4pTANCcGTAMAJtm2',\n    official: true,\n  },\n  {\n    name: 'BTC-SRM',\n    coin: { ...TOKENS.BTC },\n    pc: { ...TOKENS.SRM },\n    lp: { ...LP_TOKENS['BTC-SRM-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: 'DvxLb4NnQUYq1gErk35HVt9g8kxjNbviJfiZX1wqraMv',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '3CGxjymeKv5wvpVg9unUgbrGUESmeqfJUJkPjVeRuMvT',\n    ammTargetOrders: 'C8YiDYrk4rfC6sgK93zM3YpGj7SDpGuRbos7DHStSssT',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '5jV7XQ1JnfUg7RvEShyAdV7Gzn1xS54j163x8ZBSzxuh',\n    poolPcTokenAccount: 'HSKY5r6iqCpC4nWzCGP2oWMQdGEQsx69eBm33PrmZqhg',\n    poolWithdrawQueue: '5faTQUz7gmasinkinA7BkC6HsG8hUrD9iukaohF2fuHZ',\n    poolTempLpTokenAccount: '9QutovnPtwN9pPxsTdaEWBSCT7iTKc3hwMfF4QJHDXRz',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'HfsedaWauvDaLPm6rwgMc6D5QRmhr8siqGtS6tf2wthU',\n    serumBids: 'GMM36fgidwYvXCAxQhpT1XkGoZ46g1wMc44hY8ds3P8u',\n    serumAsks: 'BFDQ4WGcEftURk6nrwtQ1GzYdPYj8fx3iBjeJVt6S3jQ',\n    serumEventQueue: '94ER3KZeDrYSG8TytGJ56rZK9zM8oz1H8dJ2LP1gHn2s',\n    serumCoinVaultAccount: '3ABvHYBeWrpgP82jvHh5TVwid1AjDj9rei7zfY8xh2wz',\n    serumPcVaultAccount: 'CSpdPdzzbaNWgwhPRTZ4TNoYS6Vco2w1s7jvqUsYQBzf',\n    serumVaultSigner: '9o8LaPeTMJBoYyoUVNm6ju6c5rwfphhYReQsp1vTTyRg',\n    official: true,\n  },\n  {\n    name: 'SUSHI-SRM',\n    coin: { ...TOKENS.SUSHI },\n    pc: { ...TOKENS.SRM },\n    lp: { ...LP_TOKENS['SUSHI-SRM-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: 'BLVjPTgzyfiKSgDujTNKKNzW2GXx7HhdMxgr2LQ2g83s',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'Efpi6e4ckqtfaED9gRmadN3RtiTXDtGPrp1szsh7sj7C',\n    ammTargetOrders: 'BZUFGpRWEsYzpVfLrFpdE7E9fzGhrySQE1TrsX92qWAC',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'BjWKHZxVMQykmGGmkhA1m9QQycJTeQFs51kyfP1zQvzv',\n    poolPcTokenAccount: 'EnWaAD7WAyznuRjg9PqRr2vVaXqQpTje2fBWyFFEvr37',\n    poolWithdrawQueue: 'GbEc9D11VhEHCDsqcSZ5vPVfnzV7BCS6eTquoVvhSaNz',\n    poolTempLpTokenAccount: 'AQ4YUkqPSbP8JpnCWEAkYNUWm6AjUSnPucKhVN8ypuiB',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'FGYAizUhNEC9GBmj3UyxdiRWmGjR3TfzMq2dznwYnjtH',\n    serumBids: 'J9weS4eF3DcSMLttazndEwVtjsqfRf6vBg1FNhdYrKiW',\n    serumAsks: '4TCPXw9UBcPfSVtaArzydHvgAXfDbq28iZVjHidbM9rp',\n    serumEventQueue: '2eJU3EygyV4SWGAH1g5F57CxtaTj4nL36apaRtnEZ9zH',\n    serumCoinVaultAccount: 'BSoAoNFKzK65TjcUpY5JZHBvZVMiYnkdo9upy3mLSTpq',\n    serumPcVaultAccount: '8U9azb65o1dJuMs7je987i7hKxJfPZnbNRNeH5beJfo7',\n    serumVaultSigner: 'HZtDGZsz2fdXF75H8tyB8skp5a4rvoawgxwXqHTGEdvU',\n    official: true,\n  },\n  {\n    name: 'TOMO-SRM',\n    coin: { ...TOKENS.TOMO },\n    pc: { ...TOKENS.SRM },\n    lp: { ...LP_TOKENS['TOMO-SRM-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: 'DkMAuUCQHC6BNgVnjtM5ZTKm1T8MsriQ6bL3Umi6NBtG',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '34eRiATmb9Ktv1QTDzzckyaFhj4KpC2y94TJXXd34erL',\n    ammTargetOrders: 'CK2vFsmS2CEZ2Hi6Vf9px8p5DSpoyXST9rkFHwbbHirU',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '8BjTHZccnRNZKZpAxsdXx5BEQ4Kpxd9pQLNgeMqMiTZL',\n    poolPcTokenAccount: 'DxcJXkGo8BUmsky51LuKi4Vs1zW48fHrCXEY6BKuY3TY',\n    poolWithdrawQueue: 'AoP3EXWypUheq9ZURDBpf8Jd1ijRuhUCQg1uiM5zFpB5',\n    poolTempLpTokenAccount: '9go7YtJ6QdG3mWgVhwRcQAfmwPruJk5MmsjyTn2HJisK',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '7jBrpiq3w2ywzzb54K9SoosZKy7nhuSQK9XrsgSMogFH',\n    serumBids: 'ECdZLJGwcN6fXY9BjiSVNrWssKdWejW9uv8Zs6GkkxBG',\n    serumAsks: 'J5NN79kpFzGdxj8MGvis3NsGYcrvcdYHNXLtGGn9au5E',\n    serumEventQueue: '7FrdprBxpDyM7P1AkeMtEJ75Q6UK6ZE92zgqGg5F4Gxb',\n    serumCoinVaultAccount: '8W65Bwb83MYKHf82phS9xPUDsR6RpZbAXnSELxsBb3HH',\n    serumPcVaultAccount: '5rjDHBsjFv3Z3Dxr5RMj98vj6LA5DNEwZGDM8wyUF1Hy',\n    serumVaultSigner: 'EJfMPPTvTKtgj7PUaM17bp2Gbye9CdKjZ5yqonPyY4rB',\n    official: true,\n  },\n  {\n    name: 'LINK-SRM',\n    coin: { ...TOKENS.LINK },\n    pc: { ...TOKENS.SRM },\n    lp: { ...LP_TOKENS['LINK-SRM-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: '796pvggjoDCPUtUSVFSCLqPRyes5YPvRiu4zFWX582wf',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '3bZB7mZ5hRNZfrJx6BL5C4GhP4nT14rEAGVPXL34hrZg',\n    ammTargetOrders: 'Ha4yLJU1UrZi8MqCMu2pLK3xXREG1GW1bjjqTsjQnC3c',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '5eTUmVN3kXqBeKHUA2kWU19jB7kFN3wpejWvWYcw6dBa',\n    poolPcTokenAccount: '4BsmBxNQtuKgBTNjci8tWd2NqPxXBs2JY38X26epSHYy',\n    poolWithdrawQueue: '2jn4FQ2CtYwXDgCcLbNrGUzKFeB5PpPbnMr2x2z2wz3V',\n    poolTempLpTokenAccount: '7SxKHHATjgEgfxnLrtKaSU77s2ABqD8BoEr6W6dFMS3a',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'FafaYTnhDbLAFsr5qkD2ZwapRxaPrEn99z59UG4zqRmZ',\n    serumBids: 'HyKmFiuoWZo7STLjvJJ66YR4V1wauAorCPUaxnnB6umk',\n    serumAsks: '8qjKdvjmBPZWjxP3nWjwFCcsrAspCN5EyTD3WfgKbFj4',\n    serumEventQueue: 'FWZB7PJLwg7WdgoVBRrkvz2A4S7ZctKnoGj1yCSxqs9G',\n    serumCoinVaultAccount: '8J7iJ4uidHscVnNGsEgiEPJsUqrfteN7ifMscB9h4dAq',\n    serumPcVaultAccount: 'Bw7SrqDqvAXHi2yphAniH3uBw9N7J6vVi7jMH9B2KYWM',\n    serumVaultSigner: 'CvP4Jk6AYBV6Kch6w6FjwuMqHAugQqVrqCNp1eZmGihB',\n    official: true,\n  },\n  {\n    name: 'ETH-SRM',\n    coin: { ...TOKENS.ETH },\n    pc: { ...TOKENS.SRM },\n    lp: { ...LP_TOKENS['ETH-SRM-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: '3XwxHcbyqcd1xkdczaPv3TNCZsevELD4Zux3pu4sF2D8',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'FBfaqV1RRacEi27E3dm8yLcxpbWYx4BzMXG4zMNx7ZdS',\n    ammTargetOrders: 'B1gQ6FHLxmBzznDKn8Rj1ZokcJtdSWjkCoXdQLRhz8NS',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'CsFFjzC1hmpqimExTj8g4kregUxGnGrEWX9Jhne172uU',\n    poolPcTokenAccount: 'ACg55oVWt1a4ZVxnFVCRDEMz1JAeGY13snXufdQAp4pX',\n    poolWithdrawQueue: 'C6MRGfZ13tstxjcWuLqUseUikidsAjgk7zBEYqM6cFb4',\n    poolTempLpTokenAccount: 'EVRzNkPU9UAzBf8XhJYD84U7petDZnSMVaaa9mtBQaM6',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '3Dpu2kXk87mF9Ls9caWCHqyBiv9gK3PwQkSvnrHZDrmi',\n    serumBids: 'HBVsrbKLEf1aaUy9oKFkQZVDtgTf54T9H8FQdcGbF7EH',\n    serumAsks: '5T3zDaT1XvfEb9jKcgpFyQRze9qWKNTE1iSE5aboxYZy',\n    serumEventQueue: '3w11TRux1gX7nqaGUMGpPH9ocDBPudeLTw6k1uhsLo2k',\n    serumCoinVaultAccount: '58jqhCZ11r6ZvATqdGfDXPk7LmiR9HS3jQt7kuoBx5CH',\n    serumPcVaultAccount: '9NLpT5aZtbbauvEVVFsHqigv2ekTEPK1kojoMMCw6Hhx',\n    serumVaultSigner: 'EC5JsbaQVp8tM59TqkQBk4Yv7bzLQq3TrzpepjGr9Ecg',\n    official: true,\n  },\n  {\n    name: 'SRM-SOL',\n    coin: { ...TOKENS.SRM },\n    pc: { ...NATIVE_SOL },\n    lp: { ...LP_TOKENS['SRM-SOL-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: 'EvWJC2mnmu9C9aQrsJLXw8FhUcwBzFEUQsP1E5Y6a5N7',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '9ot4bg8aT2FRKfiRrM2fSPHEr7M1ihBqm1iT4771McqR',\n    ammTargetOrders: 'AfzGtG3XnMixxJTx2rwoWLXKVaWoFMhsMeYo929BrUBY',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'BCNYwsnz3yXvi4mY5e9w2RmZvwUW3pefzYQ4tsoNdDhp',\n    poolPcTokenAccount: '7BXPSUXeBVqJGyxW3yvkNxnJjYHuC8mnhyFCDp2abAs6',\n    poolWithdrawQueue: 'HYo9FfBpm8NCpR8qYMGYFZNqzKkXDRFACLxu8PXCCDc4',\n    poolTempLpTokenAccount: 'AskrcNfMDKT5c65AYeuEBW6mfMXfT3SG4nDCDRAyEnad',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'jyei9Fpj2GtHLDDGgcuhDacxYLLiSyxU4TY7KxB2xai',\n    serumBids: '4ZTJfhgKPizbkFXNvTRNLEncqg85yJ6pyT7NVHBAgvGw',\n    serumAsks: '7hLgwZhHD1MRNyiF1qfAjfkMzwvP3VxQMLLTJmKSp4Y3',\n    serumEventQueue: 'nyZdeD16L5GxJq7Pso8R6KFfLA8R9v7c5A2qNaGWR44',\n    serumCoinVaultAccount: 'EhAJTsW745jiWjViB7Q4xXcgKf6tMF7RcMX9cbTuXVBk',\n    serumPcVaultAccount: 'HFSNnAxfhDt4DnmY9yVs2HNFnEMaDJ7RxMVNB9Y5Hgjr',\n    serumVaultSigner: '6vBhv2L33KVJvAQeiaW3JEZLrJU7TtGaqcwPdrhytYWG',\n    official: true,\n  },\n  {\n    name: 'STEP-USDC',\n    coin: { ...TOKENS.STEP },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['STEP-USDC-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: '4Sx1NLrQiK4b9FdLKe2DhQ9FHvRzJhzKN3LoD6BrEPnf',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'EXgME2sUuzBxEc2wuyoSZ8FZNZMC3ChhZgFZRAW3nCQG',\n    ammTargetOrders: '78bwAGKJjaiPQqmwKmbj4fhrRTLAdzwqNwpFdpTzrhk1',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '8Gf8Cc6yrxtfUZqM2vf2kg5uR9bGPfCHfzdYRVBAJSJj',\n    poolPcTokenAccount: 'ApLc86fHjVbGbU9QFzNPNuWM5VYckZM92q6sgJN1SGYn',\n    poolWithdrawQueue: '5bzBcB7cnJYGYvGPFxKcZETn6sGAyBbXgFhUbefbagYh',\n    poolTempLpTokenAccount: 'CpfWKDYNYfvgk42tqR8HEHUWohGSJjASXfRBm3yaKJre',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '97qCB4cAVSTthvJu3eNoEx6AY6DLuRDtCoPm5Tdyg77S',\n    serumBids: '5Xdpf7CMGFDkJj1smcVQAAZG6GY9gqAns18QLKbPZKsw',\n    serumAsks: '6Tqwg8nrKJrcqsr4zR9wJuPv3iXsHAMN65FxwJ3RMH8S',\n    serumEventQueue: '5frw4m8pEZHorTKVzmMzvf8xLUrj65vN7wA57KzaZFK3',\n    serumCoinVaultAccount: 'CVNye3Xr9Jv26c8TVqZZHq4F43BhoWWfmrzyp1M9YA67',\n    serumPcVaultAccount: 'AnGbReAhCDFkR83nB8mXTDX5dQJFB8Pwicu6pGMfCLjt',\n    serumVaultSigner: 'FbwU5U1Doj2PSKRJi7pnCny4dFPPJURwALkFhHwdHaMW',\n    official: true,\n  },\n  {\n    name: 'MEDIA-USDC',\n    coin: { ...TOKENS.MEDIA },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['MEDIA-USDC-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: '94CQopiGxxUXf2avyMZhAFaBdNatd62ttYGoTVQBRGdi',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'EdS5vqjihxRbRujPkqqzHYwBqcTP9QPbrBc9CDtnBDwo',\n    ammTargetOrders: '6Rfew8qvNp97PVN14C9Wg8ybqRdF9HUEUhuqqZBWcAUW',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '7zfTWDFmMi3Tzbbd3FZ2vZDdBm1w7whiZq1DrCxAHwMj',\n    poolPcTokenAccount: 'FWUnfg1hHuanU8LxJv31TAfEWSvuWWffeMmHpcZ9BYVr',\n    poolWithdrawQueue: 'F7MUnGrShtQqSvi9DoWyBNRo7FUpRiYPsS9aw77auhiS',\n    poolTempLpTokenAccount: '7oX2VcPYwEV6EUUyMUoTKVVxAPAvGQZcGiGzotX43wNM',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'FfiqqvJcVL7oCCu8WQUMHLUC2dnHQPAPjTdSzsERFWjb',\n    serumBids: 'GmqbTDL5QSAhWL7UsE8MriTHSnodWM1HyGR8Cn8GzZV5',\n    serumAsks: 'CrTBp7ThkRRYJBL4tprke2VbKYj2wSxJp3Q1LDoHcQwP',\n    serumEventQueue: 'HomZxFZNGmH2XedBavMsrXgLnWFpMLT95QV8nCYtKszd',\n    serumCoinVaultAccount: 'D8ToFvpVWmNnfJzjHuumRJ4eoJc39hsWWcLtFZQpzQTt',\n    serumPcVaultAccount: '6RSpnBYaegSKisXaJxeP36mkdVPe9SP3p2kDERz8Ahhi',\n    serumVaultSigner: 'Cz2m3hW2Vcb8oEFz12uoWcdq8mKb9D1N7RTyXpigoFXU',\n    official: true,\n  },\n  {\n    name: 'ROPE-USDC',\n    coin: { ...TOKENS.ROPE },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['ROPE-USDC-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: 'BuS4ScFcZjEBixF1ceCTiXs4rqt4WDfXLoth7VcM2Eoj',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'ASkE1yKPBei2aUxKHrLRptB2gpC3a6oTSxafMikoHYTG',\n    ammTargetOrders: '5isDwR41fBJocfmcrcfwRtTnmSf7CdssdpsmBy2N2Eym',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '3mS8mb1vDrD45v4zoxbSdrvbyVM1pBLM31cYLT2RfS2U',\n    poolPcTokenAccount: 'BWfzmvvXhQ5V8ZWDMC4u82sEWgc6HyRLnq6nauwrtz5x',\n    poolWithdrawQueue: '9T1cwwE5zZr3D2Rim8e5xnJoPJ9yKbTXvaRoxeVoqffo',\n    poolTempLpTokenAccount: 'FTFx4Vg6hgKLZMLBUvazvPbM7AzDe5GpfeBZexe2S6WJ',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '4Sg1g8U2ZuGnGYxAhc6MmX9MX7yZbrrraPkCQ9MdCPtF',\n    serumBids: 'BDYAnAUSoBTtX7c8TKHeqmSy7U91V2pDg8ojvLs2fnCb',\n    serumAsks: 'Bdm3R8X7Vt1FpTruE9SQVESSd3BjAyFhcobPwAoK2LSw',\n    serumEventQueue: 'HVzqLTfcZKVC2PanNpyt8jVRJfDW8M5LgDs5NVVDa4G3',\n    serumCoinVaultAccount: 'F8PdvS5QFhSqgVdUFo6ivXdXC4nDEiKGc4XU97ZhCKgH',\n    serumPcVaultAccount: '61zxdnLpgnFgdk9Jom5f6d6cZ6cTbwnC6QqmJag1N9jB',\n    serumVaultSigner: 'rCFXUwdmQvRK9jtnCip3SdDm1cLn8nB6HHgEHngzfjQ',\n    official: true,\n  },\n  {\n    name: 'MER-USDC',\n    coin: { ...TOKENS.MER },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['MER-USDC-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: 'BkfGDk676QFtTiGxn7TtEpHayJZRr6LgNk9uTV2MH4bR',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'FNwXaqyYNKNwJ8Qc39VGzuGnPcNTCVKExrgUKTLCcSzU',\n    ammTargetOrders: 'DKgXbNmsm1uCJ2eyh6xcnTe1G6YUav8RgzaxrbkG4xxe',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '6XZ1hoJQZARtyA17mXkfnKSHWK2RvocC3UDNsY7f4Lf6',\n    poolPcTokenAccount: 'F4opwQUoVhVRaf3CpMuCPpWNcB9k3AXvMMsfQh52pa66',\n    poolWithdrawQueue: '8mqpqWGL7W2xh8B1s6XDZJsmPuo5zRedcM5sF55hhEKo',\n    poolTempLpTokenAccount: '9ex6kCZsLR4ZbMCN4TcCuFzkw8YhiC9sdsJPavsrqCws',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'G4LcexdCzzJUKZfqyVDQFzpkjhB1JoCNL8Kooxi9nJz5',\n    serumBids: 'DVjhW8nLFWrpRwzaEi1fgJHJ5heMKddssrqE3AsGMCHp',\n    serumAsks: 'CY2gjuWxUFGcgeCy3UiureS3kmjgDSRF59AQH6TENtfC',\n    serumEventQueue: '8w4n3fcajhgN8TF74j42ehWvbVJnck5cewpjwhRQpyyc',\n    serumCoinVaultAccount: '4ctYuY4ZvCVRvF22QDw8LzUis9yrnupoLQNXxmZy1BGm',\n    serumPcVaultAccount: 'DovDds7NEzFn493DJ2yKBRgqsYgDXg6z38pUGXe1AAWQ',\n    serumVaultSigner: 'BUDJ4F1ZknbZiwHb6xHEsH6o1LuW394DE8wKT8CoAYNF',\n    official: true,\n  },\n  {\n    name: 'COPE-USDC',\n    coin: { ...TOKENS.COPE },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['COPE-USDC-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: 'DiWxV1SPXPNJRCt5Ao1mJRAxjw97hJVyj8qGzZwFbAFb',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'jg8ayFZLH2cEUJULUirWy7wNggN1eyRnTMt6EjbJUun',\n    ammTargetOrders: '8pE4fzFzRT6aje7B3hYHXrZakeEqNF2kFmJtxkrxUK9b',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'FhjBg8vpVgsiW9oCUxujqoWWSPSRvnWNXucEF1G1F39Z',\n    poolPcTokenAccount: 'Dv95skm7AUr33x1p2Bu5EgvE3usB1TxgZoxjBe2rpfm6',\n    poolWithdrawQueue: '4An6jy1JocXGUjayXqVTx1jvs79o8LgsRk3VvmRgXxaq',\n    poolTempLpTokenAccount: '57hiWKd47VHVD7y8BenqnakSdgQNBvyUrkSpf9BDP6UQ',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '6fc7v3PmjZG9Lk2XTot6BywGyYLkBQuzuFKd4FpCsPxk',\n    serumBids: 'FLjCjU5wLUsqF6FeYJaH5JtTTFSTZzTCingxN1uyr9zn',\n    serumAsks: '7TcstD7AdWqjuFoRVK24zFv66v1qyMYDNDT1V5RNWKRz',\n    serumEventQueue: '2dQ1Spgc7rGSuE1t3Fb9RL7zvGc7F7pH9XwJ46u3QiJr',\n    serumCoinVaultAccount: '2ShBow4Bof4dkLjx8VTRjLXXvUydiBNF7bHzDaxPjpKq',\n    serumPcVaultAccount: 'EFdqJhawpCReiK2DcrbbUUWWc6cd8mqgZm5MSbQ3TR33',\n    serumVaultSigner: 'A6q5h5Wx9iqeoVsvYWA7xofUcKx6XUPPab8BTVrW91Bs',\n    official: true,\n  },\n  {\n    name: 'ALEPH-USDC',\n    coin: { ...TOKENS.ALEPH },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['ALEPH-USDC-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: 'GDHXjn9wF2zxW35DBkCegWQdoTfFBC9LXt7D5ovJxQ5B',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'AtUeUK7MZayoDktjrRSJAFsyPiPwPsbAeTsunM5pSnnK',\n    ammTargetOrders: 'FMYSGYEL1CPYz8cpgAor5jV2HqeEQRDLMEggoz6wAiFV',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'BT3QMKHrha4fhqpisnYKaPDsv42XeHU2Aovhdu5Bazru',\n    poolPcTokenAccount: '9L4tXPyuwuLhmtmX4yaRTK6TB7tYFNHupeENoCdPceq',\n    poolWithdrawQueue: '4nRbmEUp7DQroG71jXv6cJjrhnh91ePdPhzmBSjinwB8',\n    poolTempLpTokenAccount: '9JdpGvmo6aPZYf4hkiZNUjceXgd2RtR1fJgvjuoAuhsM',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'GcoKtAmTy5QyuijXSmJKBtFdt99e6Buza18Js7j9AJ6e',\n    serumBids: 'HmpcmzzajDvhFSXb4pmJo5mb23zW8Cj9FEeB3hVT78jV',\n    serumAsks: '8sfGm6jsFTAcb4oLuqMKr1xNEBd5CXuNPAKZEdbeezA',\n    serumEventQueue: '99Cd6D9QnFfTdKpcwtoF3zAZdQAuZQi5NsPMERresj1r',\n    serumCoinVaultAccount: 'EBRqW7DaUGFBHRbfgRagpSf9jTSS3yp9MAi3RvabdBGz',\n    serumPcVaultAccount: '9QTMfdkgPWqLriB9J7FcYvroUEqfw6zW2VCi1dAabdUt',\n    serumVaultSigner: 'HKt6xFufxTBBs719WQPbro9t1DfDxffurxFhTPntMgoe',\n    official: true,\n  },\n  {\n    name: 'TULIP-USDC',\n    coin: { ...TOKENS.TULIP },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['TULIP-USDC-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: '96hPvuJ3SRT82m7BAc7G1AUVPVcoj8DABAa5gT7wjgzX',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '6GtSWZfdUFtT47RPk2oSxoB6RbNkp9aM6yP77jB4XmZB',\n    ammTargetOrders: '9mB928abAihkhqM6AKLMW4cZkHBXFn2TmcxEKhTqs6Yr',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 's9Xp7GV1jGvixdSfY6wPgivsTd3c4TzjW1eJGyojwV4',\n    poolPcTokenAccount: 'wcyW58QFNfppgm4Wi7cKhSftdVNfpLdn67YvvCNMWrt',\n    poolWithdrawQueue: '59NA3khShyZk4dhDjFN564nScNdEi3UR4wrCnLN6rRgX',\n    poolTempLpTokenAccount: '71oLQgsHknJVHGJDCaBVUnb6udGepK7kwkHXGy47u2i4',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '8GufnKq7YnXKhnB3WNhgy5PzU9uvHbaaRrZWQK6ixPxW',\n    serumBids: '69W6zLetZ7FgXPXgHRp4i4wNd422tXeZzDuBzdkjgoBW',\n    serumAsks: '42RcphsKYsVWDhaqJRETmx74RHXtHJDjZLFeeDrEL2F9',\n    serumEventQueue: 'ExbLY71YpFaAGKuHjJKXSsWLA8hf1hGLoUYHNtzvbpGJ',\n    serumCoinVaultAccount: '6qH3FNTSGKw34SEEj7GXbQ6kMQXHwuyGsAAeV5hLPhJc',\n    serumPcVaultAccount: '6AdJbeH76BBSJ34DeQ6LLdauF6W8fZRrMKEfLt3YcMcT',\n    serumVaultSigner: '5uJEd4wfVH84HyFEBf5chfJMTTPHBddXi1S7GmBE6x14',\n    official: true,\n  },\n  {\n    name: 'WOO-USDC',\n    coin: { ...TOKENS.WOO },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['WOO-USDC-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: 'DSkXJYPZqJ3yHQECyVyh3xiE3HBrt7ARmepwNDA9rREn',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '6WHHLn8ia2eHZnPFPDwBKaW2nt7vTRNsvrbgzS55gVwi',\n    ammTargetOrders: 'HuSyM774u2zhjbG8rQYCrALBHhK7yVWgUP36rNEtfTs2',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'HeMxCh5SozqLth4QPpU1cbEw29ueqFUKSYP6369GX1HV',\n    poolPcTokenAccount: 'J3jwx9wsRAq1sBu5tSsKpA4ixQVzLiLyRKdxkjMcRenv',\n    poolWithdrawQueue: 'FRSDrhT8Q28yZ3dGhVwNoAbzWawsE3qgmAAEwxTNtE6y',\n    poolTempLpTokenAccount: 'GP8hM7HRSjcsQfTbvHKNAWnwhqdn2Nxthb4UJiKXkfJC',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '2Ux1EYeWsxywPKouRCNiALCZ1y3m563Tc4hq1kQganiq',\n    serumBids: '34oLSEmDGyH4NyP84mUXCHbpW9JvG5anNd3iPaCF55zE',\n    serumAsks: 'Lp7h84DcAmWqhDbJ6LpvVX9m45GJQfpvMbWPTg4qtkF',\n    serumEventQueue: '8Y7MaACCFcTdjcUSLsGkxqxMLDaJDPSZtT5R1kuUL1Hk',\n    serumCoinVaultAccount: '54vv5QSZkmHpQzpvUmpS5ZreDwmbuXPdbGp9ybzgcsTM',\n    serumPcVaultAccount: '7PL69dV89XXJg9V6wzzdu9p2ymhVwBWqp82sUzWvjnp2',\n    serumVaultSigner: 'CTcvsPoWroF2e2iiZWe6ztBwNQHiDyAVCs8EbQ5Annig',\n    official: true,\n  },\n  {\n    name: 'SNY-USDC',\n    coin: { ...TOKENS.SNY },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['SNY-USDC-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: '5TgJXpv6H3KJhHCuP7KoDLSCmi8sM8nABizP7CmYAKm1',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '2Nr82a2ZxqsQYwBbpeLWQedy1s9kAi2U2AbeuMKjgFzw',\n    ammTargetOrders: 'Cts3uDVAgUSaXAHMEfLPnQWF4W5TpGdiB7WhYDAaQbSy',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'FaUYbopmMVdNRe3rLnqGPBA2KB96nLHudKaEgAUcvHXn',\n    poolPcTokenAccount: '9YiW8N9QdEsAdTQN8asjebwwEmDXAHRnb1E3nvz64vjg',\n    poolWithdrawQueue: 'HpWzYHXNeQkmW9oxFjHFozyy6sVxetqJBZdhNSTwcNid',\n    poolTempLpTokenAccount: '7QAVG74PVZntmFqvnGYwYySRBjB13HSeSNABwMPtfAPR',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'DPfj2jYwPaezkCmUNm5SSYfkrkz8WFqwGLcxDDUsN3gA',\n    serumBids: 'CFFoYkeUJaAEh6kQyVEbAgkWfABnH7c8Lynr2hk8ycJT',\n    serumAsks: 'AVQEVeftGzTV6Yj2jEPFGgWHyTYs5uyT3ZFFyTaLgTAP',\n    serumEventQueue: 'H6UE5r8zMsaHW9fha6Xm7bsWrYbyaL8WbBjhbqbZYPQM',\n    serumCoinVaultAccount: 'CddTJJj2tDWUk6Kteh3KSBJJh4HvkoWMXcQjZuXaaAzP',\n    serumPcVaultAccount: 'BGr1LWgHKaekkmScogSU1SYSRUaJBBPFeBAEBvuwf7CE',\n    serumVaultSigner: '3APrMUDUQ16iEsL4vTaovTf5fPXAEwtXmWXvD9xQVPaB',\n    official: true,\n  },\n  {\n    name: 'BOP-RAY',\n    coin: { ...TOKENS.BOP },\n    pc: { ...TOKENS.RAY },\n    lp: { ...LP_TOKENS['BOP-RAY-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: 'SJmR8rJgzzCi4sPjGnrNsqY4akQb3jn5nsxZBhyEifC',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '8pt8zWa9hsRSsiCJtVWnApXGBkmzSubjqf9sbgkbj9LS',\n    ammTargetOrders: 'Gg6gGVaokrVMJWtgDbamPwVG8PBN3VbgHLFghfSn3JxY',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'B345z8QcC2WvCwKjeTveLHAuEghumw2qH2xPxAbW7Awd',\n    poolPcTokenAccount: 'EPFPMhTRNA6f7J1NzEZ1rkWyhfexZBr9VX3MAn3C6Ce4',\n    poolWithdrawQueue: 'E8PcDA6vn9WHRsrMYZvKy2D2CxTB28Bp2cKAYcu16JH9',\n    poolTempLpTokenAccount: '47GcR2477mHukyTte1LpDShs4RUmkcF2rejJvisRFALB',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '6Fcw8aEs7oP7YeuMrM2JgAQUotYxa4WHKHWdLLXssA3R',\n    serumBids: '3CNgQ6KpTQYKX9s1CSy5y16ZtnXqYfcTHikmHjEjXKJm',\n    serumAsks: '7VxSfKDL7i3FmpJLnK4v7YgidNa1t7SCo84FY7YinQyA',\n    serumEventQueue: '9ote3YanmgQgL6vPBUGJVZyFsp6HDJNviTw7ghxzMDLT',\n    serumCoinVaultAccount: 'CTv9hnW3nbANzJ2yyzmyMCoUxv5s95ndxcBbLzV39z3w',\n    serumPcVaultAccount: 'GXFttVfXbH7rU6GJnBVs3LyyuiPU8a6sW2tv5K5ZGEAQ',\n    serumVaultSigner: '5JEwQ7hM1qFCBwJkZ2JyjkoJ99ojJXRx2bFjLcFobDvC',\n    official: true,\n  },\n  {\n    name: 'SLRS-USDC',\n    coin: { ...TOKENS.SLRS },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['SLRS-USDC-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: '7XXKU8oGDbeGrkPyK5yHKzdsrMJtB7J2TMugjbrXEhB5',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '3wNRVMaot3R2piZkzmKsAqewcZ5ABktqrJZrc4Vz3uWs',\n    ammTargetOrders: 'BwSmQF7nxRqzzVdfaynxM98dNbXFi94cemDDtxMfV3SB',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '6vjnbp6vhw4RxNqN3e2tfE3VnkbCx8RCLt8RBmHZvuoC',\n    poolPcTokenAccount: '2anKifuiizorX69zWQddupMqawGfk3TMPGZs4t7ZZk43',\n    poolWithdrawQueue: 'Fh5WTfP9jCbkLPzsspCs4WCSPGqE5GYE8v7kqFXijMSA',\n    poolTempLpTokenAccount: '9oiniKrJ7r1cHw97gv4XPxTFS9i61vSa7PkpRcm8qGeK',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '2Gx3UfV831BAh8uQv1FKSPKS9yajfeeD8GJ4ZNb2o2YP',\n    serumBids: '6kMW5vafM4mWZJdBNpH4EsVjFSuSTUokx5meYoVY8GTw',\n    serumAsks: 'D5asu2BVatxtgGFugwmNubdknAsLSJDZcqRHvkaS8UBd',\n    serumEventQueue: '66Go3JcjNJaDHHvJyaFaV8rh8GAciLzvM8WzN7fRE3HM',\n    serumCoinVaultAccount: '6B527pfkvbvbLRDgjASLGygdaQ1fFLwmmqyFCgTacsKH',\n    serumPcVaultAccount: 'Bsa11vdveUhSouxAXSYCE4yXToUP58N9EEeM1P8qbtp3',\n    serumVaultSigner: 'CjiJdQ9a7dnjTKfVPZ2fwn31NtgJA1kRU55pwDE8HHrM',\n    official: true,\n  },\n  {\n    name: 'SAMO-RAY',\n    coin: { ...TOKENS.SAMO },\n    pc: { ...TOKENS.RAY },\n    lp: { ...LP_TOKENS['SAMO-RAY-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: 'EyDgEU9BdG7m6ZK4bYERxbN4NCJ129WzPtv23dBkfsLg',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '45TD9SmkGoq4hBxBnsQQD2V7pyWK53HkEXz7uNNHpezG',\n    ammTargetOrders: 'Ave8ozwW9iBGL4SpK1tM1RfrQi8CsLUFj4UGdFkWRPRp',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '9RFqA8EbTTqH3ct1fTGiGgqFAg2hziUdtyGgg1w69LJP',\n    poolPcTokenAccount: 'ArAyYYib2X8BTcURYNXKhfoUww2DWkzk67PRPGVpFAuJ',\n    poolWithdrawQueue: 'ASeXk7dri8jz466wCtkCVUYheHFEznX55EMuGivL5WPL',\n    poolTempLpTokenAccount: '2pu8zUYpwa9UEPvKkQvZHQUbbTdMg6N2mXi2Vv4DaEJV',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'AAfgwhNU5LMjHojes1SFmENNjihQBDKdDDT1jog4NV8w',\n    serumBids: 'AYEeLrFWhGDRgX9L428SqBU56iVzDSyP3A6Db4VekcjE',\n    serumAsks: 'CctHQdpAtxugQNFU7PA4ebb2T5K1ZkwDTvoFrsYrxifY',\n    serumEventQueue: 'CFtHmFydRBtw1qsoPZ4LufbdX39LKT9Aw5HzUib9JpiL',\n    serumCoinVaultAccount: 'BpHuL7HNTJDDGiw4ELpnYQdhTNNgZ53ennhtkQjGawGS',\n    serumPcVaultAccount: 'BzsbZPiwLMJHhSFNVdtGqi9MWKhYijgq34Z6YjYkQJUr',\n    serumVaultSigner: 'F2f14Nw7kqBeGwgFymm7sEPcZrKWWN56hvN5yx2vc6sE',\n    official: true,\n  },\n  {\n    name: 'renBTC-USDC',\n    coin: { ...TOKENS.renBTC },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['renBTC-USDC-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: '61JtCkTQKSeBU8ztEScByZiBhS6KAHSXfQduVyA4s1h7',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'AtFR9ub2dbNJJod7gPL81F7gRxVtpcR1n4GczqgasqX2',\n    ammTargetOrders: 'ZVmcXezubm6FXvS8Wtvah66vqZRW6NKD17tea7FcGsB',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '2cA595zqm12sRtsiNvV6AqD8WDYYiJoLwEYNQ1FZG2ep',\n    poolPcTokenAccount: 'Fxn92YfcVsd9diz32YtKixqmuezgLeSWqd1gypFL5qe',\n    poolWithdrawQueue: 'ioR3UfTLnz6t9Bzbcu7TPmw1xYQRwXCgGqcpvzRmCQx',\n    poolTempLpTokenAccount: '8VEBvPwhBwu9D4e4Zei6X31ZBs5udL5epJHp935LVMv1',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '74Ciu5yRzhe8TFTHvQuEVbFZJrbnCMRoohBK33NNiPtv',\n    serumBids: 'B1xjpD5EEVtLWnWioHc7pCJLj1WVGyKdyMV1NzY4q5pa',\n    serumAsks: '6NZf4f6dxxv83Bdfiyf1R1vMFo5QP8BLB862qrVkmhuS',\n    serumEventQueue: '7RbmehbSunJLpg7N6kaCX5SenR1N79xHN8jKnuvXoEHC',\n    serumCoinVaultAccount: 'EqnX836tGG4PYSBPgzzQecbTP47AZQRVfcy4RqQW8F3D',\n    serumPcVaultAccount: '7yiA6p6BXxZwcm38St3vTzyGNEmZjw8x7Ko2nyTfvVx3',\n    serumVaultSigner: '9aZNHmGZrNnB3fKmBj5B9oD7moA1nFviZqNUSkx2tctg',\n    official: true,\n  },\n  {\n    name: 'renDOGE-USDC',\n    coin: { ...TOKENS.renDOGE },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['renDOGE-USDC-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: '34oD4akb2DeNcCw1smKHPsD3iqQQQWmNy3cY81nz7HP8',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '92QStSTSQHYFg2ZxJjxWETwiS3zYsKnJm9BznJ8JDvrh',\n    ammTargetOrders: 'EHjwgEneTm6DZWGbictuSxf7NfcirEjyYdzYaSyNkhT1',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'EgNtpEoLCiSJx8TtVLWUBpXhUWmqzBrymgweihtmnd83',\n    poolPcTokenAccount: 'HZHCa82ezeYegyQWtsWW3vznpoiRaa3ewtxYvm5X6tTz',\n    poolWithdrawQueue: 'FbWCd9uQfAD5M62Pyceff5S2WFeN9Z5rL6azysGdhais',\n    poolTempLpTokenAccount: 'H12qWVeehVN6CQGfwCnSH2LxcHJ9we33U6gPmiViueu5',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '5FpKCWYXgHWZ9CdDMHjwxAfqxJLdw2PRXuAmtECkzADk',\n    serumBids: 'EdXd7dZLfkjz4k38VoP8d8ij7UJdrnZ3EoR9RHr5ThqX',\n    serumAsks: 'DuGkNca9NtZByzAxQsbt5yPFNF8pyv2PqB2sjSbBGEWi',\n    serumEventQueue: 'AeRsgcjxerNiMK1wpPyt7TSkH9Ps1mTr9Ac1bbWvYhdp',\n    serumCoinVaultAccount: '5UbUbaVLXnZq1eibQSUxdsk6Lp38bgdTjbjQPssXGgwW',\n    serumPcVaultAccount: '4KMsmK7gPdKMAKmEcHqtBB5EhNnWVRd71v3a5uBwhQ2T',\n    serumVaultSigner: 'Gwe1pE3rV4LLviNZqrEFPAeLchwvHrftBUQsnJtEkpSa',\n    official: true,\n  },\n  {\n    name: 'RAY-USDC',\n    coin: { ...TOKENS.RAY },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['RAY-USDC-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: '6UmmUiYoBjSrhakAobJw8BvkmJtDVxaeBtbt7rxWo1mg',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'J8u8nTHYtvudyqwLrXZboziN95LpaHFHpd97Jm5vtbkW',\n    ammTargetOrders: '3cji8XW5uhtsA757vELVFAeJpskyHwbnTSceMFY5GjVT',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'FdmKUE4UMiJYFK5ogCngHzShuVKrFXBamPWcewDr31th',\n    poolPcTokenAccount: 'Eqrhxd7bDUCH3MepKmdVkgwazXRzY6iHhEoBpY7yAohk',\n    poolWithdrawQueue: 'ERiPLHrxvjsoMuaWDWSTLdCMzRkQSo8SkLBLYEmSokyr',\n    poolTempLpTokenAccount: 'D1V5GMf3N26owUFcbz2qR5N4G81qPKQvS2Vc4SM73XGB',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '2xiv8A5xrJ7RnGdxXB42uFEkYHJjszEhaJyKKt4WaLep',\n    serumBids: 'Hf84mYadE1VqSvVWAvCWc9wqLXak4RwXiPb4A91EAUn5',\n    serumAsks: 'DC1HsWWRCXVg3wk2NndS5LTbce3axwUwUZH1RgnV4oDN',\n    serumEventQueue: 'H9dZt8kvz1Fe5FyRisb77KcYTaN8LEbuVAfJSnAaEABz',\n    serumCoinVaultAccount: 'GGcdamvNDYFhAXr93DWyJ8QmwawUHLCyRqWL3KngtLRa',\n    serumPcVaultAccount: '22jHt5WmosAykp3LPGSAKgY45p7VGh4DFWSwp21SWBVe',\n    serumVaultSigner: 'FmhXe9uG6zun49p222xt3nG1rBAkWvzVz7dxERQ6ouGw',\n    official: true,\n  },\n  {\n    name: 'RAY-SRM',\n    coin: { ...TOKENS.RAY },\n    pc: { ...TOKENS.SRM },\n    lp: { ...LP_TOKENS['RAY-SRM-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: 'GaqgfieVmnmY4ZsZHHA6L5RSVzCGL3sKx4UgHBaYNy8m',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '7XWbMpdyGM5Aesaedh6V653wPYpEswA864sBvodGgWDp',\n    ammTargetOrders: '9u8bbHv7DnEbVRXmptz3LxrJsryY1xHqGvXLpgm9s5Ng',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '3FqQ8p72N85USJStyttaohu1EBsTsEZQ9tVqwcPWcuSz',\n    poolPcTokenAccount: '384kWWf2Km56EReGvmtCKVo1BBmmt2SwiEizjhwpCmrN',\n    poolWithdrawQueue: '58z15NsT3JJyfywFbdYzn2GVeDDC444WHyUrssZ5tCm7',\n    poolTempLpTokenAccount: '8jqpuijsM2ne5dkwLyjQxa9oCbYEjM6bE1uBaFXmC3TE',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'Cm4MmknScg7qbKqytb1mM92xgDxv3TNXos4tKbBqTDy7',\n    serumBids: 'G65a5G6xHpc9zV8tGhVSKJtz7AcAJ8Q3hbMqnDJQgMkz',\n    serumAsks: '7bKEjcZEqVAWsiRGDnxXvTnNwhZLt2SH6cHi5hpcg5de',\n    serumEventQueue: '4afBYfMNsNpLQxFFt72atZsSF4erfU28XvugpX6ugvr1',\n    serumCoinVaultAccount: '5QDTh4Bpz4wruWMfayMSjUxRgDvMzvS2ifkarhYtjS1B',\n    serumPcVaultAccount: '76CofnHCvo5wEKtxNWfLa2jLDz4quwwSHFMne6BWWqx',\n    serumVaultSigner: 'AorjCaSV1L6NGcaFZXEyUrmbSqY3GdB3YXbQnrh85v6F',\n    official: true,\n  },\n  {\n    name: 'RAY-ETH',\n    coin: { ...TOKENS.RAY },\n    pc: { ...TOKENS.ETH },\n    lp: { ...LP_TOKENS['RAY-ETH-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: '8iQFhWyceGREsWnLM8NkG9GC8DvZunGZyMzuyUScgkMK',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '7iztHknuo7FAXVrrpAjsHBEEjRTaNH4b3hecVApQnSwN',\n    ammTargetOrders: 'JChSqhn6yyEWqD95t8UR5DaZZtEZ1RGGjdwgMc8S6UUt',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'G3Szi8fUqxfZjZoNx17kQbxeMTyXt2ieRvju4f3eJt9j',\n    poolPcTokenAccount: '7MgaPPNa7ySdu5XV7ik29Xoav4qcDk4wznXZ2Muq9MnT',\n    poolWithdrawQueue: 'C9aijsE3tLbVyYaXXHi45qneDL5jfyN8befuJh8zzpou',\n    poolTempLpTokenAccount: '3CDnyBsNnexdvfvo6ASde5Q4e72jzMQFHRRkSQr49vEG',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '6jx6aoNFbmorwyncVP5V5ESKfuFc9oUYebob1iF6tgN4',\n    serumBids: 'Hdvh4ZGL9MkiQApNqfZtdmd4jM6Sz8e9akCUuxxkYhb8',\n    serumAsks: '7vWmTv9Mh8XbAxcduEqed2dLtro4N7hFroqch6mMxYKM',\n    serumEventQueue: 'EgcugBBSwM2FxqLQx5S6zAiU9x9qRS8qMVRMDFFU4Zty',\n    serumCoinVaultAccount: 'EVVtYo4AeCbmn2dYS1UnhtfjpzCXCcN26G1HmuHwMo7w',\n    serumPcVaultAccount: '6ZT6KwvjLnJLpFdVfiRD9ifVUo4gv4MUie7VvPTuk69v',\n    serumVaultSigner: 'HXbRDLcX2FyqWJY95apnsTgBoRHyp7SWYXcMYod6EBrQ',\n    official: true,\n  },\n  {\n    name: 'RAY-SOL',\n    coin: { ...TOKENS.RAY },\n    pc: { ...NATIVE_SOL },\n    lp: { ...LP_TOKENS['RAY-SOL-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: 'AVs9TA4nWDzfPJE9gGVNJMVhcQy3V9PGazuz33BfG2RA',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '6Su6Ea97dBxecd5W92KcVvv6SzCurE2BXGgFe9LNGMpE',\n    ammTargetOrders: '5hATcCfvhVwAjNExvrg8rRkXmYyksHhVajWLa46iRsmE',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'Em6rHi68trYgBFyJ5261A2nhwuQWfLcirgzZZYoRcrkX',\n    poolPcTokenAccount: '3mEFzHsJyu2Cpjrz6zPmTzP7uoLFj9SbbecGVzzkL1mJ',\n    poolWithdrawQueue: 'FSHqX232PHE4ev9Dpdzrg9h2Tn1byChnX4tuoPUyjjdV',\n    poolTempLpTokenAccount: '87CCkBfthmyqwPuCDwFmyqKWJfjYqPFhm5btkNyoALYZ',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'C6tp2RVZnxBPFbnAsfTjis8BN9tycESAT4SgDQgbbrsA',\n    serumBids: 'C1nEbACFaHMUiKAUsXVYPWZsuxunJeBkqXHPFr8QgSj9',\n    serumAsks: '4DNBdnTw6wmrK4NmdSTTxs1kEz47yjqLGuoqsMeHvkMF',\n    serumEventQueue: '4HGvdannxvmAhszVVig9auH6HsqVH17qoavDiNcnm9nj',\n    serumCoinVaultAccount: '6U6U59zmFWrPSzm9sLX7kVkaK78Kz7XJYkrhP1DjF3uF',\n    serumPcVaultAccount: '4YEx21yeUAZxUL9Fs7YU9Gm3u45GWoPFs8vcJiHga2eQ',\n    serumVaultSigner: '7SdieGqwPJo5rMmSQM9JmntSEMoimM4dQn7NkGbNFcrd',\n    official: true,\n  },\n  {\n    name: 'DXL-USDC',\n    coin: { ...TOKENS.DXL },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['DXL-USDC-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: 'asdEJnE7osjgnSyQkSZJ3e5YezbmXuDQPiyeyiBxoUm',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '4zuyAKT81y9mSSrjq8sN872zwgcD5ncQGyCXwRJDn6tC',\n    ammTargetOrders: 'H2GMj87upPeBQT3ywzqudJodwyTFpPmwuwtiZ7DQB8Md',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'FHAqAqqdyZFaxUTCg19hH9pRfKKChwNekFrY428NVPtT',\n    poolPcTokenAccount: '7jzwUCSq1R1QX72PKRDjZ4xgUm6Q6iiLW9BY8tnj8wkc',\n    poolWithdrawQueue: '3WBnh4HbddG6sMvv6s1GALVLPq6xfwVat3WqufZKKFXa',\n    poolTempLpTokenAccount: '9DRSmvcrXC7AtNrhf9tgfBuwT4q5hXyWaAybe5yfRU7q',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'DYfigimKWc5VhavR4moPBibx9sMcWYVSjVdWvPztBPTa',\n    serumBids: '2Z6Do29oGtze6dnVMXAVw8mkRxFpLGc8uS2RjfrWoCyy',\n    serumAsks: 'FosLnuNKUKqfqYviAPdp1doC3dKpXQXvAeRGM5xAoUCJ',\n    serumEventQueue: 'EW5QgqGUZ7dSmXLXiuWB8AAsjSjpb8kaaoxAUqK1DWyg',\n    serumCoinVaultAccount: '9ZaKDVrjCaPRZTqnuteGc8iBmJhdaGVf8JV2HBT67wbX',\n    serumPcVaultAccount: '5Y65XyuJemmRU7G1AQQTvWKSge8WDVYhb2knd7htJHoh',\n    serumVaultSigner: 'y6FHXgMwWvvpoiox6Ut6mUAUHgbJMXNJnXQm7MQkEdE',\n    official: true,\n  },\n  {\n    name: 'LIKE-USDC',\n    coin: { ...TOKENS.LIKE },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['LIKE-USDC-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: 'GmaDNMWsTYWjaXVBjJTHNmCWAKU6cn5hhtWWYEZt4odo',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'Crn5beRFeyj4Xw13E2wdJ9YkkLLEZzKYmtTV4LFDx3MN',\n    ammTargetOrders: '7XjS6MrvBRi9JeFWBMAYPaKhKgR3b7xnVdYDBkFb4CXR',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '8LoHX6f6bMdQVs4mThoH2KwX2dQDSkqVFADi4ZjDQv9T',\n    poolPcTokenAccount: '2Fwm8M8vuPXEXxvKz98VdawDxsK9W8uRuJyJhvtRdhid',\n    poolWithdrawQueue: 'CW9zJ2JbBekkdd5SdvPapPcbziR8d1UHBzW7nNn1W3ga',\n    poolTempLpTokenAccount: 'FVHsnC1nhwMcrAzFwcK4dgUtDdYFM1VrTJ8Rp8Mb1LkY',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '3WptgZZu34aiDrLMUiPntTYZGNZ72yT1yxHYxSdbTArX',\n    serumBids: 'GzHpnQSfS7KdqLKgiEEP7pkYnwEBz9zaE7De2CjmCrNV',\n    serumAsks: 'FpEBAT9qP1so4ASUTiEWxyXH2SJvgoBYUiZ1AbPimcS7',\n    serumEventQueue: 'CUMDMV9KtE22RUZECUNHxiq7FmUiRusyKa1rHUJfRptq',\n    serumCoinVaultAccount: 'Dd9F1fugQj2xtduyNvFS5TtxP9vKnuxVMcrPsHFnLyqp',\n    serumPcVaultAccount: 'BnXXu8kLUXrwg3MpcVRVPLZw9bpX2mLd95qtCMnSUtu7',\n    serumVaultSigner: 'MKCHeoqNGWU8TJBkdF1M76nMUteJCwuBRUJfCtR3iV7',\n    official: true,\n  },\n  {\n    name: 'mSOL-USDC',\n    coin: { ...TOKENS.mSOL },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['mSOL-USDC-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: 'ZfvDXXUhZDzDVsapffUyXHj9ByCoPjP4thL6YXcZ9ix',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '4zoatXFjMSirW2niUNhekxqeEZujjC1oioKCEJQMLeWF',\n    ammTargetOrders: 'Kq9Vgb8ntBzZy5doEER2p4Zpt8SqW2GqJgY5BgWRjDn',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '8JUjWjAyXTMB4ZXcV7nk3p6Gg1fWAAoSck7xekuyADKL',\n    poolPcTokenAccount: 'DaXyxj42ZDrp3mjrL9pYjPNyBp5P8A2f37am4Kd4EyrK',\n    poolWithdrawQueue: 'CfjpUvQAoU4hadb9nReTCAqBFFP7MpJyBW97ezbiWgsQ',\n    poolTempLpTokenAccount: '3EdqPYv3hLJFXC3U9LH7yA7HX6Z7gRxT7vGQQJrxScDH',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '6oGsL2puUgySccKzn9XA9afqF217LfxP5ocq4B3LWsjy',\n    serumBids: '8qyWhEcpuvEsdCmY1kvEnkTfgGeWHmi73Mta5jgWDTuT',\n    serumAsks: 'PPnJy6No31U45SVSjWTr45R8Q73X6bNHfxdFqr2vMq3',\n    serumEventQueue: 'BC8Tdzz7rwvuYkJWKnPnyguva27PQP5DTxosHVQrEzg9',\n    serumCoinVaultAccount: '2y3BtF5oRBpLwdoaGjLkfmT3FY3YbZCKPbA9zvvx8Pz7',\n    serumPcVaultAccount: '6w5hF2hceQRZbaxjPJutiWSPAFWDkp3YbY2Aq3RpCSKe',\n    serumVaultSigner: '9dEVMESKXcMQNndoPc5ji9iTeDJ9GfToboy8prkZeT96',\n    official: true,\n  },\n  {\n    name: 'mSOL-SOL',\n    coin: { ...TOKENS.mSOL },\n    pc: { ...NATIVE_SOL },\n    lp: { ...LP_TOKENS['mSOL-SOL-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: 'EGyhb2uLAsRUbRx9dNFBjMVYnFaASWMvD6RE1aEf2LxL',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '6c1u1cNEELKPmuH352WPNNEPdfTyVPHsei39DUPemC42',\n    ammTargetOrders: 'CLuMpSesLPqdxewQTxfiLdifQfDfRsxkFhPgiChmdGfk',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '85SxT7AdDQvJg6pZLoDf7vPiuXLj5UYZLVVNWD1NjnFK',\n    poolPcTokenAccount: 'BtGUR6y7uwJ6UGXNMcY3gCLm7dM3WaBdmgtKVgGnE1TJ',\n    poolWithdrawQueue: '7vvoHxA6di9EvzJKL6bmojbZnH3YaRXu2LitufrQhM21',\n    poolTempLpTokenAccount: 'ACn8TZ27fQ85kgdPKUfkETB4dS5JPFoq53z7uCgtHDai',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '5cLrMai1DsLRYc1Nio9qMTicsWtvzjzZfJPXyAoF4t1Z',\n    serumBids: 'JAABQk3n6S8W85LC6RpqTvGgP9wJFb8kfqir6kUhBXkQ',\n    serumAsks: 'psFs3Dm7quZZn3BhvrT1LdWCVtbMqxXanU7ZYdHULj6',\n    serumEventQueue: '4bmSJJCrx3dehFQ8kXAE1c4L9kfP8DyHow4tFw6aRJZe',\n    serumCoinVaultAccount: '2qmHPJn3URkrboLiJkQ5tBB4bmYWdb6MyhQzZ6ms7wf9',\n    serumPcVaultAccount: 'A6eEM36Vpyti2PoHK8h8Dqk5zu7YTaSRTQb7XXL8tcrV',\n    serumVaultSigner: 'EHMK3DdPiPBd9aBjeRU4aZjD7z568rmwHCSAAxRooPq6',\n    official: true,\n  },\n  {\n    name: 'MER-PAI',\n    coin: { ...TOKENS.MER },\n    pc: { ...TOKENS.PAI },\n    lp: { ...LP_TOKENS['MER-PAI-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: '6GUF8Qb5FWmifzYpRdKomFNbSQAsLShhT45GbTGg34VJ',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'Gh3w9pfjwbZX2FVrMy6PzUQG5rhihKduGCB7UaPGUTZw',\n    ammTargetOrders: '37k5Xe8Sej1TrjrGsR2HyRR1EjYECV1HcS3Xh6Jnxggi',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'ApnMY7ahxTMssU1dzxYEfMcag1aSa5s4Axje3nqnnrXH',\n    poolPcTokenAccount: 'BuQxGhmS82ZhczEGbUyi9R7TjxczXTMRoD4nQ4GvqxCf',\n    poolWithdrawQueue: 'CrvN8Zi4c6BHVFc3mAB8CZSZRftY73WtpBH2Zade9MKZ',\n    poolTempLpTokenAccount: '5W9V96yUqk95zUYawoCfEittj4VT4Nbv8NVjevJ4kN78',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'FtxAV7xEo6DLtTszffjZrqXknAE4wpTSfN6fBHW4iZpE',\n    serumBids: 'Hi6bo1sodi7X2GrpeVpk5mKKG42Ga8n4Gi3Fxr2WK6rg',\n    serumAsks: '75a4ASjShTXZPdxNzm4RoSEVydLBFfDa1V81Wcf7Xw59',\n    serumEventQueue: '7WDqc3MAApvgDskQBDKVVPmya3Src228sAk8Lag8ovph',\n    serumCoinVaultAccount: '2Duueu4HUnv6e4qUqdM4DKECM9X3XggBsXp5eLYuSLXe',\n    serumPcVaultAccount: '3GEqHH6VAnyqrgG9jRB4Qy9PMTYJmSBvg7u3LtBWHEWD',\n    serumVaultSigner: '7cBPvLMQvf1X5rzLMNKrx7TY5M186rTR49yJNHNSp81s',\n    official: true,\n  },\n  {\n    name: 'PORT-USDC',\n    coin: { ...TOKENS.PORT },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['PORT-USDC-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: '6nJes56KF999Q8VtQTrgWEHJGAfGMuJktGb8x2uWff2u',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'ENfqr7WFKJy9VRwfDkgL4HvMM6GU7pHyowzZsZwx8P39',\n    ammTargetOrders: '9wjp6tFY1XNH6KhdCHeDgeUsNLVjTwxA3iC9k5aun2NW',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'GGurDvQctUDgcegSYZetkNGytcWEfLes6yXzYruhLuLP',\n    poolPcTokenAccount: '3FmHEQRHaKMS4vA41eYTVmfxX9ErxdAScS2tvgWvNHSz',\n    poolWithdrawQueue: 'ETie1oDMcoTD8jzrseAcvTqZYyyoWxR92LH15nA6Lfub',\n    poolTempLpTokenAccount: 'GEJfHTwURq89KcM1RgvFZRweb4f7H8NAsmyMg2kTPBEs',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '8x8jf7ikJwgP9UthadtiGFgfFuyyyYPHL3obJAuxFWko',\n    serumBids: '9Y24T3co7Cc7cGbG2mFc9n3LQonAWgtayqfLz3p28JPa',\n    serumAsks: '8uQcJBapCnxy3tNEB8tfmssUvqYWvuCsSHYtdNFbFFjm',\n    serumEventQueue: '8ptDxtRLWXAKYQYRoRXpKmrJje31p8dsDsxeZHEksqtV',\n    serumCoinVaultAccount: '8rNKJFsd9yuGx7xTTm9sb23JLJuWJ29zTSTznGFpUBZB',\n    serumPcVaultAccount: '5Vs1UWLxZHHRW6yRYEEK3vpzE5HbQ8BFm27PnAaDjqgb',\n    serumVaultSigner: '63ZaXnSj7SxWLFEcjmK79fyGokJxhR3UEXomN7q7Po25',\n    official: true,\n  },\n  {\n    name: 'MNGO-USDC',\n    coin: { ...TOKENS.MNGO },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['MNGO-USDC-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: '34tFULRrRwh4bMcBLPtJaNqqe5pVgGZACi5sR8Xz95KC',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '58G7RrYRntVvVj9rVgDwGhAJoWhMWHNyDCoMydYUwSR6',\n    ammTargetOrders: '2qBcjDqDywhB7Kgb1VYq8K5svJh37BB8oC5kBE4VqA7q',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '91fMidHL8Yr8KRcu4Zu2RPRRg1FbXxZ7DV43rAyKRLjn',\n    poolPcTokenAccount: '93oFfbcayY2WkcR6d9AyqPcRC121dXmWarFJkwPErRRE',\n    poolWithdrawQueue: 'FhnSdMoRPj75bLs6yzaDPFfiuucUZhVDiyM78WEhaKJo',\n    poolTempLpTokenAccount: 'FZAwAb6UxNiwDTbQZ3bPKYA4PkbYpurh8YpAH8G424Lv',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '3d4rzwpy9iGdCZvgxcu7B1YocYffVLsQXPXkBZKt2zLc',\n    serumBids: '3nAdH9wTEhPoW4e2s8K2cXfn4jZH8FBCkUqtzWpsZaGb',\n    serumAsks: 'HxbWm3iabHEFeHG9LVGYycTwn7aJVYYHbpQyhZhAYnfn',\n    serumEventQueue: 'H1VVmwbM96BiBJq46zubSBm6VBhfM2FUhLVUqKGh1ee9',\n    serumCoinVaultAccount: '7Ex7id4G37HynuiCAv5hTYM4BnPB9y4NU85QcaNWZy3G',\n    serumPcVaultAccount: '9UB1NhGeDuV1apHdtK5LeAEjP7kZFH8vVYGdh2yGFRi8',\n    serumVaultSigner: 'BFkxdUwW17eANhfs1xNmBqEcegb4EStQxVb5VaMS2dq6',\n    official: true,\n  },\n  {\n    name: 'ATLAS-USDC',\n    coin: { ...TOKENS.ATLAS },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['ATLAS-USDC-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: '2bnZ1edbvK3CK3LTNZ5jH9anvXYCmzPR4W2HQ6Ngsv5K',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'EzYB1U93e8E1KGJdUzmnwgNBFMP9E1XAuyosmiPGLAvD',\n    ammTargetOrders: 'DVxJDo3E9zfGgvSkC2DYS5fsv5AyXA7gXpcs1fHFrP3y',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'FpFV46UVvRtcrRvYtKYgJpJtP1tZkvssjhrLUfoj8Cvo',\n    poolPcTokenAccount: 'GzwX68f1ZF4dKnAJ58RdET8sPvvnYktbDEHmjoGw7Umk',\n    poolWithdrawQueue: '26SuCukyzbYo5kzeufaSoMjRPStAwqfVzTXb4QGynTit',\n    poolTempLpTokenAccount: 'HcoA8ucDBjEUVMjvURaS9CZgdEUbq8jRieGabq48mCL8',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'Di66GTLsV64JgCCYGVcY21RZ173BHkjJVgPyezNN7P1K',\n    serumBids: '2UabAccF1AFPcNqv9D46JgyGnErnaYAJuCwyaT5dCkHc',\n    serumAsks: '9umNLTbks7S51TEB8XF4jeCxwyq3qmdHrFDMFB8cT1gv',\n    serumEventQueue: 'EYU32k5waRUxF521k2KFSuhEj11HQvg4MbQ9tFXuixLi',\n    serumCoinVaultAccount: '22a8dDQwHmmnW4M4WuSXHC9NdQAufZ2V8at3EtPzBqFj',\n    serumPcVaultAccount: '5Wu76Qx7EoiR79zVVV49cZDYZ5csZaKFiHKYtCjF9FNU',\n    serumVaultSigner: 'FiyZW6n5VE64Yubn2PUFAxbmB2FZXhYce74LzJUhqSZg',\n    official: true,\n  },\n  {\n    name: 'POLIS-USDC',\n    coin: { ...TOKENS.POLIS },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['POLIS-USDC-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: '9xyCzsHi1wUWva7t5Z8eAvZDRmUCVhRrbaFfm3VbU4Mf',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '12A4SGay36i2cSwA4JSdvg7rWSmCz8JzhsoDqMM8Yns7',\n    ammTargetOrders: '6bszsB6zxw2YowrEm26XYhh57HKQEVMRx5YMvPSSVQNh',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '7HgvC7GdmUt7kMivdLMovLStW25avFsW9GDXgNr525Uy',\n    poolPcTokenAccount: '9FknRLGpWBqYg7fXQaBDyWWdu1v2RwUM6zRV6CiPjWBD',\n    poolWithdrawQueue: '6uN62R1i31QVoy9cmQAeDrfLccMZDjQ2gmwv2D4iBTJT',\n    poolTempLpTokenAccount: 'FJV66MrqZW8VYGmTuAupstwYtqfF6ULLPP9voYtnc8DS',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'HxFLKUAmAMLz1jtT3hbvCMELwH5H9tpM2QugP8sKyfhW',\n    serumBids: 'Bc5wovapX1tRjZfyZVpsGH73Gq5LGN4ANsj8kaEhfY7c',\n    serumAsks: '4EHg2ANFFEKLFkpLxgiyinJ1UDWsG2p8rVoAjFfjMDKc',\n    serumEventQueue: 'qeQC4u5vpo5QMC17V5UMkQfK67vu3DHtBYVT1hFSGCK',\n    serumCoinVaultAccount: '5XQ7xYE3ujVA21HGbvFGVG4pLgqVHSfR9anz2EfmZ3nA',\n    serumPcVaultAccount: 'ArUDWPwzGQFfa7t7nSdkp1Dj6tYA3icXEq8K7goz9WoG',\n    serumVaultSigner: 'FHX9fPAUVA1MxPme28f4eeVH81QVRHDWofa2V6FUJaiR',\n    official: true,\n  },\n  {\n    name: 'ATLAS-RAY',\n    coin: { ...TOKENS.ATLAS },\n    pc: { ...TOKENS.RAY },\n    lp: { ...LP_TOKENS['ATLAS-RAY-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: 'F73euqPynBwrgcZn3fNSEneSnYasDQohPM5aZazW9hp2',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '2CbuxnkjsBvaQoAubc5MAmbeZSMn36z8sZnfMvZWH1vb',\n    ammTargetOrders: '6GZrucFa9hAQW7yHiPt3oZj9GkL6oBipngyY1Hw3zMx',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '33UaaUmmySzxK7q3yhmQiXMrW1tQrwqojyD6ZEFgM6FZ',\n    poolPcTokenAccount: '9SYRTwYE5UV2cxEuRz8iiJcV8gMbMnJUYFC8zgDAsUwB',\n    poolWithdrawQueue: '6bznLHPLPA3axnRfjh3sFzkxeMUQDLWhDuaHzjGL1EE6',\n    poolTempLpTokenAccount: 'FnmoaJqFYHotLTG2Ur84jSUmVUACVWrBvBvRHdPzhqvb',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'Bn7n597jMxU4KjBPUo3QwJhbqr5145cHy31p6EPwPHwL',\n    serumBids: '9zAgdk4Na8fBKLiTWzsqZwgYQETuHBDjPe2GYqHy17L',\n    serumAsks: 'Fv6MY3w7PP7A54cuPQHevQNuwekGy8yksXWioBsyVd42',\n    serumEventQueue: '75iVJf9QKovBdsvgxcCFfwn2N4QyxEXyKxQdBvZTdzjr',\n    serumCoinVaultAccount: '9tBagdm862GCoxZNFvXv7HFjLUFmypxPYxfiT3j9S3h3',\n    serumPcVaultAccount: '4oc1kGhKByyxRnh3oXupjTn5P6JwWPnoxwvLxjZzi2vE',\n    serumVaultSigner: 'EK2TjcyoXzUweNJnJupQf6sZK8756mvBJeGBvi6y18Cq',\n    official: true,\n  },\n  {\n    name: 'POLIS-RAY',\n    coin: { ...TOKENS.POLIS },\n    pc: { ...TOKENS.RAY },\n    lp: { ...LP_TOKENS['POLIS-RAY-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: '5tho4By9RsqTF1rbm9Akiepik3kZBT7ffUzGg8bL1mD',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'UBa61sKev8gr19nqVyN3BZbW2jG7eAGjbjeZvpU4wu8',\n    ammTargetOrders: 'FgMtC8pDrSQJUovmnrDiRWgLGVrVSq9kui98re6uRz5i',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'Ah9T12tzwnTXWrWVWzLmCrwCEmVHS7HMdWKG4qLUDzJP',\n    poolPcTokenAccount: 'J7kjQkrpafcLjL7cCpmMamxLAFnCkGApLTC2QrbHe2NQ',\n    poolWithdrawQueue: 'EgZgi8skDug7YecbFuCFxXx3SPFPhbGSVrGiNzLHErkj',\n    poolTempLpTokenAccount: 'TYw7qQDt6sqpwUFSRfNBaLHEA1SUxbEWtmZxtZQhojk',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '3UP5PuGN6db7NhWf4Q76FLnR4AguVFN14GvgDbDj1u7h',\n    serumBids: '4tAuffNhWeF2MDWjMDgrRoR8X8Jg3BLvUAaerXzLsFpG',\n    serumAsks: '9W133475h1LZ2ZzY7aJtbJajLDSCn5hNnKcsu6gXgE2G',\n    serumEventQueue: '5DX4tJ8jZt91XzM7JUUPhu6CL4o6UDGnfjLJZtkmEfVT',\n    serumCoinVaultAccount: 'pLD9GMk4LACBXDJAWJSgbT1batbHgunBVyy8BaVBazG',\n    serumPcVaultAccount: 'Ah3JVyTAGLbH63XPWDDnJUwV1xYwHhFX2J81CDHomkLk',\n    serumVaultSigner: '5RqVkFy8hUbYDR81ucZhF6rAwpgYJngLJLSynMTeC4vM',\n    official: true,\n  },\n  {\n    name: 'ALEPH-RAY',\n    coin: { ...TOKENS.ALEPH },\n    pc: { ...TOKENS.RAY },\n    lp: { ...LP_TOKENS['ALEPH-RAY-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: '8Fr3wxZXLtiSozqms5nF4XXGHNSNqcMC6K6MvRqEfk4a',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'GrTQQTca8U7QpNiThwHfiQuFVihvSkkNPchhkKr7PMy',\n    ammTargetOrders: '7WCvFBFN3fjU5hKJjPF2rHLAyXfzGCEqJ8qbqKLBaGTv',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '4WzdFwdKaXLQdFn9i84asMxdr6Fmhmh3qd6uC2xjBXwd',\n    poolPcTokenAccount: 'yFWn8ji7zq24UDg1mMqP1mA3vWyUdkjARQUPZCS5iCf',\n    poolWithdrawQueue: 'J9QSrJtasvLydL5dgbfv55eqBoADM9z91kVi5hpxk36Y',\n    poolTempLpTokenAccount: 'fGohyeWwAGqGdjQsHrE4c6GoTC1xHmyiAxJsgz2uZZ9',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '4qATPNrEGqE4yFJhXXWtppzJj5evmUaZ5LJspjL6TRoU',\n    serumBids: '84wPUTporXrCAceD753fXdiysry7WNkpiJH5HwhV5PwC',\n    serumAsks: 'BDcmopZQkPoxkk1BLAeh4zR3oWeDFUXTkrD2fJgh8xYu',\n    serumEventQueue: '4PiUj2EFVq8YNjMd8zWCUe7dV2prLEJCucapjzTeiShv',\n    serumCoinVaultAccount: '7dCAQbfwtDFtLwNgoB2WahCubPhFjZRGjfVYJajcF6qJ',\n    serumPcVaultAccount: '2DsQ33R4GqqBkmxPdFyBy7WYAzyWYm6BNPqKtENAKXuY',\n    serumVaultSigner: 'DDyP6zj3GTK3hTRyjPuaEL9yyqgfdstRMMKCkn939pkp',\n    official: true,\n  },\n  {\n    name: 'TULIP-RAY',\n    coin: { ...TOKENS.TULIP },\n    pc: { ...TOKENS.RAY },\n    lp: { ...LP_TOKENS['TULIP-RAY-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: 'Dm1Q15216uRARmQTbo6VfnyEGVzRvLTm4TfCWWX4MF3F',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '2x6JvLToztTWoiYAXFvLw9R8Ump3aDcuiRPBY9ZuzoRL',\n    ammTargetOrders: 'GZzyFjERxn9CqS5jXq1o2J3zmSNmhPMzn7U4aMJ82wL',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '96VnEN3nhvyb6hLSyP6BGsvSFdTJycQtTr574Kavrje8',\n    poolPcTokenAccount: 'FhnZ1j8C8d7aXecxQXEGpRycoH6uJ1Fpncj4Sm33J2iS',\n    poolWithdrawQueue: 'ELX79G4JU2YQrykozCvaRnhU2dBFmxNpSrJD3BoRoxfE',\n    poolTempLpTokenAccount: 'BagZFcJSYZzQn3iS37sPFDPiaKsfUwo8YD98XsEMKrsd',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'GXde1EjpxVV5fzhHJcZqdLmsA3zmaChGFstZMjWsgKW7',\n    serumBids: '2ty8Nq6brwkp74n6EtJkD8msgBnc3fRiavNGrE5d7yE3',\n    serumAsks: 'GzztpwBixtLW1vqZwtNZH7FvyGJcRmLvCZTffCW2ZoS2',\n    serumEventQueue: '4EgxxtAL5zsc1GCR243EU2vpbYpSvsawyfznVuRYbGHm',\n    serumCoinVaultAccount: 'JD1MfYD2SXiY1j6p3H6DifpG6RAe8cAtmNNLdRAdB1aT',\n    serumPcVaultAccount: 'UtkM2zbygo9tig18DQJDdRjHSKQiMf5uSuDTR2kf7ov',\n    serumVaultSigner: '3yRCDVhumspJgYJnNhyJaXTjRn5jiMqdbQ13rTyHHQgQ',\n    official: true,\n  },\n  {\n    name: 'SLRS-RAY',\n    coin: { ...TOKENS.SLRS },\n    pc: { ...TOKENS.RAY },\n    lp: { ...LP_TOKENS['SLRS-RAY-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: 'J3CoGcJqHquUdSgS7qAwdGbp3so4EpLX8eVDdGuauvi',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'FhtXN2pPZ8JMxGcLKSfRJtGsorSCXBKJyw3n7SsEc1aR',\n    ammTargetOrders: '2hdnnbsAu7pCf6nX5fDKPAdThLZmmWFQ7Kcq2cdShPGW',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '8QWf745UQeyMyM1qAAsCeb73jTvQvpm2diVgjNvHgbVX',\n    poolPcTokenAccount: '5TsxBaazJ7Zdx4x4Zd2zC7TY98EVSwGY7hnioS2omkx1',\n    poolWithdrawQueue: '6w9z1TGNkMU2qBHj5wzfaoqCLn7cPLKvPa23qeffsn9U',\n    poolTempLpTokenAccount: '39VEjufVUfdASteaQstBT25zQuLUha8ZrqYQfcDdJ47A',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'BkJVRQZ7PjfwevMKsyjjpGZ4j6sBu9j5QTUmKuTLZNrq',\n    serumBids: '8KouZyh14hmqurZZd1YRpwZ9pMVkWWHPnKTsETSYUuQQ',\n    serumAsks: 'NBpY6i9KbWx2V5sS3iP54KYYaHg8aVB6WB43ibVFUPo',\n    serumEventQueue: 'BMZfHb6CkiYwdgfVkAiiy4SWf6PHuRPFZyZWQNw1uDZx',\n    serumCoinVaultAccount: 'F71huJuAGZ8Q9xVxQueLQ8vDQD6Nq8MkJJsyM2S937sy',\n    serumPcVaultAccount: 'AbmAd3LgTowBANXnCNPLctxL7PReirJv5VcizvQ3mfah',\n    serumVaultSigner: 'E91Pu1z4q4Nr5mGSVcwyDzzbQC3LdDBzmFyLoXfXfg17',\n    official: true,\n  },\n  {\n    name: 'MER-RAY',\n    coin: { ...TOKENS.MER },\n    pc: { ...TOKENS.RAY },\n    lp: { ...LP_TOKENS['MER-RAY-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: 'BKLCqnuk4qc5iHWuJuewMxuvsNZXuTBSUyRT5ftnRb6H',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'qDqpetCPbbV2n8bgcy4urhDcKYkUNVoEn7xaCQSDzKv',\n    ammTargetOrders: '7KU9VPAZ8BMXA29gadnpssgtcoo4Tm1LYnc6Sn5HefcL',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'rmnAGzEwFnim88JLhqj66B86QLJL6cgm3tPDfGiKqZf',\n    poolPcTokenAccount: '4Lm4c4NqNyobLGULtHRtgoG4hbX7ytuGQFFcdip4jvBb',\n    poolWithdrawQueue: '9qwtjaEnTCHFf6GuTNxPf85hFzJVNJAAXJnWNFi4DmkX',\n    poolTempLpTokenAccount: 'H9uyyChWbaXCmNmQu3g4fqKF5xsa7YVZiMvGcsVrCcNn',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '75yk6hSTuX6n6PoPRxEbXapJbbXj4ynw3gKgub7vRdUf',\n    serumBids: '56zkA91Mad1HBJpiq8baMi9XhvvnTRNyd6m8hzeu5arh',\n    serumAsks: 'BgovKK4YP6ZgLUHsnXeUym1BH5BSjUxDuinTk6shPuzd',\n    serumEventQueue: '5NVyybcVeC8wqjgBj3ZxaX3RauWa2iqvdXkUYPJnistu',\n    serumCoinVaultAccount: 'EaFu94rusrGHjJWhuuUbKWW2AJizDGbpWJXJa4cxmLCP',\n    serumPcVaultAccount: 'ApZdrWpBu2uLkYAeVLneWnDhVrbR6TjhjbBR78kpg5r2',\n    serumVaultSigner: 'FCf82FB2TFAfH4YEDkBJtEeSkTK1EQFc27d1iSnvXMjk',\n    official: true,\n  },\n  {\n    name: 'MEDIA-RAY',\n    coin: { ...TOKENS.MEDIA },\n    pc: { ...TOKENS.RAY },\n    lp: { ...LP_TOKENS['MEDIA-RAY-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: '5ZPBHzMr19iQjBaDgFDYGAx2bxaQ3TzWmSS7zAGrHtQJ',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'HhAqmp3r8gaKo9P1ybaEXpwjq5MfmkfD6sRVD4EYs1tU',\n    ammTargetOrders: '3Dwo6BD7H2GQMyxoh5nXdmAK7dWfqPMUj3PcrJVqUuEp',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'FGskpuYNgqgHU4kHSibgqDkYCCZhxAtpQxZNqFaKfBDK',\n    poolPcTokenAccount: '7AiT1Re8Z8m8eLdy5HWRqWvx6pBZMytdWQ3wL8zCrSNp',\n    poolWithdrawQueue: '7reJT6i8tnFjf5vbvmRLw6ikZZxs6ZJ8bsEx4iCU22ot',\n    poolTempLpTokenAccount: '6LmFCURzNyEsNpF4fgMDyGPX1xoNAnm2oVcrYJJQGv9Y',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '2STXADodK1iZhGh54g3QNrq2Ap4TMwrAzV3Ja14UXut9',\n    serumBids: 'FKgbQ8Sdv9d44SMrtLMy58EmP3V59fvjse2UUQ8mNCxd',\n    serumAsks: 'CNcZwNeBA1QVL1Kzq3n166RSvUocLrKNs4nzTGXgVPuE',\n    serumEventQueue: 'FwHwAcBc54zm8XjtNxvaZG1t84shzYs68z3BAsKZdoE',\n    serumCoinVaultAccount: 'Ea7ECm7a3ECLnvJJMpZS9QrWbYnb8LkqVvWCXtmFVzWX',\n    serumPcVaultAccount: '54a18egZToocQ2yeCstCrtYZLAj3z82qfLG4Ed1quThb',\n    serumVaultSigner: 'F1XJJ2fkPiiYg1hWnDD6phMfDd8Sr8XwM6GKFeAZpTmr',\n    official: true,\n  },\n  {\n    name: 'SNY-RAY',\n    coin: { ...TOKENS.SNY },\n    pc: { ...TOKENS.RAY },\n    lp: { ...LP_TOKENS['SNY-RAY-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: 'Am9FpX73ctZ3HzohcRdyCCv84iT7nugevqLjY5yTSUQP',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'BFxUhqhrUWqMMazhef1dwDGXDo1LkQYV2YAgMfY81Evo',\n    ammTargetOrders: 'AKp1o6Nxe224Z8z4tFzyFKdCRoJDFpCen1xHyGXfyxKu',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'BjJMnG8c4zMHHZrvxP6ydKYGPkvXL5fF9gC38rtAu2Sx',\n    poolPcTokenAccount: '7dwpWj95qzPoBFCL7qzgoj9zhjmNNoDyncbyJEYiRfv7',\n    poolWithdrawQueue: '6g5sTJtMw1r9vx4RP5YkN3ZJpSssh7eH8QdVK986xLS2',\n    poolTempLpTokenAccount: '9tHcrwFdxNNzosaTkqrejHNXkr2HasKSwczimjBh2F8Z',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'HFAsygpAgFq3f9YQ932ptoEsEdBP2ELJSAK5eYAJrg4K',\n    serumBids: '6A6njiM3ByNbopETpEfbqsQci3NZecTzheg2YACVFXjc',\n    serumAsks: '8YvHQkUCB7HxCAu3muytUTbEXuDGmroVcnwbkXydzyEH',\n    serumEventQueue: '8syFMq2kMQV9beCJ9Y5T9TARgUii6aND5MDgDEAAGF73',\n    serumCoinVaultAccount: 'F1LcTLXQhFf9ymAHnxFNovSdZttZiVjRBoqQxyPAEipj',\n    serumPcVaultAccount: '64UEnruJCyjKUz8vdgZh3FwWwd53oSMY9Knd5dt5oVuK',\n    serumVaultSigner: '3enyrrweGCtkVDvaiAkSo2d2tF7B899tWHGSDfEGKtNs',\n    official: true,\n  },\n  {\n    name: 'LIKE-RAY',\n    coin: { ...TOKENS.LIKE },\n    pc: { ...TOKENS.RAY },\n    lp: { ...LP_TOKENS['LIKE-RAY-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: 'DGSnfcE1kw4uDC6jgrsZ3s5CMfsWKN7JNjDNasHdvKfq',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '4hgUQQevH5BauWE1CGGsfsDZbnCUrjd6YsRHB2gQjRUb',\n    ammTargetOrders: 'AD3TRMfAuTJXTdxsvJ3E9p6YK3GyNAGDSk4DX26mtmFC',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'HXmwydLeUB7JaLWhoPFkDLazQJwUuWCBi3M28p7WfwL7',\n    poolPcTokenAccount: 'BDbjkVrTezpirdkk24MfXprJrAi3WXazr4L6DHT5buXi',\n    poolWithdrawQueue: 'FFKXu8Q3kaQjnuZsicVyUQNNBwRRLFAT86WqDN8Yz2UV',\n    poolTempLpTokenAccount: 'FJguakQVbJmhjVGrzakNGQo5WCm5HG1Uk23X6x75WtZz',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'E4ohEJNB86RkKoveYtQZuDX1GzbxE2xrbdjJ7EddCc5T',\n    serumBids: '7vhuHsR1VxAGN4DD5EywRnW9nb7cX3VHcyrAKL1AAJ4v',\n    serumAsks: 'KXrJ3YVBvSGpCRETy3M2ronxM55PU8xBmQ2wCWVzhpY',\n    serumEventQueue: 'EMTQJ2v3dn4ndnV7UwZTiGTmSNPsVSCgdSN6w5QvCv2M',\n    serumCoinVaultAccount: 'EENxPU4YaXqTLBgd5jHBHigpH74MZNq9WxcLaKVsVSvq',\n    serumPcVaultAccount: '5c9DtqqCvj5du96cgUCSt2GZp8sreE7uV1Defmb615na',\n    serumVaultSigner: 'GWnLv7RwJhceF3YNqawMyEJqg6WgZc6XtT7Bi6prjkyC',\n    official: true,\n  },\n  {\n    name: 'COPE-RAY',\n    coin: { ...TOKENS.COPE },\n    pc: { ...TOKENS.RAY },\n    lp: { ...LP_TOKENS['COPE-RAY-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: '8hvVAhShYLPThcxrxwMNAWmgRCSjtxygj11EGHp2WHz8',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'HMwERnf6t8JTR8qnrQDDGxGL2PeBgpzzmQBJQgvXL3NS',\n    ammTargetOrders: '9y7m8jaURWcehBkMt6ebgQ92mqaJzZfxW51wBv6dtGR8',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'CVCDGPwGmxHyt1HwfJgCYbskEXPTvKxZfR6nkZexFQi5',\n    poolPcTokenAccount: 'DyHnyEW4MQ1J28JrqvY7AdMq6Djr3TjvczgsokQxj6YB',\n    poolWithdrawQueue: 'PPCMh17bDnu6sZKhipEfXf4ASK4sTpHkWrEX3SBNKRV',\n    poolTempLpTokenAccount: 'HReYRwCxu4qEjzkyjsdf67DyEUsWn1Tqf7eisvM3J7ro',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '6y9WTFJRYoqKXQQZftFxzLdnBYStvqrDmLwTFAUarudt',\n    serumBids: 'Afj14X2pCvbgVzWFAXRC4XBS3B71hZFXiTpVaFEohdCe',\n    serumAsks: 'GmZTkEYABdUej3QXXZSf8aeZ1UxLB2WaQ4dhVihKZPB8',\n    serumEventQueue: '3PveQeVGVfaa4LpTjhuRtm1Xe3Y9q7iW7YQeGJZYKtc4',\n    serumCoinVaultAccount: '9mQ22KCPTyFkJ4dp16Fhpd1pFrVmonS6SMa9L8nM6nLn',\n    serumPcVaultAccount: 'BKGiYU9So4XMYYuYiV2d68kcR2wwLogKbi3rmg8ci4xt',\n    serumVaultSigner: 'k5mhBL7yqEtAQs1WtUGdMT9eLLZkjambTd1Y4MyGouf',\n    official: true,\n  },\n  {\n    name: 'ETH-SOL',\n    coin: { ...TOKENS.ETH },\n    pc: { ...NATIVE_SOL },\n    lp: { ...LP_TOKENS['ETH-SOL-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: '9Hm8QX7ZhE9uB8L2arChmmagZZBtBmnzBbpfxzkQp85D',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'GwFM8qoBwusXVbcdfreKV9q86vqdudnVtvhYfJWgtgB',\n    ammTargetOrders: 'FQp9HzJKEFfiDSnV6qyQNoz8cEKsWHnV3yFqWrT1ThgN',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '59STNbqDpY1sj6m95jBPRiFwjtigtivHqQeJRUofWY2a',\n    poolPcTokenAccount: 'HXz1MFnu9ANWfCBesnrzMZMPoFbUyyqPDKT67sqgT4rk',\n    poolWithdrawQueue: 'GrLKNkFVyAdV1wXoBFYxMSSPJ3BNekggiZJERrPSnAE2',\n    poolTempLpTokenAccount: 'AtQQZJUBrXs8nBKCHy4L2WovuEEVf7QnVWwgRdVbnKd4',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'HkLEttvwk2b4QDAHzNcVtxsvBG35L1gmYY4pecF9LrFe',\n    serumBids: 'B38zSRMdSHYxnbsWCgY4GvSy4aRytkhqR5qVjaHsNXdA',\n    serumAsks: 'E4hWT9G64hLDMY7VrGXfJ5cuU8jRzJsUYAi8fqep6Sqy',\n    serumEventQueue: 'Bdy9encMZ7UpbEbdCgh5qDq8qQn4D31tFR45Bdas3f5y',\n    serumCoinVaultAccount: 'HMPki4uRhncFhMHpLAacHCDAU4QazjgFTsB8SQgh6bMY',\n    serumPcVaultAccount: 'BeWaZ85mTxmrYfS3J9E1jQQ5tKgDRA6qmTpksKnGeNps',\n    serumVaultSigner: 'GPNCigFBsjNhXu3cbmU1uxfbGVuxCA8bJN4bobwDjuTm',\n    official: true,\n  },\n  {\n    name: 'stSOL-USDC',\n    coin: { ...TOKENS.stSOL },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['stSOL-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: '6a1CsrpeZubDjEJE9s1CMVheB6HWM5d7m1cj2jkhyXhj',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '28NQqHxrqMYMQ67aWyn9AzZ1F16PYd4zvLpiiKnEZpsD',\n    ammTargetOrders: 'B8nmqinHQjyqAnMWNiqSzs1Jb8VbMpX5k9VUMnDp1gUA',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'DD6oh3HRCvMzqHkGeUW3za4pLgWNPJdV6aNYW3gVjXXi',\n    poolPcTokenAccount: '6KR4qkJN91LGko2gdizheri8LMtCwsJrhtsQt6QPwCi5',\n    poolWithdrawQueue: '5i9pTTk9x7r8fx8mJMBCEN85URVLAnkLzZXKyoutUJhU',\n    poolTempLpTokenAccount: 'GiuNbiBirwsBp9GuxGYgNUMMKGM6Qf6wqgnxbJFHTYFa',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '5F7LGsP1LPtaRV7vVKgxwNYX4Vf22xvuzyXjyar7jJqp',\n    serumBids: 'HjJSzUbis6VhBZLCbSFN1YtvWLLdxutb7WEvymCLrBJt',\n    serumAsks: '9e37wf6QUqe2s4J6UUNsuv6REQkwTxd47hXhDanm1adp',\n    serumEventQueue: 'CQY7LwdZJrfLRZcmEzUYp34XJbxhnxgF4UXmLKqJPLCk',\n    serumCoinVaultAccount: '4gqecEySZu6SEgCNhBJm7cEn2TFqCMsMNoiyski5vMTD',\n    serumPcVaultAccount: '6FketuhRzyTpevhgjz4fFgd5GL9fHeBeRsq9uJvu8h9m',\n    serumVaultSigner: 'x1vRSsrhXkSn7xzJfu9mYP2i19SPqG1gjyj3vUWhim1',\n    official: true,\n  },\n  {\n    name: 'GRAPE-USDC',\n    coin: { ...TOKENS.GRAPE },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['GRAPE-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n\n    ammId: 'vVXfY15WdPsCmLvbiP4hWWECPFeAvPTuPNq3Q4BXfhy',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'A7RFkvmDFN4Qev8XgGAqSr5W75sNhhtCY3ZcGHZiDDo1',\n    ammTargetOrders: 'HRiPQyFJfzF7WgC4g2cFbxuKgqn1vKVRjTCuZTNGim36',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'BKqBnj1TLpW4UEBbZn6aVoPLLBHDB6NTEL5nFNRqX7e7',\n    poolPcTokenAccount: 'AN7XxHrrcFL7629WySWVA2Tq9inczxkbE6YqgZ31rDnG',\n    poolWithdrawQueue: '29WgH1suwTnhL4JUwDMUQQpUzypet8PHEh8jQpZtiDBK',\n    poolTempLpTokenAccount: '3XCGBJpfHV5VYkz92nqzRtHahTiHXjYzVs4PargSpYwS',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '72aW3Sgp1hMTXUiCq8aJ39DX2Jr7sZgumAvdLrLuCMLe',\n    serumBids: 'F3PQsAGiFf8fSySjUGgP3NQdAGSnioAThncyfd26GKZ3',\n    serumAsks: '6KyB4XprAw7Mgp1YMMsxRGx8T59Y5Lcu6s1FcwFrXy3i',\n    serumEventQueue: 'Due4ZmGX2u7an9DPMvk3uX3sXYgngRatP1XmwzEgk1tT',\n    serumCoinVaultAccount: '8FMjC6yopBVYTXcYSGdFgoh6AFpwTdkJAGXxBeoV8xSq',\n    serumPcVaultAccount: '5vgxuCqMn7DUt6Le6EGhdMzZjPQrtD1x4TD9zGw3mPte',\n    serumVaultSigner: 'FCZkJzztVTx6qKVec25jA3m4XjeGBH1iukGdDqDBHPvG',\n    official: true,\n  },\n  {\n    name: 'LARIX-USDC',\n    coin: { ...TOKENS.LARIX },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['LARIX-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: 'A21ui9aYTSs3CbkscaY6irEMQx3Z59dLrRuZQTt2hJwQ',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '3eCx9tQqnPUUCgCwoF5pXJBBQSTHKsNtZ46YRzDxkMJf',\n    ammTargetOrders: 'rdoSiCqvxNdnzuZNUZnsXGQpwkB1jNPctiS194UtK7z',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'HUW3Nsvjad7jdexKu9PUbrq5G7XYykD9us25JnqxphTA',\n    poolPcTokenAccount: '4jBvRQSz5UDRwZH8vE6zqgqm1wpvALdNYAndteSQaSih',\n    poolWithdrawQueue: 'Dt8fAfftoVcFicC8uHgKpWtdJHA8e4xCPeoVRCfounDy',\n    poolTempLpTokenAccount: 'FQ3XFCQAEjK1U235pgaB9nRPU1fkQaLjKQiWYYNzB5Fr',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'DE6EjZoMrC5a3Pbdk8eCMGEY9deeeHECuGFmEuUpXWZm',\n    serumBids: '2ngvymBN8J3EmGsVyrPHhESbF8RoBBaLdA4HBAQBTcv9',\n    serumAsks: 'BZpcoVeBbBytjY6vRxoufiZYB3Te4iMxrpcZykvvdH6A',\n    serumEventQueue: '2sZhugKekfxcfYueUNWNsyHuaYmZ2rXsKACVQHMrgFqw',\n    serumCoinVaultAccount: 'JDEsHM4igV84vbH3DhZKvxSTHtswcNQqVHH9RDq1ySzB',\n    serumPcVaultAccount: 'GKU4WhnfYXKGeYxZ3bDuBDNrBGupAnnh1Qhn91eyTcu7',\n    serumVaultSigner: '4fGoqGi6jR78dU9TRdL5LvBUPjwnoUCBwxNjfFxcLaCw',\n    official: true,\n  },\n  {\n    name: 'RIN-USDC',\n    coin: { ...TOKENS.RIN },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['RIN-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: '7qZJTK5NatxQJRTxZvHi3gRu4cZZsKr8ZPzs7BA5JMTC',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '21yKxhKmJSvUWpL3doX5QwjXKXuzm3oxCG7k5Kima6hu',\n    ammTargetOrders: 'DaN1UZZ1ExraQi1Ghz8YS3pKaZG44PASbNiApysiRSRg',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '7NMCVudgyHKwVXA62Rv2cFrucQiNYE9b5MMvn4cVtCPW',\n    poolPcTokenAccount: '4d9Q2ekDzHqX51Nu9EZHZ96PhGjLSpVosa5Nci7BbwLe',\n    poolWithdrawQueue: 'DjHe1Sj7fouU5gJEiFz7C4Vd5TtvApEAxWr5EVhTuEps',\n    poolTempLpTokenAccount: 'EpKgUgtmTL425M9ENLqbjupm5funsPdhVr37hB8hJiuy',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '7gZNLDbWE73ueAoHuAeFoSu7JqmorwCLpNTBXHtYSFTa',\n    serumBids: '4mSS9iidPrVmMV9D7CNJia5zza2apmBLe3SmYW8SNPFR',\n    serumAsks: '7ovw7s6Ta1EQY4PsMu1MvnHfUNyEDADacmc4Rd5m34UD',\n    serumEventQueue: '2h7YS1nRQqc86jGKQLT29xnfBk9xVQrzXx9yiB21P5gK',\n    serumCoinVaultAccount: '5JCpfGbNdFhXWxMFR4xefBfLEd2qxYgovEggS6wxtmQe',\n    serumPcVaultAccount: 'FQfVJz7STBGMheiAAuZdF8ndyvbJhJZWJvpKhFKqSqYh',\n    serumVaultSigner: 'DFoStusQdrMbHms9Sce3tiRwSHAnaPLEtXCaFAnrhSy3',\n    official: true,\n  },\n  {\n    name: 'APEX-USDC',\n    coin: { ...TOKENS.APEX },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['APEX-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: '43UHp4TuwQ7BYsaULN1qfpktmg7GWs9GpR8TDb8ovu9c',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '5SrvK4rUdhRAekLxYnDb552x1DzQP4F42mydUcxMMNJD',\n    ammTargetOrders: '8W9P9rDx5a8C234jWLaUT7x4RGUGscXx2oCpS3eMfGUo',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '3tMBycaDewfj2trk1HP1ZSRb4YEJQs6k7nFAk4jTrRtN',\n    poolPcTokenAccount: 'DRDqm7rLuGnkh9RU1H2aaaJihRSU2Yg3WhropTWmcpWW',\n    poolWithdrawQueue: 'HA1wfa31ogn6eMY6174gNVf9LGjfjAhBdMaYtCkWBLhx',\n    poolTempLpTokenAccount: 'BPJ6HpvGBpQ5TUezSv3NzicANEq8Grma6QmPV1gXKnx8',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'GX26tyJyDxiFj5oaKvNB9npAHNgdoV9ZYHs5ijs5yG2U',\n    serumBids: '3N3tX1CLNCsnEffqhNBkiQxo34VJBPE7dbYUWsy4M6UD',\n    serumAsks: 'BLCo9efr528yH73zJU47FCDKzvsJAYFGdYkPgHb8yWxJ',\n    serumEventQueue: '3St3PhenFusFH1Guo7WQhNeNSfwDNpJQScDJ1EhRcLai',\n    serumCoinVaultAccount: 'CEGcRVzSbX5hGpsKsPX8zhTMm8N4xJSTH1VFEcWXRUmE',\n    serumPcVaultAccount: '7Q1TDhNbhpN9KN3vCRk7WhPi2EaETSCkXpsTdaDppvAx',\n    serumVaultSigner: 'GprUwgGyqBiEC5e6ivxgpUf7uhpS17n7WRiU7HDV3VGk',\n    official: true,\n  },\n  {\n    name: 'mSOL-RAY',\n    coin: { ...TOKENS.mSOL },\n    pc: { ...TOKENS.RAY },\n    lp: { ...LP_TOKENS['mSOL-RAY-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: '6gpZ9JkLoYvpA5cwdyPZFsDw6tkbPyyXM5FqRqHxMCny',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'HDsF9Mp9w3Pc8ZqQJw3NBvtC795NuWENPmTed1YVz5a3',\n    ammTargetOrders: '68g1uhKVVLFG1Aua1BKtCx3uiwPixue1qqbKDJAc32Uo',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'BusJVbHEkJeYRpHkqCrt85d1LALS1EVcKRjqRFZtBSty',\n    poolPcTokenAccount: 'GM1CjxKixFkKpakxx5Lg9u3zYjXAK2Gr2pzoy1G88Td5',\n    poolWithdrawQueue: 'GDZx8SZSYsRKc1WfWfbqR9JaTdBEwHwAMcJuYk2rBm74',\n    poolTempLpTokenAccount: 'EdLjP9p2AA7zKWwRPxKx8SKFCJ9awfSxnsPgURX6HuuJ',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'HVFpsSP4QsC8gFfsFWwYcdmvt3FepDRB6xdFK2pSQtMr',\n    serumBids: '7ZCucutxHFwJjfUmxD1Pae8vYg9HB1WQ6DhRkueNyJqF',\n    serumAsks: '6cM5rqTHhngGtifjK7pUwved3CdHKZgFj7nnP3LsP325',\n    serumEventQueue: 'Gucy2LXDFjWBZEFX4gyrqr6xEb2AWRf4VVgqX33ZXkWu',\n    serumCoinVaultAccount: 'GPksxJSxy5pEigdtSLBBZuRQEuGPJRT2ah3J1HwMeKm5',\n    serumPcVaultAccount: 'TACxu78UJHz2Vzg2HwGa2w9mvLw2mY5mL7Q3ho9W6J9',\n    serumVaultSigner: 'FD6U73ZW2YkD9R8cbDT6KSamVodYqWJBtS3ZcPeU7X29',\n    official: true,\n  },\n  {\n    name: 'MNDE-mSOL',\n    coin: { ...TOKENS.MNDE },\n    pc: { ...TOKENS.mSOL },\n    lp: { ...LP_TOKENS['MNDE-mSOL-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: '2kPA9XUuHUifcCYTnjSuN7ZrC3ma8EKPrtzUhC86zj3m',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'G3qeShDT2w3Y9XnJbk5TZsx1qbxkBLFmRsnNVLMnkNZb',\n    ammTargetOrders: 'DfMpzNeT4XHs2xtN74j5q94QfqPSJbng5BgGyyyChsVm',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'F1zwWuPfYLZfLykDYUqu43A74TUsv8mHuWL6BUrwVhL7',\n    poolPcTokenAccount: 'TuT7ftAgCQGsETei4Q4nMBwp2QLcDwKnixAEgFSBuao',\n    poolWithdrawQueue: '5FoP78mNninxP5VbSHN3LfsBBbqMNqiucANGQungGJLV',\n    poolTempLpTokenAccount: '2UbzfMCHjSERpMo9C3BAq5NUhVF9sx39ruJ1zu8Gf4Lu',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'AVxdeGgihchiKrhWne5xyUJj7bV2ohACkQFXMAtpMetx',\n    serumBids: '9YBjtad6ZxR7hxNXyTjRRPnPgS7geiBMHbBp4BqHsgV2',\n    serumAsks: '8UZpvreCr8bprUwstHMPb1pe5jQY82N9fJ1XLa3oKMXg',\n    serumEventQueue: '3eeXmsg8byQEC6Q18NE7MSgSbnAJkxz8KNPbW2zfKyfY',\n    serumCoinVaultAccount: 'aj1igzDQNRg18h9yFGvNqMPBfCGGWLDvKDp2NdYh92C',\n    serumPcVaultAccount: '3QjiyDAny7ZrwPohN8TecXL4jBwGWoSUe7hzTiX35Pza',\n    serumVaultSigner: '6Ysd8CE6KwC7KQYpPD9Ax8B77z3bWRnHt1SVrBM8AYC9',\n    official: true,\n  },\n  {\n    name: 'LARIX-RAY',\n    coin: { ...TOKENS.LARIX },\n    pc: { ...TOKENS.RAY },\n    lp: { ...LP_TOKENS['LARIX-RAY-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: 'EBqQdu9rGe6j3WGJQSyTvDjUMWcRd6uLcxSS4TbFT31t',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'MpAAS4U2fQnQRhTc1dAZEzLuQ9G4q6qRSUKwTJbYynJ',\n    ammTargetOrders: 'A1w44YMFKvVXFnXYTrz7EVfSgjHdZfE67g59HdhE1Yfh',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '6Sq11euWaw2Hpd6bXMZccJLZpPcVgs3nhV7P5396jE7e',\n    poolPcTokenAccount: '12iyJhJgr9AeJrL6q6jAN63zU3YgpPV98CR87c6JGoH4',\n    poolWithdrawQueue: 'BD3rgKtrnxdi45UpCHEMrtBtSA2NRcpP9zrah1CWN35a',\n    poolTempLpTokenAccount: 'Hc3pK8xppE3NxexxjAz4sxs3ZKwGjKfo7Lpth3FdGeQ6',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '5GH4F2Z9adqkEP8FtR4sJqvrVgBuUSrWoQAa7bVCdB44',\n    serumBids: '8JdtK95nRc3sHkDdFdtMWvJ9fXFY67LMo74RiHTh8f3a',\n    serumAsks: '99ScAmHwokD3Zs5assDwQHxunZe1Fz1N9GL9L1YUbvgr',\n    serumEventQueue: 'feXvc7XGRDETboXZiCMShmSKvsTnZtxrKoBkjJMCkNf',\n    serumCoinVaultAccount: '5uUh8pUvYzEjPtofPbappZBswKieWtLW7d32yuDNC6tw',\n    serumPcVaultAccount: '6eRt1RkQokKk5gmVmJ85gY42xirTMXQ1QDLXiDmbXs4b',\n    serumVaultSigner: '4pwBSrGHpVn1qXjzDC2Tm8nFG8mxR9y2qudFjAQ8cVQy',\n    official: true,\n  },\n  {\n    name: 'LIQ-USDC',\n    coin: { ...TOKENS.LIQ },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['LIQ-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: '33dWwj33J3NUzoTmkMAUq1VdXZL89qezxkdaHdN88vK2',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'H4zMatEWC1cgzpJd4Ckw29M7FD6h6gpVYMs8ATkVYsee',\n    ammTargetOrders: 'Gz9e8TUgQg2XwPvJs5CwijFyYgRL43LiB3CeWNTkkcsu',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'GGQU74M6ikrn8Cj7qywpmj6qdx2nKJLXGb34MbtPChoh',\n    poolPcTokenAccount: 'DHoRYvCnFfL53zpq6ZbdHj9wdbtYpK4ip9ieFkk1TyLw',\n    poolWithdrawQueue: '6gsvjkgSsxWtQRxYQ6J8uZPPhpgyoM6HwBJDpp2DzPon',\n    poolTempLpTokenAccount: '7y59c7yGzLJGS8HmERaZgnbkgpKeAaAKSML3Jnsz4r4f',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'D7p7PebNjpkH6VNHJhmiDFNmpz9XE7UaTv9RouxJMrwb',\n    serumBids: 'HNrzaujyABxtAcGyAqCJNcbfiJT4SLHGHuwBkVH4Zmiz',\n    serumAsks: 'Fm2BPhsTnozBGLhFzd5iKfoBjKRWDEoCGC78xBEJg5P',\n    serumEventQueue: 'CXhqNRvzdgrG8TRHjzUiymQFS7NNL8nGMyUvrQT3XPnu',\n    serumCoinVaultAccount: 'GuivK7Kd7aiJT9gTnhDskqUpbUD5Yur3f2NyygvwhA9B',\n    serumPcVaultAccount: 'ZKoVkBhZ9DJvuCMLvuPvZnhFTCQFAoF1BmVZZ1SqgPg',\n    serumVaultSigner: 'GfX8cR4p9BWr47RknXetRvmHdCnbd1qRhi59kyibq6V4',\n    official: true,\n  },\n  {\n    name: 'WAG-USDC',\n    coin: { ...TOKENS.WAG },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['WAG-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: 'FEFzBbbEK8yDigqyJPgJKMR5X1xZARC25QTCskvudjuK',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '8PAAfUWoVsSotWUGrL6CJCT2sApMpE2hn8DGWXq4y9Gs',\n    ammTargetOrders: 'BFtdbsu9Tq8mup8osWretDzTbWF71WuzRBHtm7G6PVpS',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'AZPsv6tY1HQjmeps2sMje5ysNtPKsfbtxj5Qw3jcya1a',\n    poolPcTokenAccount: '9D6JfNjyi6dXBYGErxmXmezkauPJdHW4KjMr2RGyD86Y',\n    poolWithdrawQueue: '6i1US4rvtqxPUTwqq6ax381zVgry44rX3oG7gD7VJAef',\n    poolTempLpTokenAccount: 'F6MrQn7qPTbDmp7ZGQkJ3ztB1uzBtVoc7iNcR6CyqCBM',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'BHqcTEDhCoZgvXcsSbwnTuzPdxv1HPs6Kz4AnPpNrGuq',\n    serumBids: 'F61FtHm4R4F1gszB3FuwDPvXeSPQwNmHTofoYCnrV4FY',\n    serumAsks: '5tYcHCW3ZZK4TMUSYiTi4dEE7iefyQ9dE17XDDAmDf92',\n    serumEventQueue: 'C5gcq3kmmXJ6ADWvH3Pc8bpiBQCL5cx4ypRwPg5xxFFx',\n    serumCoinVaultAccount: '6sF1TAJjfrNucAqaQFRrMD78z2RinTGeyo4KsXPbwiqh',\n    serumPcVaultAccount: '5iXoDYXGnMxEwL65XTJHWdr6Z2UD5qq47ZijW24VSSSQ',\n    serumVaultSigner: 'BuRLkxJffwznEsxXEqmXZJdLh4vQ1BRXc41sT6BtPV4X',\n    official: true,\n  },\n  {\n    name: 'ETH-mSOL',\n    coin: { ...TOKENS.ETH },\n    pc: { ...TOKENS.mSOL },\n    lp: { ...LP_TOKENS['ETH-mSOL-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: 'Ghj3v2qYbSp6XqmH4NV4KRu4Rrgqoh2Ra7L9jEdsbNzF',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'ABPcKmxjrGqSCQCvTBtjpRwLD7DJNmfhXsr6ADhjiLDZ',\n    ammTargetOrders: '7ATMf6E5StLSAtPYMoLTgZoAzmmXmii5CC6f5HYCjdKn',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '8jRAjkPkVLeBwA4BgTvS43irS8HPmBKXmqU6WonpdkxT',\n    poolPcTokenAccount: 'EiuYikutCLtq1WDsinnZfXREM1vchgH5ruRJTNDYHA7b',\n    poolWithdrawQueue: 'GVDZeTpSkseFrsooLNpeZzpzL3WkYo7cSVMLRHCKqbcQ',\n    poolTempLpTokenAccount: 'DZxRzxsztb5u3TFQaZd3ce8aNUbAikLAH79x2MMNdH86',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '3KLNtqA8H4Em36tifoTHNqTZM6wiwbprYkTDyVJbrBuu',\n    serumBids: 'GaGvreFFZ89SKsRMxn1MbDXwEvLKH7nd2EbykAEzvaRn',\n    serumAsks: 'CmktYGnATPGCus9rypT2q2GmEtXx6jv14Hz5v59iN9Em',\n    serumEventQueue: '12kgGbCNQjcKWnezanmCfPodE2kkoWTojgmGkt47HhCH',\n    serumCoinVaultAccount: 'DPdJZDKtTiaaqd52LPCvqyMPPNnJE3dSGAKVnZbsUSNm',\n    serumPcVaultAccount: '5fpAmGMAqtkueG5w2doNDeBncFUvh4zgBsYoCwpGBkMA',\n    serumVaultSigner: 'H6uYBVPb36jnUUxzGFWadNvuqMnCr12Sx6EbmebqwgfC',\n    official: true,\n  },\n  {\n    name: 'mSOL-USDT',\n    coin: { ...TOKENS.mSOL },\n    pc: { ...TOKENS.USDT },\n    lp: { ...LP_TOKENS['mSOL-USDT-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: 'BhuMVCzwFVZMSuc1kBbdcAnXwFg9p4HJp7A9ddwYjsaF',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '67xxC7oyzGFMVX8AaAHqcT3UWpPt4fMsHuoHrHvauhog',\n    ammTargetOrders: 'HrNUwbZF4NPRSdZ9hwD7EWV1cwQoJ9Yhu9Jf7ybXALpe',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'FaoMKkKzMDQaURce1VLewT6K38F6FQS5UQXD1mTXJ2Cb',\n    poolPcTokenAccount: 'GE8m3rHHejrNf4jE96n5gzMmLbxTfPPcmv9Ppaw24FZa',\n    poolWithdrawQueue: '4J45miDrQ5UdqpLzunHAYUqTg8A78CHKeBwa6a1TvFeF',\n    poolTempLpTokenAccount: '7WCk8sFJiUnpGbzHpFF9FsV5oJQgKs5iBERysFDyywnq',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'HxkQdUnrPdHwXP5T9kewEXs3ApgvbufuTfdw9v1nApFd',\n    serumBids: 'wNv6YZ31PX5hS42XCijwgd7SuMAu63aPvDWjMNTM2UP',\n    serumAsks: '7g28QYJPPNypyPvoAdir8WzPT2Me78u78jufiG7M3wym',\n    serumEventQueue: 'Ee9UPY9CH2jHx2LLW2daLyc9VS5Bnp4yTykw4aveeXLX',\n    serumCoinVaultAccount: 'FgVVda2Wnp2PuDpuh23B341qZx2cnArqVNSgxsU877Y',\n    serumPcVaultAccount: '2PtdrUGJd7aYoMKXpQ5d19r5Aa1z8dkRj6NNRCNGTE3D',\n    serumVaultSigner: 'QMhH9Mnv1jg8tLNanAvKf3ymbuzh7sDENyjCgiyn3Kk',\n    official: true,\n  },\n  {\n    name: 'BTC-mSOL',\n    coin: { ...TOKENS.BTC },\n    pc: { ...TOKENS.mSOL },\n    lp: { ...LP_TOKENS['BTC-mSOL-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: 'ynV2H2b7FcRBho2TvE25Zc4gDeuu2N45rUw9DuJYjJ9',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'FD7fCGepsCf3bBWF4EmPHuKCNuE9UmqqTHVsAsQSKv6b',\n    ammTargetOrders: 'HBpTcRToBmQKWTwCHgziFhoRkzzEdXEyAAqHoTLpyMXg',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'CXmwnKYkXebSbiFdNa2AVF34iRQPaf6jecyLWkEra6Dd',\n    poolPcTokenAccount: 'GtdKqFoUtHC8vH1rMZvW2eVqqFa3vRphqkNCviog4LAK',\n    poolWithdrawQueue: '3gctDYUqCgeinnxecj3iifkopbG88Ars14QhAf6UoCwY',\n    poolTempLpTokenAccount: '5TrJppACzkDAra1MUgZ1rCm4pvYZ2gVYWBAXPt7pMQDt',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'HvanEnuruBXBPJymSLr9EmsFUnZcbY97B7RBwZAmfcax',\n    serumBids: 'UPgp2Apw1weBoAVyozcc4WuAJrCJPf6ckSZa9psCe63',\n    serumAsks: 'HQyMusq5noGcSz2VoPqvztZyEAy8K1Mx6F37bN5ppH35',\n    serumEventQueue: 'D4bcCmeFca5rF8KC1JDJkJTiRLLBmoQAdNS2x7zTaqF4',\n    serumCoinVaultAccount: 'DxXBH5NCTENPh6zsfMstyHhoBtdaVnYSzHgaa6GyVbfY',\n    serumPcVaultAccount: '9XqpiagW7bnAbMwpc85M2hfrcqxtvfgZucyrYPAPkcvq',\n    serumVaultSigner: 'mZrDXx1TQizPd9CzToBx8FqqrPCPdePHy6ttgBdNPuB',\n    official: true,\n  },\n  {\n    name: 'SLIM-SOL',\n    coin: { ...TOKENS.SLIM },\n    pc: { ...NATIVE_SOL },\n    lp: { ...LP_TOKENS['SLIM-SOL-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: '8idN93ZBpdtMp4672aS4GGMDy7LdVWCCXH7FKFdMw9P4',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'E9t69DajWSrPC2acSjPb2EnLhFjXaDzcWsfZkEu5i26i',\n    ammTargetOrders: 'GtE4pXKu4Ps1oFP6Y2E7mu2RyqCJxoSqE9Cz3qwQRLRD',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '6FoSD24CM2MyadTwVUqgZQ17kXozfMa3DfusbnuqYduy',\n    poolPcTokenAccount: 'EDL73XTnmr56U4ohW5uXXh6LJwsQQdoRLragMYEWLGPn',\n    poolWithdrawQueue: '8LEzGejBbTP7q5mNKru5vjK1HMp9XriEsVv4SAvKTSy9',\n    poolTempLpTokenAccount: '3FXv4555tehX7tBwbTL1MkKxLm9Q28dJFvh32wnFoEvg',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'GekRdc4eD9qnfPTjUMK5NdQDho8D9ByGrtnqhMNCTm36',\n    serumBids: 'GXUZncBwk2iGYNbUtyCYon1CWu8tpTGqnyjYGZZQLuf9',\n    serumAsks: '26fwQXsb5Gh5uPAwLCwBvHj6nqtXhL3DpPwYdtWKFcSo',\n    serumEventQueue: '6FKmUUXSu11nnYwbWRpwQQrgLHScxDxyDdBD9MGbs23G',\n    serumCoinVaultAccount: 'NwNLSyB41djEmYzmqWVbia4p3kVZuqjFpdC7c72ZAZC',\n    serumPcVaultAccount: '87FwRiq7Ct7Tvc2KUVPGvssbKwPAM7BLTzV9ixS3g6Y9',\n    serumVaultSigner: 'Fv9vYZoH5t9bGnyLrV7ifGt74vz4qvtsAUyZbLXX7qoz',\n    official: true,\n  },\n  {\n    name: 'AURY-USDC',\n    coin: { ...TOKENS.AURY },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['AURY-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: 'Ek8uoHjADzbNk2yr2HysybwFk1h2j9XXDsWAjAJN38n1',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'BnGTcze1GXtCMkFPceWfUC4HPRXjJo5dGb2bmevHfgL3',\n    ammTargetOrders: '2h5kDQddqUTUaAjFv3FHNMtvVVCYo1PY6BxkxtkhVzkH',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'JBvjQsg5YasDvmSKnetHZzUesa1Aucp6gXwGtPhjefGY',\n    poolPcTokenAccount: '2auTq31drUwTmMKsJcD2KqZnKgiTRTN1XDKS9CQ7wzGe',\n    poolWithdrawQueue: 'BngHmGEaQbDF9LacaSs1hQRFMVmkvEqFpo5h5gkiWQRB',\n    poolTempLpTokenAccount: '5wdZqTKhpnFwWSC3mxEH4QHd9o8Jwt7swqB2QPBJb5yf',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '461R7gK9GK1kLUXQbHgaW9L6PESQFSLGxKXahvcHEJwD',\n    serumBids: 'B8yZ7jW9UAKLTtPTGzfobqfn9J4obmwy8BtdX17joKVt',\n    serumAsks: '8cytrpCzPUiFub2Zjxhz4VN6sz5UycVYWPEpyVteARXh',\n    serumEventQueue: 'Dg1CmXWtyHwoi71GVgpp9N4u7wQtcmuGcXbh9Bgpd9wb',\n    serumCoinVaultAccount: 'HbYw9LSKVepB9mYwbTeDy6oAj5TPrw3GqAFtKWm99jNd',\n    serumPcVaultAccount: '6DbF2jRhrNgeZnHGR6c1UfGmQxk4qtBueox56huK8Etr',\n    serumVaultSigner: '639H2jxUJRbvNiCQnkypf4Nvz72bSdbexchvcCg2jHYR',\n    official: true,\n  },\n  {\n    name: 'PRT-SOL',\n    coin: { ...TOKENS.PRT },\n    pc: { ...NATIVE_SOL },\n    lp: { ...LP_TOKENS['PRT-SOL-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: '7rVAbPFzqaBmydukTDFAuBiuyBrTVhpa5LpfDRrjX9mr',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '7nsGyAGAawvpVF2JQRKLJ9PVwE64Xc2CzhbTukJdZ4TY',\n    ammTargetOrders: 'DqR8zK676oafdCMAtRm6Jc5d8ADQtoiUKnQb6DkTnisE',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'Bh8KFmkkXZQzNgQ9qpjegfWQjNupLugtoNDZSacawGbb',\n    poolPcTokenAccount: 'ArBXA3NvfSmSDq4hhR17qyKpwkKvGvgnBiZC4K36eMvz',\n    poolWithdrawQueue: '4kj6urHjHG3DD8eEdSrMvKQ3P1sL5wvaTakHoZqaTLLx',\n    poolTempLpTokenAccount: '6u5JagDxsfVwGe543NKAviCwRUEXV9XCXEBXFFcUPcoT',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'H7ZmXKqEx1T8CTM4EMyqR5zyz4e4vUpWTTbCmYmzxmeW',\n    serumBids: '5Yfr8HHzV8FHWBiCDCh5U7bUNbnaUL4UKMGasaveAXQo',\n    serumAsks: 'A2gckowJzAv3P2fuYtMTQbEvVCpKZa6EbjwRsBzzeLQj',\n    serumEventQueue: '2hYscTLaWWWELYNsHmYqK9XK8TnbGF2fn2cSqAvVrwrd',\n    serumCoinVaultAccount: '4Zm3aQqQHJFb7Q4oQotfxUFBcf9FVP6qvt2pkJA35Ymn',\n    serumPcVaultAccount: 'B34rGhNUNxnSfxodkUoqYC3kGMdF4BjFHV2rQZAzQPMF',\n    serumVaultSigner: '9ZGDGCN9BHiqEy44JAd1ExaAiRoh9HWou8nw44MbhnNX',\n    official: true,\n  },\n  {\n    name: 'LIQ-RAY',\n    coin: { ...TOKENS.LIQ },\n    pc: { ...TOKENS.RAY },\n    lp: { ...LP_TOKENS['LIQ-RAY-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: 'HuMDhYhW1BmBjXoJZBdjqaqoD3ehQeCUMbDSiZsaXSDU',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '7wdwaVqX54dpmHsAv1p1j6CNX384ngTdPw6hhyrqnSkm',\n    ammTargetOrders: '35KVohngiK6EuhFVSycgVkedgmxGjyebjHBEWnTmZSaJ',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'DNfbb7s6zD1kWpGHCCEv6BrLYUFdvoqbLE7pkRpWEAD3',\n    poolPcTokenAccount: '6tPg3nmHnvN8HfCfLC9EEpB1dvV3sB5XtwaQeqpwaqzY',\n    poolWithdrawQueue: '2bQ5JURC12KdxzigEzUTC15wMvFb8Lf6UQWDMTr4by3f',\n    poolTempLpTokenAccount: 'Exj93mjyV378SD3CTDAyh5V5zEf9pSPU12yKJtp3hjgQ',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'FL8yPAyVTepV5YfzDfJvNu6fGL7Rcv5v653LdZ6h4Bsu',\n    serumBids: 'BkiWgktHinZLpc6ochQGUujh4aLQL7S9ZvhnRY64Z5Je',\n    serumAsks: 'EcHLYi56KcNKsiUiHb7mXrT29YJhArdizegkjmVJ6LeJ',\n    serumEventQueue: '9U3PefXaFHYiTaCz2p4SsW6X5RK9Kq7FxUeB3PTwpG1a',\n    serumCoinVaultAccount: '3VB8kEgcpuFzSf6Nbe3Nm2BiUNGxmJpZGbYSoqnDruRp',\n    serumPcVaultAccount: 'DYRShjB8necZU1Qx9FVPDLSjuu3zEkbHgd6BEkMZPS23',\n    serumVaultSigner: 'CEhFiD6xAgRptnuyUJg3iAkN7Zi65ZNoyi9uBPt5V8Y',\n    official: true,\n  },\n  {\n    name: 'SYP-SOL',\n    coin: { ...TOKENS.SYP },\n    pc: { ...NATIVE_SOL },\n    lp: { ...LP_TOKENS['SYP-SOL-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: 'D95EzH4ZsGLikvYzp7kmz1RM1xNMo1MXXiXaedQesA2m',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '34Ggyj2dNyQUWDaGUaMKVvyQDoTHEupD4o2m1mPFaPVf',\n    ammTargetOrders: 'DAadSXEyP5dZPiYFKcEkj6i7rY5TQtHucXPvum53uAHY',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '4iuHfu5rPzdsnjBEPAdGvnK3brF3JiqpwtXerko1o6U4',\n    poolPcTokenAccount: '5FvQrUmnCN4o1HBsA3XqbCDPypvyroJ9MBSYH5goxFGC',\n    poolWithdrawQueue: '3sXFB5JFTi38cVbJaAf6b95GJp8UqgbBX5YMcPg5sBsH',\n    poolTempLpTokenAccount: 'CdQQS6QJLR6it5bNfmpiU6uQod6Z71scF5ZuGTzrwdut',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '4ksjTQDc2rV3d1ZHdPxmi5s6TRc3j4aa7rAUKiY7nneh',\n    serumBids: 'BgzeMbya7kgtaV9zNhF4L6oABQSrErg9ZiDFDWeUqpv1',\n    serumAsks: '8L6HcYpMr4TqaEksbUy7GkGBUvPv8UARCVH4nhbrfZFt',\n    serumEventQueue: 'J99229xgQtGXN7jvWFh6wB73kT44X269GEtjaykkcuf5',\n    serumCoinVaultAccount: 'GkM6SiD2GFKTuqJraMuWbPVYcvEvzPqjndsKq3GfYEX4',\n    serumPcVaultAccount: 'FF6EXqFSZzUvyuj6uYRWxTFDAhd5jcz57PL69BAMPutd',\n    serumVaultSigner: 'BmNvsW45ZLYrnSZpFHFL3xmTyWsJ1X6jof3XoCkEry6H',\n    official: true,\n  },\n  {\n    name: 'SYP-RAY',\n    coin: { ...TOKENS.SYP },\n    pc: { ...TOKENS.RAY },\n    lp: { ...LP_TOKENS['SYP-RAY-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: '3hhSfFhbk7Kd8XrRYKCcGAyUVYRaW9MLhcqAaU9kx6SA',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '9WAbiCgjiYeV9aBh8jo2eX8ujAhfEZdZPxPeBtEemz9t',\n    ammTargetOrders: '43FmUjW5ZLQ9VeZA7B5gCqJ5fmvJgXHn2zfistpxJt8t',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'FPPZjSgvMJ9EkKJpsTFNnGNJYAbiteskZQGHieVh9Mfh',\n    poolPcTokenAccount: 'FEB62fNjbKaPPc9YBnuA2SMacyQhqQw5XTy5d5kTS1oW',\n    poolWithdrawQueue: '6MMAE9t29jmuckFgmYojPQk5pJB4TTHJxAmTvWfHAkBr',\n    poolTempLpTokenAccount: 'EbNabXhGffsMVn2QyaRVgaR9M1M2NM9AZWCCKMLuZSRT',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '5s966j9dDcs6c25MZjUZJUCvpABpC4gXqf9pktwfzhw1',\n    serumBids: '6ESsneZ4fQgPE6MUKsP6Z8kzAZk9RGeVg3uffVqhuJXb',\n    serumAsks: 'F2SRQpGR8z4gQQxJ1QVdrzZr7gowTLmfXanTsWmBbzTf',\n    serumEventQueue: '6WpyfUCGwDBMgMng5kqsYeGHq4cmFP7X5zyXSs6ZZJ93',\n    serumCoinVaultAccount: '5reSWxhb7uugMzxQXPEfYY7zaveCmHro7juk3VzQJx9T',\n    serumPcVaultAccount: '4S5XZnwyd7kB1LnY55rJmXjZHty3FGAxyqQaNHphqfzC',\n    serumVaultSigner: 'BBaMkoum9hY53mCXAGqMcP2hMSzEyS7Nr12RLY395eCL',\n    official: true,\n  },\n  {\n    name: 'SYP-USDC',\n    coin: { ...TOKENS.SYP },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['SYP-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: '2Tv6eMih3iqxHrLAWn372Nba4A8FT8AxFSbowBmmTuAd',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'GNHftHYD7WRG5HYdyWjd9KsxjUgUALrLcSG2AZvv5ahU',\n    ammTargetOrders: '89weJGn5qci3QF1tPQC3P4B3xMbKqdgeXSHfiNxKvKCd',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '9ZQNgn9zAc9oLKST5yW9PNjCCqSfJVwnFpfgZnd88Xn1',\n    poolPcTokenAccount: 'HLtqBqwgdbGdFfd5UZtKkvrdxLLcpaMnAJ5aZAzDjFdT',\n    poolWithdrawQueue: '4LybXzk5xxLPRsz8evCNtNXLc6Mydb5HCWyitHeDvCKT',\n    poolTempLpTokenAccount: '5WKtEZL7Zst2QBKA5E9YCbKMPxTZNrErGB8TyGs3z9oD',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '9cuBrXXSH9Uw51JB9odLqEyeF5RQSeRpcfXbEW2L8X6X',\n    serumBids: 'EmqbfgZFSQxAeJRWKrrBVST4oLsq8aMt4WtcufPARcd7',\n    serumAsks: 'GZqx3xX1PjNpmw2qDGhiUSa6PsM5tWYY7cMmKzYFCCLD',\n    serumEventQueue: '8w8JzuqcRUm9QAC3YWJm2mBCVjWDLXh8b7ktSouJKMUd',\n    serumCoinVaultAccount: '8DGcP5Z8M878mguFLohaK9jFrrShDCREF3qa7JhMfgib',\n    serumPcVaultAccount: 'CLS4WFje2PbV3MmV4v7CGxu3bNFqx2sYewq95rzGR8t8',\n    serumVaultSigner: 'FBLtcfAXmm5PpJLLr95L5cjfgbpJiGHsWdBXDpC2TBQ2',\n    official: true,\n  },\n  {\n    name: 'FAB-USDC',\n    coin: { ...TOKENS.FAB },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['FAB-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: '7eM9KWYiJmNfDfeztMoEZE1KPyWD54LRxM9GmRY9ske6',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '4JJD9FBTigYALJgmJ5NN7uSAdm4UF3MqcfQG6zaDcZSj',\n    ammTargetOrders: 'PknPGRn3K3HPzjyaKjSAqDWqXm65TRzQzsSjG6dibPn',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'Dz7UPsYuDnCPfomPDS1qzhGXqerPhoy7PYScv99JDefh',\n    poolPcTokenAccount: '3Xo2iExmhn4X3yrKmwsRTMMTg2mXdWuEQD2BVweNyCCr',\n    poolWithdrawQueue: '4bneChpQF8xrjB7TAYZvBm5xgxncZgn4skZxKV4r3ByM',\n    poolTempLpTokenAccount: '7npJaUpN2TFcMStrQKVPjEcKD9Ju5wpyJHcnVW54Z1Ye',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'Cud48DK2qoxsWNzQeTL5D8sAiHsGwG8Ev1VMNcYLayxt',\n    serumBids: 'FWSRaqAPmbwepdz49MVvvioTLWTXW18XCtEvfSv3ytBV',\n    serumAsks: '21CBXgZHF58nfFJVts6rAphuPNsbj6JY8CacokMdhpNB',\n    serumEventQueue: '6qdexKV3nXYtkZkh49fSFrzEStdmaGj8HttNWSG2ZViT',\n    serumCoinVaultAccount: '71E7dr2Rodeneu6wPn8oofCpLQJjfDHr6r76HGCDv491',\n    serumPcVaultAccount: '8gU7HWyk3X41ebNkMH44JhEWq1nzRGdWwGgZaJfr4zGR',\n    serumVaultSigner: 'GuLwNbHHLDyNtYF5qv16boMKvdek5AFK8v7PZ2hMgvdv',\n    official: true,\n  },\n  {\n    name: 'WOOF-RAY',\n    coin: { ...TOKENS.WOOF },\n    pc: { ...TOKENS.RAY },\n    lp: { ...LP_TOKENS['WOOF-RAY-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: '3HYhQC6ne6SAPVT5sPTKawRUxv9ZpYyLuk1ifrw8baov',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'Bo8BrjEpfu7pJVH32FTE6rJr2UBvhPp59zfA2mWT581U',\n    ammTargetOrders: '4JZBoQLkpgPzdwLBbQeZ6PQj11vtLomuRtSFE4Xkc3CJ',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '5cjmkkBTx5QecZh78iwwVRUobE25fyjJZQcfEXdzWo37',\n    poolPcTokenAccount: 'DPLFfchYfphyS86uLRx2gqHTTy8urWBGt1yYC2a6xUHX',\n    poolWithdrawQueue: '7UYg1Gh4tipvNdYYC4rqqLapcs9szENKkrgrEKmDqtJu',\n    poolTempLpTokenAccount: 'DQAeQPjQqB733mJfJbt4wHfA2fHVM6bVgaUGNjCerJjE',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'EfckmBgVkKxBAqPgzLNni6mW1gbHaRKiJSJ3KgWihZ7V',\n    serumBids: '4WfAKMzXH2Gbcx6tafVy2CwpKDbqFqtx5CbAr877ivx5',\n    serumAsks: 'H8WLtDAhcJZLW3J1g2sNPhiqy7PG75GkRZU93EB5xwwj',\n    serumEventQueue: '7n1qHSyCH7btGmiexi1tj5tzsJgRBywg1a1Xvov3GVoq',\n    serumCoinVaultAccount: 'CJVUSSsd4AnqNK7pvDb3XWWx6v34NELyy8JdQoKxnSdW',\n    serumPcVaultAccount: '4YFPXdvk2HYwAJMPFCw7EU2h6CUTeWzvsC5DnrrTGF3Z',\n    serumVaultSigner: '78dHXV2JdqQyFTs1tprMH359be7WWMYsmsSAsFctBoZe',\n    official: true,\n  },\n  {\n    name: 'WOOF-USDC',\n    coin: { ...TOKENS.WOOF },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['WOOF-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: 'EZRHhpvAP4zEX1wZtTQcf6NP4FLWjs9c6tMRBqfrXgFD',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'GBGxwY1eqBJcTVAjwFDpLGQGCv5eoQTciudT9ttFybqZ',\n    ammTargetOrders: 'EdQNfUu9EAX6aT7ixLV9zYBRLhArCgrxPAQPr3CBdFK7',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '6LP3CwLwA7StkyMQ9NpKUqLS9ipMmUjPrKhQ8V9w1BoH',\n    poolPcTokenAccount: '6HXfUDRXJkywFYvrKVgZMhnhvfqiU8T9pVYhJzyHEcmS',\n    poolWithdrawQueue: 'EhgYsvA9J31J64LREuzTtt7QYhMBUX3EEAoCSZ6BwQjk',\n    poolTempLpTokenAccount: '7E1e3kEWAgaerDErppzSJX34ukHtUQryiM7sAa7zhYPa',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'CwK9brJ43MR4BJz2dwnDM7EXCNyHhGqCJDrAdsEts8n5',\n    serumBids: 'D5S8oWsPjytRq6uXB9H7fHxzFTpcmvULwYbuhAeAKNu4',\n    serumAsks: '3PZAPrwUkhTqjaB7sDHLEj669J6hQXzPFTrnv7tgcgZT',\n    serumEventQueue: '4V7fTH8x6qYz4GyvEVbzq1yLoGcpoByo6nCrsiA1HUUv',\n    serumCoinVaultAccount: '2VcGBzs54DWCVtAQsw8fx1VVdrxEvX7bJz3AD4j8EBHX',\n    serumPcVaultAccount: '3rfTMxRqmtoVvVsZXnvf2ifpFweeKSWxuFkYtyQnN9KG',\n    serumVaultSigner: 'BUwcHs7HSHMexNjrEuSaP3TY5xdqBo87384VmWMV9BQF',\n    official: true,\n  },\n  {\n    name: 'SLND-USDC',\n    coin: { ...TOKENS.SLND },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['SLND-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: 'GRM4jGMtx64sEocBFz6ZgdogF2fyTWiixht8thZoHjkK',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'GLgrNWTUfX4n165WaMG4dELg4e7E7RBNWMzBFvYKbcbs',\n    ammTargetOrders: 'FCa9xL1TeJrDvhxyuc9J3o4KNtXBZREC3Kxr5sYVZNtQ',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'DCHrCqguY9Jtn8xutdVPAhCbLayYaksPSwqg5aZzFXVM',\n    poolPcTokenAccount: 'BxzizWAWk91TKbMAZM4F9zhUM5omdtdhjQQSdEM5sEXA',\n    poolWithdrawQueue: '2TYYWf8RKyu5YoH5bwxiJnCyHdAeWUMadBDMotuNWoR8',\n    poolTempLpTokenAccount: '53KFE2hkixwSRMj8Co9dZfG8uj2PXmfm1pBBUaqCocsA',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'F9y9NM83kBMzBmMvNT18mkcFuNAPhNRhx7pnz9EDWwfv',\n    serumBids: 'EcwoMdYezDRLVNFzSzf7jKEuUe32KHp5ddU7RZWdAnWh',\n    serumAsks: '4iLAK21RWx2XRyXzHhhuoj7hhjVFcrUiMqMSRGandobn',\n    serumEventQueue: '8so7uCu3u53PUWU8UZSTJG1b9agvQtQms9gDDsynuXr1',\n    serumCoinVaultAccount: '5JDR5i3wqrLxoZfaytoW14hti9pxVEouRy5pUtyhisYD',\n    serumPcVaultAccount: '6ktrwB3FevRNdNHXW7n6ufk2h1jwKnWFtjhHgNwYaxJb',\n    serumVaultSigner: 'HP7nqJpWXBS91fRncBCawqidJhxqNwKbS84Ni3HBTiGG',\n    official: true,\n  },\n  {\n    name: 'FRKT-SOL',\n    coin: { ...TOKENS.FRKT },\n    pc: { ...NATIVE_SOL },\n    lp: { ...LP_TOKENS['FRKT-SOL-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: 'H3dhkXcC5MRN7VRXNbWVSvogH8mUQPzpn8PYQL7HfBVg',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '7yHu2fwMQDA7vx5RJMX1TyzDE2cJx6u1v4abTgfEP8rd',\n    ammTargetOrders: 'BXjSVXdMUYM3CpAs97SE5e9YnxC2NLqaT6tzwNiJNi6r',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'EAz41ABjVhXLWFXcVdC6WtYBjnVqBZQw7XxXBd8J8KMp',\n    poolPcTokenAccount: '6gBKhNH2U1Qrxg73Eo6BMuXLoW2H4DML18AnALSrbrXr',\n    poolWithdrawQueue: '9Pczi311AjZRXukgUws9QVPYBswXmMETZTM4TFcjqd4s',\n    poolTempLpTokenAccount: 'BNRZ1W1QCw9v6LNgor1fU91X49WyPUnTWEUJ6H7HVefj',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'FE5nRChviHFXnUDPRpPwHcPoQSxXwjAB5gdPFJLweEYK',\n    serumBids: 'F4D6Qe2FcVSLDGByxCQoMeCdaLQF3Z7vuWnrXoEW3xss',\n    serumAsks: '9oPEuJtJQTaFWqhkA9omNzKoz8BLEFmGfFyPdVYxkk8B',\n    serumEventQueue: '6Bb5UtTAu6VBJ71dh8vGji6JBRsajRGKXaxhtRkqwy7R',\n    serumCoinVaultAccount: 'EgZKQ4zMUiNNXFzTJ89eyL4gjfF2yCrH1seQHTnwihAc',\n    serumPcVaultAccount: 'FCnpLA4Xzo4GKctHwMydTx81NRgbAxsZTreT9zHAEV8d',\n    serumVaultSigner: '3x6rbV78zDotLTfat9tXpWgCzqKYBJKEzaDEWStcumud',\n    official: true,\n  },\n  {\n    name: 'weWETH-SOL',\n    coin: { ...TOKENS.weWETH },\n    pc: { ...NATIVE_SOL },\n    lp: { ...LP_TOKENS['weWETH-SOL-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: '4yrHms7ekgTBgJg77zJ33TsWrraqHsCXDtuSZqUsuGHb',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'FBU5FSjYeEZTbbLAjPCfkcDKJpAKtHVQUwL6zDgnNGRF',\n    ammTargetOrders: '2KjKkci5zpGa6orKCu3ov4eFSB2aLR2ZdAYvVnaJxJjd',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '5ushog8nHpHmYVJVfEs3NXqPJpne21sVZNuK3vqm8Gdg',\n    poolPcTokenAccount: 'CWGyCCMC7xmWJZgAynhfAG7vSdYoJcmh27FMwVPsGuq5',\n    poolWithdrawQueue: 'BzTWSVgYaqHvUcuPZKD4yKTDR2xCDtZFb1bqkwfoPHZJ',\n    poolTempLpTokenAccount: 'Dfvj9bmde56ZWgxDsrADywZhctejEG2WTbnYa7P5SAhk',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '7gtMZphDnZre32WfedWnDLhYYWJ2av1CCn1RES5g8QUf',\n    serumBids: '4Z6iBaVyCusvALJShz39yDY98jwPn6T1SsKaiLE3k5du',\n    serumAsks: 'J6ULjQv2xpifRQQAKNYAtEGapgAsAA7vNhhRU57Law6m',\n    serumEventQueue: '4tMSdiQWSGJbaz4UCdHQpqczxCJfLvBNWtskGbAnFgBz',\n    serumCoinVaultAccount: '5F5W8nkQpXnb5ewS2GiUCuWAiamZpzGEMBciwaZ72frr',\n    serumPcVaultAccount: 'CdWhLReMv1A4BJQkogvMwxVVop6agSW22YzQBzKUCS1y',\n    serumVaultSigner: 'GRiN6BiHeaa2wrFEpqzR397d6RqefCSRhnQVsVscwT3r',\n    official: true,\n  },\n  {\n    name: 'weWETH-USDC',\n    coin: { ...TOKENS.weWETH },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['weWETH-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: 'EoNrn8iUhwgJySD1pHu8Qxm5gSQqLK3za4m8xzD2RuEb',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '6iwDsRGaQucEcfXX8TgDW1eyTfxLAGrypxdMJ5uqoYcp',\n    ammTargetOrders: 'EGZL5PtEnSHrNmeoQF64wXG6b5oqiTArDvAQuSRyomX5',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'DVWRhoXKCoRbvC5QUeTECRNyUSU1gwUM48dBMDSZ88U',\n    poolPcTokenAccount: 'HftKFJJcUTu6xYcS75cDkm3y8HEkGgutcbGsdREDWdMr',\n    poolWithdrawQueue: 'A443y1KRAvKdK8yLJ9H29mgwuY56FAq1KvJmkcPCn47B',\n    poolTempLpTokenAccount: 'jYvXX2z6USGtBSgJiPYWM9XZTBoiHJGPRGeQ9AUX98T',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '8Gmi2HhZmwQPVdCwzS7CM66MGstMXPcTVHA7jF19cLZz',\n    serumBids: '3nXzH1gYKM1FKdSLHM7GCRG76mhKwyDjwinJxAg8jjx6',\n    serumAsks: 'b3L5dvehk48X4mDoKzZUZKA4nXGpPAMFkYxHZmsZ98n',\n    serumEventQueue: '3z4QQPFdgNSxazqEAzmZD5C5tJWepczimVqWak2ZPY8v',\n    serumCoinVaultAccount: '8cCoWNtgCL7pMapGZ6XQ6NSyD1KC9cosUEs4QgeVq49d',\n    serumPcVaultAccount: 'C7KrymKrLWhCsSjFaUquXU3SYRmgYLRmMjQ4dyQeFiGE',\n    serumVaultSigner: 'FG3z1H2BBsf5ekEAxSc1K6DERuAuiXpSdUGkYecQrP5v',\n    official: true,\n  },\n  {\n    name: 'weUNI-USDC',\n    coin: { ...TOKENS.weUNI },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['weUNI-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: '8J5fa8WBGaDSv8AUpgtqdh9HM5AZuSf2ijvSkKoaCXCi',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '4s8QacM13Z9Vf9en2DyM3EhKbekwnmYQTvd2RDjWAsee',\n    ammTargetOrders: 'FDNvqhZiUkWwo95Q21gNimdqFQDJb5nqqttPT5uCUmBe',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'B5S6r6DBFgB8nxa8P7FnTwps7NAiTsFbiM6Xo7KrGtxP',\n    poolPcTokenAccount: 'DBd8RZyBi3rdrpbXxXdcmWuTTrfkA5vfPh9HDLo1cHS',\n    poolWithdrawQueue: 'CsPmj2rcDNQF85Q1bvWbieNkymtEHqyo7aXHmwHNiEKQ',\n    poolTempLpTokenAccount: '9qHe2MC69BTwZY2GBJusz1rgMARsJAd6WvRu7cCYczjg',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'B7b5rjQuqQCuGqmUBWmcCTqaL3Z1462mo4NArqty6QFR',\n    serumBids: '2FafQRbcuh7sE9iPgWU7ccs5WNsSyih9rXCTZn4Bv3t2',\n    serumAsks: 'HJMohwcR3WUVFj9whhogSpBYzqKBjHyLcXHecArwgUEN',\n    serumEventQueue: 'CTZuXPjhrLb4PSNSqdsc7xUn8eiRAByfQXoi4HXkPVUe',\n    serumCoinVaultAccount: '4c4EMg5rPDx4quJdo3tL1uvQVpnoLLPKzMDn224NtER7',\n    serumPcVaultAccount: '8MCzvWSskaoJpcXNVMui9GfzYMaMBQKPvE9GpqVZWtxq',\n    serumVaultSigner: 'E4D2s9V4wuh6MMEJp7zkh6rcGgnoncJtMFFHjo4y1d5v',\n    official: true,\n  },\n  {\n    name: 'weSUSHI-USDC',\n    coin: { ...TOKENS.weSUSHI },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['weSUSHI-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: '9SWy6nbSVZ44XuixEvHpona663pZPpVgzXQ3N7muG4ou',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '4dDzSb5sVQuQU7JpiELNLukEUVYoTNyhwrfTd59L3HTK',\n    ammTargetOrders: '4soQgpB1MhYjnD2cbo3aRinZh9muAAgBhTk6gLYSG4hM',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'CTTAtNw3TPxMhZVcrxHPjbyqEfYS7ShAf6KafC4xeJj',\n    poolPcTokenAccount: 'EPav47MmuNRnHdiRSNpRZq9fPAvpvGb81mWfQ4TMc4VQ',\n    poolWithdrawQueue: '4DwCSyerQnxtiHc2koWWxpz31KjQdmLFe8ywWwrVkwEq',\n    poolTempLpTokenAccount: 'EwFVC9RA6WRBpqPjTxRmw6iYVtCGd7JoSi5MECvc3vE9',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '3uWVMWu7cwMnYMAAdtsZNwaaqeeeZHARGZwcExnQiFay',\n    serumBids: 'HtAQ6zXqg53WKTHoPNz6Y6nfy2vpRvaFFif13y9wWQzo',\n    serumAsks: 'CyMeznxwdK1vVLB8yrq1MpwZpmQ43UipnqhahrwHNj5r',\n    serumEventQueue: 'EiA2FLSrSJkJEGZg79eJkrAz7wtaB3jHDiXvQ4v5hZyA',\n    serumCoinVaultAccount: '2DiofKbhznosm6ngnVXZY9r6j3WypkK6PXZu4XVhrUwS',\n    serumPcVaultAccount: 'FwRAP48S9kwXFgiBDHU4NvuGkFnqctXEurgLFZFqdt2Z',\n    serumVaultSigner: '4BRTPsziQ1QcKtsqAiXjnJe5rASuu41VXF1Bt5zpHqJs',\n    official: true,\n  },\n  {\n    name: 'CYS-USDC',\n    coin: { ...TOKENS.CYS },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['CYS-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: '661trVCzDWp114gy4PEK4etbjb3u3RNaP4aENa5uN8Vp',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'gng63EZXkDhK3Qp8KgvLEZkcWmVDrmBe3EuYRy8mBPy',\n    ammTargetOrders: '5Y23u3wgJ68uk7suF1mbJZQ9q1BnQKSVXUZfjJeY5RGw',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'CVioXLp58QsN9Xsf8JkAcadRmC1vsW74imLpKhMxPWSM',\n    poolPcTokenAccount: 'HfBK19mBWh5D9VgnsPaKccfQaD79AYXetULtwLo62qxr',\n    poolWithdrawQueue: '7txhWR41faQuKEBb6xq53RHBdGMCXf7fM7MBJgMvTiBN',\n    poolTempLpTokenAccount: 'FrzaE4b2kpXtihidZj8mpTK3ji36wrTMtKLdVAxqPbiU',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '6V6y6QFi17QZC9qNRpVp7SaPiHpCTp2skbRQkUyZZXPW',\n    serumBids: '5GdFXwsM4oW5pgyYUE4uqQXKsswL1y21DBwn6HJTteQt',\n    serumAsks: 'ARGstQL7aLDdfN5yXUXKh8Y4Gwqe6eq5pMvYGcgkvHR1',\n    serumEventQueue: 'FC9bnU5d4irjaWdCjG8sgUT5TTaADDpvxdn4twN9fA9A',\n    serumCoinVaultAccount: '4PfqVvYg6tshSnMBMrXUwzYdS9gZvoxWFwGeLEx6BKow',\n    serumPcVaultAccount: '81WG3s7xWe8aT6nf3r3t6sBuoMFb4QPiEZ2caENXQuKr',\n    serumVaultSigner: 'FeGULrcjRyxHyRJTAUt84TqjR89biLnwwtjReWtRNoy2',\n    official: true,\n  },\n  {\n    name: 'SAMO-USDC',\n    coin: { ...TOKENS.SAMO },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['SAMO-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: '7oYaghDwJ6ZbZwzdzcPqQtW6r4cojSLJDKB6U7tqAK1x',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'DsYePDFjAFNQVEjiGwg4tsUdqfLu9hXuu9VPS6DtyPZs',\n    ammTargetOrders: '6RQvAcLyub9KNcAWkJMER3Rm2AvwysYyVVdxzSBuUNMm',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '4jrV1Fwqxdnw3WXvLQiXqquLvn4p6p5F9imAVNEU4yCT',\n    poolPcTokenAccount: '5vkX52gpV1ZXmvk2JBSjD8z2wpGKp5Cs1XW15y5YB5ca',\n    poolWithdrawQueue: '6ZX2Ct81QtwvWKUARLMjzR3jvs9QNDwPVyPN45YaoKAL',\n    poolTempLpTokenAccount: 'DsT2dCWWGEmNcrX8vzx9Fm89Xg4J58LjEijNhVXsRuuN',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'FR3SPJmgfRSKKQ2ysUZBu7vJLpzTixXnjzb84bY3Diif',\n    serumBids: '2Ra3y1Y4HDd2jLjvAwdR6JKgGbyySGMToaZACkjroRWR',\n    serumAsks: 'EXBohV8AsD8kt1GcHTuwHoPLfkz5n8PmNn5JyPJybJ35',\n    serumEventQueue: '9FeUXsT6LbNXXZRQohoMRuxsmmYdfQM85JbVtrLUSB2w',\n    serumCoinVaultAccount: 'HgKq27kVsH6bFdHru5p3ohnrL2d4D776Yiptkzv2ntwX',\n    serumPcVaultAccount: 'JzkBGgCZLSzuZrC2XAmq5F4BRHmvhZtiUrbxsMP2BP6',\n    serumVaultSigner: '679pdaM91fct45cM3nCvzBN57UGCFHe1CTSJwSRqjGwJ',\n    official: true,\n  },\n  {\n    name: 'ABR-USDC',\n    coin: { ...TOKENS.ABR },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['ABR-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: 'GQJjrG6f8HbxkE3ZVSRpzoyWhQ2RiivT68BybVK9DxME',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'AwHZdJrEDWAFhxsdsErvVPjWyE5JEY5Xq6cq4JjZX73L',\n    ammTargetOrders: 'AdWdYACEwtJLtNsqjBeAuXhHFiJPNJHkScYrdQeJWV6W',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '3zrQ9od43vB9sV1MNbM68VnkLCfq9dVUvM1hmp8tcJNz',\n    poolPcTokenAccount: '5odFuHq8jhqtNBKtCu4F2GvUiH5hB1zVfpS9XXbLf35d',\n    poolWithdrawQueue: 'FHi35hxZM29USwLwdAhbT8u7YhW8BPWvtLHyLnXPebW2',\n    poolTempLpTokenAccount: '53fmAZj3d3YEnHY4PvyCE1Cx23x5g3d1ejwyDAZd3NzH',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'FrR9FBmiBjm2GjLZbfnCcgkbueUJ78NbBx1qcQKPUQe8',\n    serumBids: '4W6ZoBB2QNBe6AYM6ofpWjerAsnJad93hVfdC5WMjRsX',\n    serumAsks: '64yfFmc7ivEknLRT2nvUmWkASGwz8MPxtcPdaiWUffro',\n    serumEventQueue: 'GgJ8bQSZ6Lt2mEurrhzLMWFMzTgVFq8ax91QzmZzYiS6',\n    serumCoinVaultAccount: '9yg6VjgPUbojGn9d2n3UpX7B6gz7todGfTcV8apV5wkL',\n    serumPcVaultAccount: 'BDdh4ane6wXkRdbqUuMGYYR4ggf3GufUbjT2TxpHiAzU',\n    serumVaultSigner: 'A3LkbNQUjz1q3Ux5kQKCzNMFJw3yxk9qx1RtuQBXbZZe',\n    official: true,\n  },\n  {\n    name: 'IN-USDC',\n    coin: { ...TOKENS.IN },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['IN-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: '5DECiJuqwmeCptoBEpyJtXKrVfiUrG9nBbBGkxGkPYyF',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'GujdDreXBSEXUCjk39tRnM8ZYCrtyambNSa3JjJVGvLJ',\n    ammTargetOrders: 'D4dBV5v9AMfGzgf1eBrpAUom72YVLYeZr1ufnY1dJd8W',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '2z4day3sVMRULUtFJ4sbTvKrkjMsc42rjXHDQtggbSE9',\n    poolPcTokenAccount: '9PVPqk5RYf5x9nRYbEzotVNpk36NJ6bAZJaaSnaaZrYn',\n    poolWithdrawQueue: '3xxiFPPRwy4bshMeG3bN4yCNDiFsbVdPq29qK2bddJ9J',\n    poolTempLpTokenAccount: 'EbDVS5gwPdVYK7f14g2B9zNesgEfAcgnxQzTYf7GYw9j',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '49vwM54DX3JPXpey2daePZPmimxA4CrkXLZ6E1fGxx2Z',\n    serumBids: '8hU3yAFb1429V1TTSKqpgJ7XJyQQQoLq76wxHeM1WYo',\n    serumAsks: 'CEdiYZ2Cp62ECHgkz2mPiK9A6HcMG2jSmrppxiENzgKT',\n    serumEventQueue: 'DJgsxzKvBY2wTqAWEmiqV8quTR7k9GZ7rsmvov3yzXPw',\n    serumCoinVaultAccount: 'De4wrN3UtHs783VTZjqoFZtP2v95pMWFx1KCqmkWBXqU',\n    serumPcVaultAccount: 'DiiAfxX3J5apQ8SJ42Z4z2USTK3QbhksTzniAugLaG91',\n    serumVaultSigner: 'D8QQQMut9bbPfpCXHgbwoPSF4KNYSg7SyRUGF828dBfZ',\n    official: true,\n  },\n  {\n    name: 'weDYDX-USDC',\n    coin: { ...TOKENS.weDYDX },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['weDYDX-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: 'CbGQojcizFEHn3woL7NPu3P9BLL1SWz5a8zkL9gks24q',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '75hTsLMn57111C8JwG9uqrkw6iZsFtyU8CYQYSzM2CY8',\n    ammTargetOrders: '3pbY7NyETK3UBG1yvaFjqeYPLXMd2wHgcZVJi9LZVdx1',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '45pPLPHYUJ7ainr9eqPzdKcWJSbGuoUwcMcMamAXgcCX',\n    poolPcTokenAccount: '7aE4zihDvU58Uua8W82Q2u915rKqzpmpWPxZSDdeXrwu',\n    poolWithdrawQueue: '2r8yHQGdydgngeTXdqsM2P2ZWVmwRAe3Kq3MLTCQPpHD',\n    poolTempLpTokenAccount: 'DBmenZarP1WQx9uvrKQQj3pNfhmNanZ9ns5tpMYpDcyJ',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'GNmTGd6iQvQApXgsyvHepDpCnvdRPiWzRr8kzFEMMNKN',\n    serumBids: '89Ux1PrzAVv5tejtCQhfs5tqEfQdb3WQsfY6f7BzQtsN',\n    serumAsks: '36eRuVT8kyWq1UbZeYf66q5EhUpNP2Kq8TgffyVbHEzF',\n    serumEventQueue: '4GX63nbB8SHwDeDpuSKacfch1ANTLp4zn8ivkcTjCnEn',\n    serumCoinVaultAccount: 'CXxN6hGatd5nK7uPwxvxHYmqvM4b88eKb9fcHapRhtda',\n    serumPcVaultAccount: 'NMWKX4jfzkKvRBYkcvurus8aofaHZ8MwMNYqudztWZh',\n    serumVaultSigner: 'DD6e6WMaZ3JePsBNP9Eoz9aJsD3bZ81EjMvUSWF96qQx',\n    official: true,\n  },\n  {\n    name: 'STARS-USDC',\n    coin: { ...TOKENS.STARS },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['STARS-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: 'CWQVga1qUbpZXjrWQRj6U6tmL3HhrFiAT11VYnB8d3CF',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'D3bJNYcUhza55mdGFTAUi4CLE12f54qzMcPmawoBCNLc',\n    ammTargetOrders: 'FNjcSQ7VB7ULoSU7BDTotiRDmqiQj7CvVxHALnYC5JGP',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '5NtsnqVNXGmxs6zEU73W2RaFh4e58gqdWrxMvzcqNxGk',\n    poolPcTokenAccount: 'MZihwPviJgm5WjHDmh6c5pq1tTipuZnHFN3KBg63Mtj',\n    poolWithdrawQueue: '5NRhJQS8m4pgc8Lgo1kuqHJrU8JAeToriPvpJ4LY88uH',\n    poolTempLpTokenAccount: '8vLEHvkCEdAj4YPGbfrcTKHccaEJQwuY32WunJWzyuZx',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'DvLrUbE8THQytBCe3xrpbYadNRUfUT7SVCm677Nhrmby',\n    serumBids: '9Nvw43fQ4vNfdJgajMC4JUpLGGTiia1vGYEM7SbfaWei',\n    serumAsks: 'CnVNbSQcVNQjGA4fdBtSrzDyFNXAHuBhcMnZsQBpEHo5',\n    serumEventQueue: 'D1hpxetuGzfz2mSf3US6F7QHjmmA3A5Q1EUJ3Qk5E1ZG',\n    serumCoinVaultAccount: 'AzhvXGjqJtDW4ieSYVje3zxL14TP1pGJv6uULR2F86uR',\n    serumPcVaultAccount: '8SrtqysGeiKkXWMGMgee9frWbGdhXZr9gWHh2VKRnvkZ',\n    serumVaultSigner: 'EN7RnB2RVxeDcTQWFBAuaf5Bg9sEuHhwwWiuj1TFHEuC',\n    official: true,\n  },\n  {\n    name: 'weAXS-USDC',\n    coin: { ...TOKENS.weAXS },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['weAXS-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: 'HopVRTvFvRe1ED3dRCQrt1h5onkMvY3tKUHRVQMc7MMH',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'BWJ96nvwjxqkjbu2rQN2H4U3E5PjWRMjrw2gqRcicazt',\n    ammTargetOrders: '6JtLCecsVp3UN1eEyZCHUBXKmd4HqnzYXB3AcS1DCEFe',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '9pyHCyqHKvfbsTeYNQRTf5zHLzZedmxWA7YGC4ybCfBD',\n    poolPcTokenAccount: '3WuvWRBqCtw1zqKmgZ79t5QK8Ph7Rfwf7nYB8Tv5KV2C',\n    poolWithdrawQueue: 'B5ixFzgKhBysnWpJcEiozrf8Ykc361xKwkKstWCBLggW',\n    poolTempLpTokenAccount: 'F7NwbHNfgU9p1iQAkjDs8HnbVVDsCXfSxv5jn4LxUxKn',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'HZCheduA4nsSuQpVww1TiyKZpXSAitqaXxjBD2ymg22X',\n    serumBids: 'AaWuUgau8jRbbo2tVv3oFcAUyrSPXQxJkPUYsUPeCFe6',\n    serumAsks: 'HFZCap81Q9JAuySeggJrQvw9XJuVdbb9R617BeTnsZbA',\n    serumEventQueue: 'DQZDYYbCCknsvAUadroAs3YPH8XU4Bo7iCmTy3GAWFrF',\n    serumCoinVaultAccount: '69bNeKy1gM4xDfSfjCaVeGpoBR2hPeXioJMNShu1BjdS',\n    serumPcVaultAccount: 'Gzbck4nwKYEEmwHxJxBpBpGhuMZaDhL1UqVBVFTrReki',\n    serumVaultSigner: '2qodg1XKZ5hauWnz1hBBfUWzMbRqABym2hMgLSS7pmJ2',\n    official: true,\n  },\n  {\n    name: 'weSHIB-USDC',\n    coin: { ...TOKENS.weSHIB },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['weSHIB-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: 'SU7vPveBjEuR5tgQwidRqqTxn1WwraHpydHHBpM2W96',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'GQBHmoAkWiXEsoGYBqFGifCwDcfU2QYCwL8GHWFAbBqZ',\n    ammTargetOrders: 'm7JmrtyJq4CxTYPmB3WKMVbsDxge8SD95rWHb4WREEz',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'Ar37g5ebxRMq1NJyswFw9JKwRzZ8CzVr9SEMFH5wy9P8',\n    poolPcTokenAccount: 'EGynHanKeLLUYeWFE6ULXE1QRD8YPTV7ehSnphWsLqq2',\n    poolWithdrawQueue: '5VBUYLnVPHKtiFSqSEhaANF5fXv7QzATRB5BRHrQv3B',\n    poolTempLpTokenAccount: 'G5Wrnafh95moPCxvKM5QNTMwAFQMGnnB9YTh24TvWnrD',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'Er7Jp4PADPVHifykFwbVoHdkL1RtZSsx9zGJrPJTrCgW',\n    serumBids: '2FkkrUR6MWq7Qd1LLMnR4NWmKcnqkNhK6NK6x7Wi1aRD',\n    serumAsks: '2Qxa2n6rRGm5f3Qc8H9HDV7wYsjnXZuXEWjgQs1bEwzK',\n    serumEventQueue: '5jGZmP29GfcEWKVHGxCymuD5qGg33kM2rPfPvD1BFS35',\n    serumCoinVaultAccount: '7nbNVNdhzZoD3KdjKnGRXbb9pPnDP2CSK1tPoRNvq94m',\n    serumPcVaultAccount: '6ovLsr9T6754PrgH3QwFCPtjizWEh6H3DDpc3QXnMsqi',\n    serumVaultSigner: 'HoDhphLcgw8hb6GdTicv6V9are7Yi7xXvUriwWwRWuRk',\n    official: true,\n  },\n  {\n    name: 'SBR-USDC',\n    coin: { ...TOKENS.SBR },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['SBR-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: '5cmAS6Mj4pG2Vp9hhyu3kpK9yvC7P6ejh9HiobpTE6Jc',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '8bEDWrUBqMV7ei55PgySABm8swC9WFW24NB6U5f5sPJT',\n    ammTargetOrders: 'G2nswHPqZLXtMimXZtsiLHVZ5gJ9GTiKRdLxahDDdYag',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '8vwzjpW7KPGFLQdRuyoBBoiBCsNG6SLRGssKMNsofch2',\n    poolPcTokenAccount: 'AcK6bv25Q7xofBUiXKwUgueSi3ELS6anMbmNn2NPV8FZ',\n    poolWithdrawQueue: 'BG59NCoZnxqSU2TQ2DNsENiCZci73BcRvXWtqmQhNrcw',\n    poolTempLpTokenAccount: 'msNco37chvHeLivUwoetEnHDFZxVNi2KXQzjGAXkRuZ',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'HXBi8YBwbh4TXF6PjVw81m8Z3Cc4WBofvauj5SBFdgUs',\n    serumBids: 'FdGKYpHxpQEkRitZw6KZ8b21Q2mYiATHXZgJjFDhnRWM',\n    serumAsks: 'cxqTRyeoGeh6TBEgo3NAieHaMkdmfZiCjSEfkNAe1Y3',\n    serumEventQueue: 'EUre4VPaLh7B95qG3JPS3atquJ5hjbwtX7XFcTtVNkc7',\n    serumCoinVaultAccount: '38r5pRYVzdScrJNZowNyrpjVbtRKQ5JMcQxn7PgKE45L',\n    serumPcVaultAccount: '4YqAGXQEQTQbn4uKX981yCiSjUuYPV8aCajc9qQh3QPy',\n    serumVaultSigner: '84aqZGKMzbr8ddA267ML7JUTAjieVJe8oR1yGUaKwP53',\n    official: true,\n  },\n  {\n    name: 'OXS-USDC',\n    coin: { ...TOKENS.OXS },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['OXS-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: '8ekXiGjEjtWzd2us3rAsusKv7kKEhPENV7nvzS7RGRYY',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'G1vzK51TP85Vr8bcfoDkLDakySNSruTp3Fw3RhB4uvWs',\n    ammTargetOrders: '23VaWFz63uXWpkkwoTezADokmpSbWwXfRH2AgAFMBHTY',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'DSiQzr8a4pEwoZa5TE8KdRBMwUoUnHumg7s2Q1vH32G5',\n    poolPcTokenAccount: '5zRG6Hj6QJ51h28yreTdUQpFEDikgu111XUtRNXSAKM6',\n    poolWithdrawQueue: 'a3q6KagLNFZqLFZviiPeQLNveHz1Duq1nrgGcRgah7v',\n    poolTempLpTokenAccount: 'F4HmaY8u6x3rrfrLVHjTVjKEcGn58LjnMc5viuvqKZ5h',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'gtQT1ipaCBC5wmTm99F9irBDhiLJCo1pbxrcFUMn6mp',\n    serumBids: '834hHw1CGbyXRjPD375P5pdhtaXhEphdcrjxFGpXHPVh',\n    serumAsks: '6tf7B3V8hYnqwoqUSYTXYWBULLx2hS8TfHvB2roV3YAz',\n    serumEventQueue: 'SFUvgUFF2CKxS6QAtCfsbrN38QK7Bva1NHrhJ9nxCkd',\n    serumCoinVaultAccount: 'GSpz3LmstYiUEWfTfFcKt6hv9TDPWg8Yxneq8xeL8RJ6',\n    serumPcVaultAccount: 'Fh8X13tSH6RfwXdTudmzEWHEcnTMJfM7HbVf4rUNUXhy',\n    serumVaultSigner: 'HuseDRZYHcCPFSuzhdRHvs2M4dfCWr5ZXENu4aiUtGqx',\n    official: true,\n  },\n  {\n    name: 'CWAR-USDC',\n    coin: { ...TOKENS.CWAR },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['CWAR-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: '13uCPybNakXHGVd2DDVB7o2uwXuf9GqPFkvJMVgKy6UJ',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'E6wZo9uiPf156g9jG5ZWX3s23hM3jcicHiNjMg9NTvo3',\n    ammTargetOrders: 'HnX2KEKgXfPbHoFCSfZydDDYm51DwdkXcibWP9o6sP9Z',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '2rgPoyabSPeYoMiACSp9UcqG9WEBhDdXDmGQ4XRoBeo7',\n    poolPcTokenAccount: 'CzynpjFdoLekUGMPRNT6un5ieg6YQyT4WmJFKngoZHJY',\n    poolWithdrawQueue: 'AwYLatzaiaRG1JBQYevogqG6VhX3xfF93FHt4T5FtQgy',\n    poolTempLpTokenAccount: '4ACwuir8yUrYQLmFDX6Lsq8BozEizKCVdRduYuUyR4zr',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'CDYafmdHXtfZadhuXYiR7QaqmK9Ffgk2TA8otUWj9SWz',\n    serumBids: 'A3LCjzPEE9reQhKRED1TBGBG9ksL45rhLxh4fRzThWXJ',\n    serumAsks: '53krdJQgxmTaJgBPQ1Kc7SKLEEosvYs2uDYodQd9Lcqf',\n    serumEventQueue: '224GEWPVsY5fjn3JqqkxC7jW2oasosipvWSZCFrpbiDm',\n    serumCoinVaultAccount: '2CAabztdescZCLyTmUAvRUxi3CZDgtFPx4WFrUmXEz8H',\n    serumPcVaultAccount: 'nkMvRrq8ove9AMBJ65jPSsnd3RS7kvTTh5L3jN93uNu',\n    serumVaultSigner: 'GiVPfzeddXAbneSZWZ1XrNAZvB7XhNFbJtck7skN6xBE',\n    official: true,\n  },\n  {\n    name: 'UPS-USDC',\n    coin: { ...TOKENS.UPS },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['UPS-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: 'FSSRqrGrDjDXnojhSDrDBknJeQ83pyACemnaMLaZDD1U',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'AQLtFoAuHCbA6uLwSgWyweQ1wbk1ednmg55mzZV3M7NP',\n    ammTargetOrders: '4SSCpJvq7XQVzJVwxUdR2QJLM6j29ye3LVBUW6gz99Fb',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'Ft4UpV7G6eKVAL8YrsDypjAYv21cNEwvquz9WTEL6AA1',\n    poolPcTokenAccount: 'FZpxvgZHoJxF96H1qNjj93dFYVVfm22TfDavfbojL1ho',\n    poolWithdrawQueue: 'DuPqYGfu3L6G7ebZ4KvP83UTE7p3v4Q6LYYzhs8iMVWs',\n    poolTempLpTokenAccount: 'CS2n3zncd3mPpK8BEecuoPW4hfVYgoN4UVaqWsQGTPdL',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'DByPstQRx18RU2A8DH6S9mT7bpT6xuLgD2TTFiZJTKZP',\n    serumBids: 'CrYL51GW3yPeekGM8ZNitiAB5ZL6Y4egNJhf8DGBUAmk',\n    serumAsks: '5NHhazJmYGnYsXdMPnn1hKMhCXg8U3xpJWdQTTfdwn2u',\n    serumEventQueue: '1PjxFWFojvxPxJWXGzJap5cN8dcxHLVyDgofruMxLSa',\n    serumCoinVaultAccount: 'SnDuSUVuEnNPBhn2wPVNrAQz92Ri2hZB9ixZEHhWGCE',\n    serumPcVaultAccount: 'DRyGXiW5c8SAq3c8oYt4aViY8rqL6BQrozMqw1yZSQAV',\n    serumVaultSigner: '4WYVAki32938cxiWKcWsAxoGrtGP3LmP6oBsiujLz8sE',\n    official: true,\n  },\n  {\n    name: 'weSAND-USDC',\n    coin: { ...TOKENS.weSAND },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['weSAND-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: '3cmPpX8kKzEra2umtLCDxMfjma82ELtAMaSYVmdaNLxi',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'Gwd7zQAHr3bkyGkNRrKM5hZwUVsjdBEeyNr8ME5cqxUz',\n    ammTargetOrders: '9wu7YGgankeWkeygE8Qt8A5qHeycDp9vBTSUsr85QBzZ',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'C1MF3pFLfRBzrywrMJvHPP2EUjCQfKYmyW975rdkXB85',\n    poolPcTokenAccount: '5mLSVNzt7juMjxXohvvwHZdojG81GbdFrjYxgsSqDnNH',\n    poolWithdrawQueue: '7XpC5EC51j1WBz56Nr9cq33akEeaU2NoA7MQ3NMYNjMX',\n    poolTempLpTokenAccount: '8EW9HQ4QtXTFSyZ6LuLk3bRUvi1MsPVxFKmUqd37a1vh',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '3FE2g3cadTJjN3C7gNRavwnv7Yh9Midq7h9KgTVUE7tR',\n    serumBids: 'HexBvvrL8jZRGti3zXZ6vCXqDzJ7skgSaMgqLJjzXaCm',\n    serumAsks: '224juRrCj1VeeiG3qoXLDrJkGPSh8MJH2XuEsLCHLLj7',\n    serumEventQueue: 'DY4P5LEdehACn83akvVb49MNJf5VhDQuWTxfx95nGdgY',\n    serumCoinVaultAccount: '2t3MMN5FLMqsieeUsQK8nfM4YKQobK5ZvDgjNV6hn7SW',\n    serumPcVaultAccount: '55SiYWMEP7XrMvP31YhZQE1YTkypv6yeDe7Z3663pMfb',\n    serumVaultSigner: 'FLqXAFVSveyKjtfWpfT8ttrn3yUAzoHGKiYwcR5r6tp7',\n    official: true,\n  },\n  {\n    name: 'weMANA-USDC',\n    coin: { ...TOKENS.weMANA },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['weMANA-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: '7Z1c6GHutf3q2MNheyFE8KMNVEALuiPaqoEMyjbCbuku',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '59ceFXHiqriiFLGqwabgVwZncq86hEw6bLyq3unDPnSG',\n    ammTargetOrders: '7gKNnFvzT7yrvoPnQakdV7BpCRAELnGBnn3dQYEojqHd',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '2A8PVremRfR6SLAaX5qPBqatzcufr6pg8wdaD828E8FC',\n    poolPcTokenAccount: '4XdAP2fmGo2ziQUAjDxg5y4jLhSy2ShdJE5TFg3jjxYG',\n    poolWithdrawQueue: 'C6hV97zRb4WubTtwXsHTFEYLhu8vamSCCs3VmzkqSSyr',\n    poolTempLpTokenAccount: '3a8FXTm3d8RUZm9eXAGSxLQiQUCnu9ox9qiSqd4WysXX',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '7GSn6KQRasgPQCHwCbuDjDCsyZ3cxVHKWFmBXzJUUW8P',\n    serumBids: 'FzD4EpQmwsFhAeRJF1S6efp1uqkgJ8hqWrNkWoCxMJuc',\n    serumAsks: 'HLYwubWymYFtMhgU9BcNz8ngsKGNDSjQzooWYbuQ7Pze',\n    serumEventQueue: 'JCxtKZBuqYruJm7TZpd9DEtsSYcq23dc42dRQz4wf5Cq',\n    serumCoinVaultAccount: '3mmhhvfLeHMtTMm17r477rcnbVUtRusqVgQ3wZh8hepV',\n    serumPcVaultAccount: '9FgALLcqFUn1o3tn5NPiEhh7HRPYr1n25cAXhcDjfGNJ',\n    serumVaultSigner: 'DcxxF4grETLsyYWkqAzT3MYUFAE2VA4fRs7i4Uu4K7dv',\n    official: true,\n  },\n  {\n    name: 'CAVE-USDC',\n    coin: { ...TOKENS.CAVE },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['CAVE-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: '2PfKnjEfoUoVDbDS1YwvZ8HuPGBCpN831mnTuqTAJZjH',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'ECG1LTHELj27wyKVz4DPCKdFB8mthqEwbnPeuUzkgz2H',\n    ammTargetOrders: 'H4vuXiWxuKLec3TLrZk3QgJMsLH4Y2L6E9LosnefFMyR',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'B1SCcyk4AqQcn6RY7Qjqj8rE53DDZ7N2eiqtMNcmfZxa',\n    poolPcTokenAccount: '2HUjTaYw3mmU6kRA3ZfC4MGSzUhr2H6ZUQCWWdrfwUB6',\n    poolWithdrawQueue: '83z9iqzrGv3ZF1aQ14i4cfLGLJ2yH2uBByMQe2347EjB',\n    poolTempLpTokenAccount: 'BNfk8c5CYcA7Cyg6iRNTBRwhEuhKARLD8toBzdxtmRJt',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'KrGK6ZHyE7Nt35D7GqAKJYAYUPUysGtVBgTXsJuAxMT',\n    serumBids: '73yb9Y8cZfxX8KV96dMXVp5tTfu4FVjPc9LchtrzEdUu',\n    serumAsks: '3sYKt1KYtB2Ycnf6jzNvnji8wUCWbsu9ZcA4DboiU1FH',\n    serumEventQueue: 'D6PsDqCb5BbAhXfaLA9AtYz8SHLCUtdQSmozu7T4JGJe',\n    serumCoinVaultAccount: '2ZzE1FQixLYqw94htVYn99kSH1LE35De3d8XeWPnypte',\n    serumPcVaultAccount: '8oVmJ6vT6kMfWyRETDjuo4nAZZZC3KSNZBjsHzEDQDLD',\n    serumVaultSigner: '5bXbwUkB14na4uBAjG2u3PKx9BMV182T68EjgFV6duuz',\n    official: true,\n  },\n  {\n    name: 'GENE-USDC',\n    coin: { ...TOKENS.GENE },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['GENE-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: 'Enq8vJucRbkzKA1i1PahJNhMyUTzoVL5Cs8n5rC3NLGn',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '7dcfFNqaGnHrUB1bg1mEbvJsvsvfn7oamkpjDdt7ykUm',\n    ammTargetOrders: 'FrJ5aM3Vi1DyxNfSbqq4vPYX3S9kH9foWMjqHjHGQq3E',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '6yxszHV62pCjHtGijwgroqRXGVLuoiHUFhcEoHQepB91',\n    poolPcTokenAccount: '6AovHvG7UovcavaJW6rEef728JtFV5adZ9MaNRBcX2nH',\n    poolWithdrawQueue: 'J6YMSZfmy68QLH4R5gv5wasyF3pTVBF5CgkY6WaNwaBD',\n    poolTempLpTokenAccount: '7uNG8iCJNjN7xRDXAvb1afGAvd6GQitQ7K7chhTy43w5',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'FwZ2GLyNNrFqXrmR8Sdkm9DQ61YnQmxS6oobeH3rrLUM',\n    serumBids: 'CQvBaGPpjn9aSM5VJYmXSxjrqG79aqF8wPAbuCSWhPtz',\n    serumAsks: '5R4k5QNxtN1zcAiCHR4h1FmmBdpajvF6EeR3kuoMYbu9',\n    serumEventQueue: '7MQzBut5taNSxbusoBnuuLB6Bmnfo6wm1Ukze5B13Uxd',\n    serumCoinVaultAccount: 'AjKhS74QWgcatcJvHDS3fdCJq8BdAsrHxzcoNyT738Hy',\n    serumPcVaultAccount: '3xtHLByKqJzyvu3TbtDW8cnzJTbdRLKRjihWo1fVM5Fp',\n    serumVaultSigner: 'CTWJZKgSwanoom2Bb9QiNKj6mrDtAMPFe2UUh8mZx9d5',\n    official: true,\n  },\n  {\n    name: 'GENE-RAY',\n    coin: { ...TOKENS.GENE },\n    pc: { ...TOKENS.RAY },\n    lp: { ...LP_TOKENS['GENE-RAY-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: '8FrCybrh7UFznP1hVHg8kXZ8bhii37c7BGzmjkdcsGJp',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '3qTqthYwuZKNQKruWJRGnubfXHU4MyGnvmoJcCbhELmn',\n    ammTargetOrders: 'HwwQ3v5x3AdLopGFdQYZmwK7D5YURpFoDJcrbuZDsMHm',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'FMxYRoHA3Xn4Su62GCwofmdALGdn4s16S5ZA4C91ULbX',\n    poolPcTokenAccount: '3h7PhXbCAGvtQHqwTS2V3Mhc3fK8E5Hs8EbgCVHkQFwd',\n    poolWithdrawQueue: 'HW7QPs33Fzw9uME7gqs8DRuvbdP24WFc8jfpBQaqdi5C',\n    poolTempLpTokenAccount: 'CJbRPzdxPXEbyfM4YKinhojgmJv6yjcwaWpgvFYL4umz',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'DpFKTy69uZv2G6KW7b117axwQRSztH5g4gUtBPZ9fCS7',\n    serumBids: 'DntegVqu4W73GAywDMnNNZv1RhzMnvg2ZG1SpEXiZCjb',\n    serumAsks: 'CfTMiXZnDvVEyBAoXrNhf2mNBRJ5WCQh4JEwHXMoxh7o',\n    serumEventQueue: 'CTe9iXRYZJ35xss1KsiFXJHS9w8638H7RKwt9WUdtznq',\n    serumCoinVaultAccount: '53zLrENukPYyMTgHtgLaPaSVUB15YphguocAC4b5nFbK',\n    serumPcVaultAccount: '4ZTZ5khpqH4jBELchj4g8kcDZUcpuyWmMkj6ajycwGRu',\n    serumVaultSigner: 'SDSGfMSBFpUZWKZcsHSkLt7FGD4TQPjWNk2fux2asL6',\n    official: true,\n  },\n  {\n    name: 'APT-USDC',\n    coin: { ...TOKENS.APT },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['APT-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: '4crhN3D8R5rnZd66q9b32P7K649e5XdzCfPMPiTzBceH',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '9ZkyYVUKZ3iWZnx6uJNUNKdv3NW3WcKNWZMg2YDYTxSx',\n    ammTargetOrders: 'FWKNVdavvUKdcpCCU3XT1dsCEbHF1ak21q2EzoyMy1av',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '6egmkyieHa2R2TiVoLkwmy3fXG1F8EG8KmEMBN2Lahh7',\n    poolPcTokenAccount: '4dcKsdDe39Yp4NDzko1Jv6ViSDo2AUMh2KGxT6giidpA',\n    poolWithdrawQueue: 'FwSCPqMixHerULmKCuaxU8VzUGmMVTUrbpNUaY6EwBgP',\n    poolTempLpTokenAccount: 'CCxPRM9viLU3nr82UcgqgUkyTxM1NTW2a8DtwR9NwSAP',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'ATjWoJDChATL7E5WVeSk9EsoJAhZrHjzCZABNx3Miu8B',\n    serumBids: '5M3bbs43jpQWkXccVbny317rKFFq9bZT3ccv3YoLSwRd',\n    serumAsks: 'EZYkKSRfdqbQbwBrVmkkWXmosYFB4cVhcT4jLT3Qjfxt',\n    serumEventQueue: '7tnT8FCXaN5zryRpjJieFHLLVBUtZYR3LhYDh3da9HJh',\n    serumCoinVaultAccount: 'GesJe56oHgbA9gTxNz5BFGXxhGdScteKNdmYeLj6PBmq',\n    serumPcVaultAccount: 'GvjFcsncRnqfmRig7kkgoeur7QzkZaPurpHHyWyeriNu',\n    serumVaultSigner: 'Hfn1km6sEcBnQ6S1SLYsJZkwQzx7kJJ9o8UqwWhPNiW3',\n    official: true,\n  },\n  {\n    name: 'GOFX-USDC',\n    coin: { ...TOKENS.GOFX },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['GOFX-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: 'zoouer92idprkptX76yvhp4stK2keTzJpMNkeLqtxAx',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '6jQpC6ZE5sRAPbfShTxymJLE5pXUM1AGfbmyyBddCP5e',\n    ammTargetOrders: '5aDvGGEbb1ECP4yNEVdP9BbXFgX5Ut3Zb3dBjDsFQ9Kh',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '2RPyUYLEWRHXB7hN9p795gorU6bvPJ9UEKFniw4Cpgcm',\n    poolPcTokenAccount: 'eRtMAhZz6qXqsrRV9cgS6n6xQyvqwkTFZXaw5RP1yxu',\n    poolWithdrawQueue: 'FHLLxn9BTMF65qDc7CjHjN17qEoMVZYfgM9BTgwncGBo',\n    poolTempLpTokenAccount: 'AewsiURuxZ5McY3hi3zsKAgd2R7q2QWVMmWcJH7pAvaK',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '2wgi2FabNsSDdb8dke9mHFB67QtMYjYa318HpSqyJLDD',\n    serumBids: '5iME2kvAv5jVsw9df7EXXUNQtV1uUyFtibeHj6fF5T3q',\n    serumAsks: '3dBK4di97jAPzQAkz39wUwmQ6qbW98H1zsmrNxEUZVif',\n    serumEventQueue: 'CzKrdXjLtZRq3AyrwN9MZ667Ka9buVFESJUbEWBezxCV',\n    serumCoinVaultAccount: 'DckgBxFNQNQA796Jg12dRpCZZ1nBqus4PDbKQhfmJraf',\n    serumPcVaultAccount: '2jZJzfVGgHdzVq1e3HpRz9U5HnByoazyMzQ3jexn4jUE',\n    serumVaultSigner: '5RKd5tWKtvEocrQgf8vCo3BkPcjXYnTJWRBmNadCMemR',\n    official: true,\n  },\n  {\n    name: 'SONAR-USDC',\n    coin: { ...TOKENS.SONAR },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['SONAR-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: 'CrWbfKwyAaUfYctXWF9iaDUP4AH5t6k6bbaWnXBL8nHm',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'Ei23wxsu7WVsXv72yaTohSVASLqseinqA7DqXktprSSz',\n    ammTargetOrders: 'NheF95jviuoA9Rv5QPQgXDT3oQUbyoHJcyY5yXAFFnh',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'DQX9NhwznyWTYcTJ8uiqZP3PrzqRmfGNj4XNQzVKG8hW',\n    poolPcTokenAccount: 'AseLV5kWbAjNETCKJsXcrrs6ksvBefEPdRa7pKXFsvYE',\n    poolWithdrawQueue: '5mkppasqox6XpdcHhYAfM1GKTckQemqtANP85FphThw8',\n    poolTempLpTokenAccount: '9TjtDU6TMgHqAEdnUTBCgVJapGsqKnDTCFzDG2y4higa',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '9YdVSNrDsKDaGyhKL2nqEFKvxe3MSqMjmAvcjndVg1kj',\n    serumBids: 'B6t3JoptHoNer3YgEUZASeQwcXEnhvGH4ovYeVdGW2c7',\n    serumAsks: 'ACEdfnzBEFRopUkLwqowPuQpiMbuYR4uCk85wdxUvVWp',\n    serumEventQueue: 'Vq6g4iaDJhqB8PeUPf99JixtpdQ6zrdXXNuQ2LrGyvV',\n    serumCoinVaultAccount: 'EzMjpFVMZE4VrqbeGCXssfvDbpvHGMtHvkiLbX1YUTs7',\n    serumPcVaultAccount: 'B8A7V1124ka8WVKDHyWMAgbHCaCdhbU7JHy2nB7e2o6E',\n    serumVaultSigner: '44rLzbRfxmpsmHPZUEuLS6rxv9pyDBVnzUSps8mGaEr2',\n    official: true,\n  },\n  {\n    name: 'JSOL-SOL',\n    coin: { ...TOKENS.JSOL },\n    pc: { ...NATIVE_SOL },\n    lp: { ...LP_TOKENS['JSOL-SOL-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: 'D8pasgJWjP9wy39fzeD8BUjQMvYCZxABzPcnuoDSLHBB',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '2fXtmmePfWQTFuzCZ6WydnM96j4ZZjkbEhof2f9YnQsP',\n    ammTargetOrders: '2Eh6QWELimVN4uKji1KWZohKtvWCERHf5kYpd45Pro8Y',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '8P81j68MyzuixeKE3U1yuCmEMcSKUWsarxUKCPjPqG5V',\n    poolPcTokenAccount: 'ygjuCz9gawcU35UHgc8y7xLYRd12uY8ww3ToSgyAVj9',\n    poolWithdrawQueue: 'vWmn9TmQrvthTYP5zRwaJba2PajduXakJQvE4sEQtq9',\n    poolTempLpTokenAccount: 'DQhW2UkMUJ3ZfkgfvjMGci1FHwDrAQU52sFTYsfZYZtS',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'GTfi2wtcZmFVjF5rr4bexs6M6xrszb6iT5bqn694Fk6S',\n    serumBids: '4kXVcHe29TsuMPAhKcRjPEtZ3tnLWQLMe592jggAzshN',\n    serumAsks: 'Aw6Ris8FUTL1oQuqKrzmaWxQfmLun6ZD4vPzamFvdqEg',\n    serumEventQueue: 'Hb6GesB1688DUdyuvXqDZk1pUxRp7epVymAX8BLkUGcn',\n    serumCoinVaultAccount: 'CRutAjBoc5qABvZvBmnuUYQ1VFYjjBpfEcQxvAkyusLu',\n    serumPcVaultAccount: 'F54JoYXAR7m6KA4FHndF82W5kraBZvVQwqUyXRNcqDJH',\n    serumVaultSigner: '7XhDQ1epCDMRX7gDEi9r2S7pbEzuyAH3PpNZ9s8Yz4Ht',\n    official: true,\n  },\n  {\n    name: 'JSOL-USDC',\n    coin: { ...TOKENS.JSOL },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['JSOL-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: '7e8GrkwsRm5sS5UaKobLJUNu9esmrzg37dqX6aQyuver',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '2GiFVts1PwwwKvw7n7cZkigCRfCXj6StY6dSMAzPf2A2',\n    ammTargetOrders: 'F3vk58GqNs11abuGGHRxnUUUHbeWF5Pc9Yss8sCVAVV5',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'DqUW9TqewcqnAn3k9XpYx2w88hskgxi5PVxZofyZduTr',\n    poolPcTokenAccount: 'HiWTWGm1hb988dwbZW2niFkrDQ9GpefGNp2aBwsc5V4S',\n    poolWithdrawQueue: '3JXDWxCSRBAdP2yquoX4ypLVeTN7QkJVfvzpvgLjtKX4',\n    poolTempLpTokenAccount: 'HKjKJY9AUwYDujHt12mBsbp6AetDm6bMACQPbfHksT8z',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '8mQ3nNCdcwSHkYwsRygTbBFLeGPsJ4zB2zpEwXmwegBh',\n    serumBids: '9gwbJpCGVRYKM6twn5tyqkxXEo49JMKp4usZJQjPxRg1',\n    serumAsks: 'CsaJr18TyYhcabQjn16HW3ZsSoUbct8NSLSKuUcbr1cW',\n    serumEventQueue: '2zvmX9TGi5afJs2B6EPaPCBbHLkydAh5TGeCsGkwv9nB',\n    serumCoinVaultAccount: '9uZNMq6TbFQWT7Mj3fkH7gy9gP5bdroJKPpDFyA8x2NW',\n    serumPcVaultAccount: '9W3sz9P8LiAKDbiaY83cKssmuQckgFpzyKKXKYMrivkB',\n    serumVaultSigner: '2J63m8YjYMr495tU6JfYT23RfEWwaQfzgQXxzctXCgXY',\n    official: true,\n  },\n  {\n    name: 'SHILL-USDC',\n    coin: { ...TOKENS.SHILL },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['SHILL-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: 'FTyJCLwQ3YvVfanJp8mtC2eqmvZPpzSpmNLqWpaPaXbC',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'Fh4cmCjxTendCSrdKcihDhy2YXHQSo8AMZugkuYpSVav',\n    ammTargetOrders: '8CQgNaRxHAXKi5vFLgz1tavbsc3Bi1q9P9dbV32kxt54',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'jkXEdAVTBeSjPBX2NtysNcgm9h5o2Sv1EbebCWFmxny',\n    poolPcTokenAccount: '62S88DcNiESRWZYwar1nizpSMT83ahmps6FSZ4hU8WeJ',\n    poolWithdrawQueue: 'Fogf4YY75yUURLKjhWnfaKsGemsKDsR3qNVrQRw3HfqQ',\n    poolTempLpTokenAccount: '2CcwbW3x1p4mK13pA3STxprkDbJnTSp851NwC5vE7UdN',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '3KNXNjf1Vp3V5gYPjwnpALYCPhWpRXsPPC8CWBXqmnnN',\n    serumBids: 'EkMB68wYrUFBFDjWfNqhH6vDy72wwGRJZwzMpWWNSrRu',\n    serumAsks: 'HqEzJdKq1FcHV9wDrygLsbfJx7vhVW8LEax1Gio3aa4J',\n    serumEventQueue: '2CnKu8Xt9aGEShjtDVVYBRH7PpD37YeVxWrWpDExvXzG',\n    serumCoinVaultAccount: 'eSCLQn2TgtpDMGCRqmaMDuSTAk7JifTgJU7CwVtRWnH',\n    serumPcVaultAccount: 'BsJEDoCcd1EFjeVx39uffrp1WhcxJmE9H7U83Y3iTnF6',\n    serumVaultSigner: 'D1mYg9jbfCfxz1wFv7deSkqy92NGzxSFpQiScimQozpw',\n    official: true,\n  },\n  {\n    name: 'DFL-USDC',\n    coin: { ...TOKENS.DFL },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['DFL-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: '8GJdzPuEBPP3BHJpcspBcfpRZV4moZMFwhTAuXebaPL8',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'zZgp9gm6MCFSvub491ncJQ78zRF4WymJErhy2cR7nnU',\n    ammTargetOrders: 'GKo4P3uofE47wug87QE6QGSRHa8wBLDEiW4nXEWeDUb4',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'GteHVo2oJUJC2tFYe1QHS7MyasCVooPJdHfxwdF6hPZ2',\n    poolPcTokenAccount: 'FHqPtKCB2w9C94oupinMgykxuzjF6pQRVaBVNzqemXc7',\n    poolWithdrawQueue: '495s2Vr8PPXofHsJtkvazG77qNUHrhEpS86XkiFrTQgp',\n    poolTempLpTokenAccount: '6eXLVRMNEVFF7adfkbAQni537VrbPpR8LE3PEXbWxS67',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '9UBuWgKN8ZYXcZWN67Spfp3Yp67DKBq1t31WLrVrPjTR',\n    serumBids: 'xNgA2EugkNq9M9yZeshGSbP7Epy85p8NHhrwkffYyAY',\n    serumAsks: 'CcCDWuH5zW9577wtoMVUZU6PXoT5ZhiL5dadDo4124c5',\n    serumEventQueue: '9U9u5GLjbNNYaqECQATcMAuETbnh2QGjpJJVGoFxjLfm',\n    serumCoinVaultAccount: 'CvCsGEAe3Lxwo7zQ5Acqd34jjpS1iFWKp9h9Vt2KExpj',\n    serumPcVaultAccount: 'EGiCYaiiL65yx8uHkQKAmCv8U1fuDN4su6pSdsL3tQqB',\n    serumVaultSigner: '98fhGkizAxyzvsFZMAyt342wkNP6BGa8wfcHkJJURYrN',\n    official: true,\n  },\n  {\n    name: 'BOKU-USDC',\n    coin: { ...TOKENS.BOKU },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['BOKU-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: 'FsERtRjCEQNyND3ccnMGrd61ntPmJ3tbZs4vvcCzMr1L',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '7bQ84DTTnHz3vWjXHHr6eug4zHNPqgUA2u3hR186CQUc',\n    ammTargetOrders: '2rNGZ5DDQDTExPUDsWYgWHT2wWhcWkcz6yFzbzMaEfFH',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'He2merLuRCaccBvLhzmTGv5RyZuX77KrXYsDiegk1NBJ',\n    poolPcTokenAccount: 'zLGXRcckcM4dJnwha7zC9UfeCgxcFjqArtGjni53KFX',\n    poolWithdrawQueue: 'DDecdVYPEFJNgdrjYB5TKWLkF69qHKrqxWbPjY1FxAWk',\n    poolTempLpTokenAccount: '8pwcYxTivm9q5Pwqzx5ui7QMDxPYpN2rY4Mqa9Wyrn4',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'Dvm8jjdAy8uyXn9WXjS2p1mcPeFTuYS6yW2eUL9SJE8p',\n    serumBids: '5FG62Yx8e5cM92wTvHrLbw33qhRGEiiDtS15SeWyMPa9',\n    serumAsks: '3XTkgrqXoLtMw3XGZBKq43RLfN8o5DBkZ8tga5jCEQ6E',\n    serumEventQueue: 'BMaiUbDPukghHMFFFNPSKybHEnx1GzgnZaA7Wfa8eQkt',\n    serumCoinVaultAccount: 'As6NSizcseTTvFStf5tAv3eitxDNo2djKE36AVsHvVCW',\n    serumPcVaultAccount: 'BqwG61kV7Wi1ZAsL2KRBqaFoczJFCjGXL5bveN6gr9xR',\n    serumVaultSigner: 'DsaKT6fZuBGcA25WNQHScrZC9AvqSYh6hnGQzEkrubBo',\n    official: true,\n  },\n  {\n    name: 'MIMO-SOL',\n    coin: { ...TOKENS.MIMO },\n    pc: { ...NATIVE_SOL },\n    lp: { ...LP_TOKENS['MIMO-SOL-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: 'DqYSvijBXydSx9GfvVDjEzUg5StLLrkqZVPzsU2FeVZ2',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'GKSbpr3z4SV2AWmLndfw6FST3rNttyAzJKNvya8CQyLd',\n    ammTargetOrders: '9rXzQFx2udvvDBkzzUAH7ASW4DFEzQYytT9fnDyZvgeM',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'EjrKJXurKjpxCXHcvLDdaN28tg5X2mhAFpi7vj4rPPjP',\n    poolPcTokenAccount: 'HZcZjZZR6t6kbXTZisLKdCRnHqFWACG9RrBvJKWaDyvW',\n    poolWithdrawQueue: 'CzDNWpq6Wh5iQfaCRb8HB7W92T6LSXKoyEwuk3eoi1iH',\n    poolTempLpTokenAccount: 'CLxnCgBv6pc9UD7cbqam67rYXjvZFvBhYPNxNCXeicbH',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'BBD3mBvHnx4PWiGeJCvwG8zosHwmAuwkx7JLjfTCRMw',\n    serumBids: '5cabXo89gLZoQSG4AYxYqchkhczuwNRivz2U2BA1nk4g',\n    serumAsks: '6wRsk3W1v5JMouuUzNjbevbuxA5onend9xEkQni7bSfP',\n    serumEventQueue: '9PZ5J7LLcfv2nCjJb93wEjHUC2h5RCjZhTv8yLS6Dpcn',\n    serumCoinVaultAccount: '4DVzV5Y4JwRQ6NyCnFmdkc8zqhuFrPaF319q8DRVQDGG',\n    serumPcVaultAccount: 'ARwUt79ZTCkkD6GtvwxLv72N4r6zQJjNykDmYcXDMwXD',\n    serumVaultSigner: 'DSc4PMo49kARDga5qpxGvmR8hYYyBNNKQb4Qr6nWSDYu',\n    official: true,\n  },\n  {\n    name: 'wbWBNB-USDC',\n    coin: { ...TOKENS.wbWBNB },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['wbWBNB-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: 'Fb1WR1kYvG1tHu4pwAxXQpdKT8Grh9i7ES9rZusLg7D6',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '3AoL7SCi9ZKBAGoCdRvHwH3DMKD3WAv2Dpev4BkX3dYj',\n    ammTargetOrders: 'Hh1zHYam85KshQPkMf3YSDy7bD6fDuEa5WWjp7P35dqu',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '2WtQHGAMAhMsj3mR2wSPcUR7yZhYhuNwRZBxVPKcrCyb',\n    poolPcTokenAccount: '4vrVEysPFSoS5YcZQwRUam8CbVgZehQdBVQ8yYbmkQSw',\n    poolWithdrawQueue: 'C8PrYX1SCwgpZQbDyUtGPYcSHkvJmxTB3QpHPjih4JRX',\n    poolTempLpTokenAccount: 'J9dA4g4JXprDMgqhC6vWyCk8pTPoYQtECK6krratyHpz',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '3zzTxtDCt9PimwzGrgWJEbxZfSLetDMkdYegPanGNpMf',\n    serumBids: '8JJrdQEzMSoekpzy7qcYDs1hVJyWoRcfTHR2pGDgd7wy',\n    serumAsks: 'A3TmGhemkp8u8d5HCLMyiBByvwDtp7khv9Vt3p1cqH8c',\n    serumEventQueue: 'ZYhSiaFWkuNTBzRFM9UPJXwHPyTGbujCKvPXhbssYPG',\n    serumCoinVaultAccount: 'D77WaGjvSLwk6d3xdK9aEU3R7G5UKvqHrNAXmkHxjgh4',\n    serumPcVaultAccount: 'BwT7GkbKaQQqSCGwUjhtktYf6kjLvKLJsQA2j11jEAni',\n    serumVaultSigner: '9sHBqMtqmKDftTLiAN19ngVFywHK8M1MGANuMoZoJaQK',\n    official: true,\n  },\n  {\n    name: 'wePEOPLE-USDC',\n    coin: { ...TOKENS.wePEOPLE },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['wePEOPLE-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: 'GfvqUB36CPfqZDz5ntQ2YsoKRwg1MCewmurhc7jw3P5s',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '5ZodjQpktYCNqtLZLvYcDQET9UVsmya2wGzsdxGrxi8z',\n    ammTargetOrders: 'Tn2PqEet9R4jspxZ35dvrzDQT2LhicnbjznExJppKRw',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '3JyvAQagVdeGdmUqMHEYuGsCi4qZuTQwJsyHarQrAVYm',\n    poolPcTokenAccount: 'GuMPTZBkY9WjkcdzLfjGzDBb6S7ZuwLWvHHbAYRGdaKn',\n    poolWithdrawQueue: 'CiiZZRHdSppXEVjfGjZUpD4oB5wV6jMdgJcdGFd4Q9Eu',\n    poolTempLpTokenAccount: '2eg2bvXrYRb1R73Uxa2SoYrcpQzZcx1eVWXni6hfs6jj',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'GsWEL352sYgQC3uAVKgEQz2TtA1RA5cgNwUQahyzwJyz',\n    serumBids: 'DNkoCo9nN7mnnfWEvL6Qp9cyn5BjqDgVrgX3QktkXdnP',\n    serumAsks: '5ZJAmbMPvjUXR345TkCH7kxXaeCGHKnoozrUhzD4TxjR',\n    serumEventQueue: 'FQnZjJVgRrrDJGA9ohPUrdmWMbuGwCGTVeZLqv1zJoc6',\n    serumCoinVaultAccount: 'CGNexJSnAQFYZRUWj5cqtb9QN2wHNo1WxuGLErbHmxxU',\n    serumPcVaultAccount: '4i1ZsFFcVQG1Ufmeak8ibU4ur88t4QFLonyh9kR7Eh8m',\n    serumVaultSigner: '8EnrqayT31TqvUQRsCxC3ZZTNrTQjMNxki8MN71Hwp6B',\n    official: true,\n  },\n  {\n    name: 'XTAG-USDC',\n    coin: { ...TOKENS.XTAG },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['XTAG-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: 'Hv1BFhyADPjYXTqEeMgwzoybnNwYrHXNv7U2VjcAuEDr',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'JFR4ZGJwF2sA7q2Fkve1be39wnbV8EKmb3BTCi5grc6',\n    ammTargetOrders: '7TeQ8U9pZEA52Cek6FVRNisLsgsPwFy7EEUiXAiyjWQV',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '3UJZNSSi8JkeA9dP53Aok8EHbgE82K9HYKAGkgyxjyur',\n    poolPcTokenAccount: '6tTg68RpRDjVuEda62ihfTxsiMCN8Vpox4E9WvW5acRa',\n    poolWithdrawQueue: '4sWDRH7J6JU33y8JLshEt3oMSYXxw5H2Avc4DJCmMfwb',\n    poolTempLpTokenAccount: '2KzSH7behRFcovtVqxQ2Xz3MmDga3tLECDP11UXJqReA',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '6QM3iZfkVc5Yyb5z8Uya1mvqU1JBN9ez81u9463px45A',\n    serumBids: '6Z7VQehWjM831vyTTdJnt1NyQxhXtwLKKHDjhiey1MJb',\n    serumAsks: 'uD6PfpLoCihKD9uVRm4AE1tb1XsAneyMKtsJu43ynYY',\n    serumEventQueue: '9qQA1p3YW7LMEF3kqsYT3LsDw4GwMaopn1ghzWnN5RdS',\n    serumCoinVaultAccount: '5cBmqRj57VW7bpK9RscDyJjcu7S3QNUsML3axNxA3ja7',\n    serumPcVaultAccount: 'J2Yw8yeqdh89mBQfSkEnhQXudfgiuy6G11s4cduQuiN4',\n    serumVaultSigner: 'FLL49yBue1tqWDjLW9ztRaVULZz91uKsEjzJ6h5scgqt',\n    official: true,\n  },\n  {\n    name: 'KKO-USDC',\n    coin: { ...TOKENS.KKO },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['KKO-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: 'FvN7dJz7GX1XB1BTk6jD5rEKRxQc3ZwNkWJKai5sBJWS',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'Hh87TCaD5syc3ssin4kt9gdmoMwqYbQRC4ABw5bvD6vo',\n    ammTargetOrders: 'A6qas7S7Y49oGbF2zApeg3wmZPbZqqCBewmbMRraGbJt',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '9RyM5aXG1wcRmiGYLRTas3gySyoPvFCRcetTQGrVbPQ4',\n    poolPcTokenAccount: 'H19PNJ24H3zMheS2wyGzNoN29dWZ2JxrQgBmqSeFJmb7',\n    poolWithdrawQueue: 'BuhYTCcYtdULF5PFXQK6vuHCieVvCGq9tMX4nXHN8X6q',\n    poolTempLpTokenAccount: '5a4VLYXVM3f4mZJKy3mnnkn7kW8fhWoTEo4MZ33gojVH',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '9zR51YmUq2Tzccaq4iXXWDKbNy2TkEyPmoqCsfpjw2bc',\n    serumBids: 'FtNaV9qZJV2LgfiYhjCqwAmLkkspnmEe84ctytYhKHUi',\n    serumAsks: 'HMifR9pTkhHGaa31LBUFr8KD4ggRRRhH5NoG5ZjuHA6C',\n    serumEventQueue: 'BSKDaDGxDzhLP91fSK7dL42aYrjJiSNazmgSV3VEyCsr',\n    serumCoinVaultAccount: '8UyekuWh39J7YWEquLP5rft9aEgCmBRTzKwCDjhbq3dq',\n    serumPcVaultAccount: '2w4EZCYF8HMLrAFcDXefZcVyFfSJLfFyFRTSaoeGXyoQ',\n    serumVaultSigner: '7ieataxFqG3ob8dFXgNkNjjmoWqEtJ17wHFcX7RXZMaU',\n    official: true,\n  },\n  {\n    name: 'VI-USDC',\n    coin: { ...TOKENS.VI },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['VI-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: 'MphbxYtji1FSkm7G2FNGpUUz5AWn7iRPNFAvEqD4mzE',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '6zLi1A5MYMVBtaJ8T1Un5MYoNvvaLBXo3Y1wSytdxG9c',\n    ammTargetOrders: 'FavPWAiHfGL1rYGwWMMY26B8bA6y5pkhbdq6jvv5FvM2',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '8TePpe8C43YiphVZQPyeUUL7dy1gv1vu99bwMLrnxDUU',\n    poolPcTokenAccount: 'Ac7fBPfyitRUgN2nTJ56nGfuYK6NXsC96aKgDgZSCReK',\n    poolWithdrawQueue: 'EQtU6bpd6AX3C4LnzXXHbuyrooDQE1a6xgvoBfBFvrx7',\n    poolTempLpTokenAccount: 'FWn67c222MrFFuvnAQvFHFksqD989F8fPkX8xqWBCrK5',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '5fbYoaSBvAD8rW6zXo6oWqcCsgbYZCecbxAouk97p8SM',\n    serumBids: 'D6eckG9iezMUAqt4E8vwHt9enkV9Sw3Fyj4fFPCkRaRW',\n    serumAsks: '32HGbWJsPr1bZd8XnvESgCY94XK4hSLypfNiEDxFzDve',\n    serumEventQueue: 'BcFtMNmx5B47F6VXocr9YJqCWHLybayC67rvKtaZ7iS2',\n    serumCoinVaultAccount: '9sS11MD83k3Zn9VzYzyEZSviSXwJtUtVnc9NMq4MUpkf',\n    serumPcVaultAccount: 'HQhCfR2hUgMopxh2dpfpTGccG55gGpwn2QNJCHpvrcyL',\n    serumVaultSigner: '14jVcqFL27atPUFhYoFtVgbCa2tnvfeayNqoukaPfP7h',\n    official: true,\n  },\n  {\n    name: 'SOLC-USDT',\n    coin: { ...TOKENS.SOLC },\n    pc: { ...TOKENS.USDT },\n    lp: { ...LP_TOKENS['SOLC-USDT-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: '783kPvwHwDXaU32kV8NK5dB4JVeMWQwe8a3WUNZFpupr',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'CxevWceR45vLckW5GwJf2P8pBHgivG7X852z43dwHzFA',\n    ammTargetOrders: 'BQi5hcjDTGFVE5KkQu2aoqzcSWVV432k881Zb8BEMnyT',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'GCiihp9tZEcUbXuvBk2B5xaXq4KjCoHunmsVMQaFHKJv',\n    poolPcTokenAccount: '9ZsiqAMG5dnpjwRFxJj3zvHCsYYZdZNJmP8fYfJkR1VZ',\n    poolWithdrawQueue: '8EFyi6Lz1DbavbwwVg8rAVfuFh4au2cxCdJbxYdrRkaY',\n    poolTempLpTokenAccount: 'G49ujYznJPAhZS6gZHp8gfFNrtNKvGCYtZPhBqvWxRQz',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'HYM1HS6MM4E1NxgHPH4Wnth7ztXsYTpbB2Rh9raje8Xq',\n    serumBids: '5RrrwmRQcHsrWyQffDbNQMPATdM6W21kHbvdUT3L4n1x',\n    serumAsks: '6JXFumfL3e3DhK48aR9JhjKQRGqWW8nWPXkB8GuAbYZU',\n    serumEventQueue: '4EPZfsmz8JgmdbgEY7zZ9rxchqbCkqXFWyvHtL9j3zx4',\n    serumCoinVaultAccount: 'CF3iPT4V6HrD1iN3kVka2LFkDnYkNfJbgWqAdfFwK7XG',\n    serumPcVaultAccount: 'H5KmunmdEYA6FpiDAQPH3xXKeTtQppkiDL27ccvoSiCL',\n    serumVaultSigner: '39uZFr8KuW6puPcovZ8h3J7xCToEQbySsLBN2UGUEdSG',\n    official: true,\n  },\n  {\n    name: 'STR-USDC',\n    coin: { ...TOKENS.STR },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['STR-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: 'E9Z2JeEKS2WGGyA18mGU33rnQskK9moPhM4tdzrv24fh',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '2VXhUYA8r9dbajVrpYPhph2n4LMTHvPq9FZxePLojMh1',\n    ammTargetOrders: '9Z7bnGEZj6rrTepJcf81mpgFT6CVQ5YehuH5aNBgi9cC',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'GwDeKNzQGLimDszBhpikJ85Kzngpsor77ts8Ry2SEwtg',\n    poolPcTokenAccount: '2RVjUrDtQVWL4j7nyYx8kDhifmhxAsZM7JRRETm4g9xy',\n    poolWithdrawQueue: 'F8jtVFch1Eu7GXNnAqC6vqsxyoHfjpxriFf6Zzv4TKju',\n    poolTempLpTokenAccount: 'BZeJqKxUTrxZ1zTVFUQ7xX5NDLwdwTEQYz9dJrPktE1Z',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '6vXecj4ipEXChK9uPAd5giWn6aB3fn5Lbu4eVMLX7rRU',\n    serumBids: 'EYHrFmKz2dH7PVRQ5GXg14DRSC9sHAd5QhgazjHBQH2t',\n    serumAsks: '8sC4E99kYkaYUK2G3AdXxXGJAapwBcdu54mtosQFjZZk',\n    serumEventQueue: '8sPnF53bonayqHfr73apPmpivx3ATH8YE4Tzu3JMCHLv',\n    serumCoinVaultAccount: 'Dy27M2AeDz3DfxmrV6JZQ8CRMzrz63QAMg2YCUaWF93x',\n    serumPcVaultAccount: 'HwTt653QDLgHKS4BjaTSFXjrJ1jVLKSTP7uwHLNNarvR',\n    serumVaultSigner: '6yCg8Dmgkg6pXoJBFEV7UFEWnLSPuAUAri9KTaVQ3PKE',\n    official: true,\n  },\n  {\n    name: 'SPWN-USDC',\n    coin: { ...TOKENS.SPWN },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['SPWN-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: 'Bhw7DbVwWMcTBXoKaWgsCaofL6QqmQQ65FCSGfgCEawm',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '8jG2uaaeBSKDDCw91qoKD8zcyCmXVbjoVz6MwyoY9hY1',\n    ammTargetOrders: 'CHXWrG2DV2T6ty4tEL2sFWhNq8JyDeYRiEWMKT3k6Jhh',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '31ug6DXqFG94kza6rqEc2j4Q4PCCncXapAFZcxMg7nPA',\n    poolPcTokenAccount: 'HucTXQXnH7RgmDimkZZ5GuUTdXVjRnc9DwNoDaM5cVXg',\n    poolWithdrawQueue: 'C1uTwAJC6Vic3WXJC5iAFLvjc3sFwiGM8ATmhKkfZhkV',\n    poolTempLpTokenAccount: 'GskjHddFmXpj4RtMfCDmKscD9qUfDkEfzPp3b15ZeruW',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'CMxieHNoWYgF5c6wS1yz1QYhxpxZV7MbDMp8c7EpiRGj',\n    serumBids: '5Mb67cTCeGgbEWwdXXw1qDTBeH27ZuHPEoLojqyDmwhX',\n    serumAsks: '9o8AxfYsiT5cv63rR1zrYr7r6jw7bP3p2pH9cJNAVo6X',\n    serumEventQueue: '2iTAShfDpxohfYM6stE3HVSUpXJ5m1sNzEFMeHKbAmQn',\n    serumCoinVaultAccount: 'EiQdjxmFWZeyRxizBfXPsXQrnsU6KfBvnANeXYvimELr',\n    serumPcVaultAccount: '5q1aff7VkkyHB6LvRg24PVEZNJCDPzcQpp29DuP2Gfjj',\n    serumVaultSigner: 'E623iAaJJzw5NJLBCtpFZbcn8iEnY3BsFHYfG1CYf2cm',\n    official: true,\n  },\n  {\n    name: 'ISOLA-USDT',\n    coin: { ...TOKENS.ISOLA },\n    pc: { ...TOKENS.USDT },\n    lp: { ...LP_TOKENS['ISOLA-USDT-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: '69Mo81rUPDgru4UbigPQovx7cYBxpEm44qQok8wcut4M',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'G1qyfVQgaYrUxemLV4acWZg9RG3C4RD4XqHu8B1AgcxA',\n    ammTargetOrders: 'Eqs2SKiUBQadw5KbPhbKNFA7LmSjF2T6iY3cxqDj3JE2',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'Avh1uyt3sFu2FUUCoMHmWssrN3nPw5GrAMX5wLLefs2L',\n    poolPcTokenAccount: 'Zfy5TtPXCEK8rxSbp2cb14WCR4aG4qGsgJLLdC7gxGe',\n    poolWithdrawQueue: '5Yhk3vYCDvmcRE9TQC5QREQw6fysTQRnZ7fXPqQdqdPY',\n    poolTempLpTokenAccount: 'CRDyUcasjeKwqeHziDXoHD7P9ho9K1V4aD7JN2vXJEm7',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '42QVcMqoXmHT94zaBXm9KeU7pqDfBuAPHYN9ADW8weCF',\n    serumBids: 'HNqcNhSHcXAcZJV45y4xyWqquuicdg88J73cTBbXLsuG',\n    serumAsks: 'J54QZ5LE535DVZxSzL45edE4d1nDrhbcq2NxrV9GTA6a',\n    serumEventQueue: 'DeypfVmbbp9ajhQdZCfx1EVkiEL3WVLPCHcRvTZgRcfZ',\n    serumCoinVaultAccount: 'FaRw8KMqoiuRAjunz2tDnJBVbPxeKKg8z4FNrHQtpnzu',\n    serumPcVaultAccount: '59c3uxz4qgKonm48oBHuwqrL1SdMV4WudQAsjrgw39kv',\n    serumVaultSigner: 'GMYEbrinZLmPMY6FRnFdmuHbYZ9Bz1PcTWmjqBMK5LuQ',\n    official: true,\n  },\n  {\n    name: 'TTT-USDC',\n    coin: { ...TOKENS.TTT },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['TTT-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: 'HcqHvH27wk42L1ND5YPhLDJu7oGsU7HGSreMiXdq5LNK',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '85ZThysvEWpvFQVaBySCjSufxBrBQ3x7oBM4Tb6Ltn7j',\n    ammTargetOrders: 'CJrGZVb2uSccqX98RyhukEPKWSMEuvcamnUuenLzj9pH',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'FEFD8JuYMeB3SRACZa5EsFJPoURHjsPsrKFjRpWJJr3G',\n    poolPcTokenAccount: 'g8uv7UBpdu9UkJCsqfMkGzMNtYqKXfh8m7rHFLNtmA6',\n    poolWithdrawQueue: 'EPyYVUgMAcY1Zu1vFD7aJPjPNpe18m7Ab4CVoV5AAp9q',\n    poolTempLpTokenAccount: '7yFVKL9K4othAe5PcBXL3WNVM6ebtC4M1PLqP3RQWidC',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '2sdQQDyBsHwQBRJFsYAGpLZcxzGscMUd5uxr8jowyYHs',\n    serumBids: '2TZ3U3wed6DeM6teUJfZCYFerthdG2xYKcYBUGZtTozE',\n    serumAsks: 'FTnrFFR7HtYFCi6citKX2NFgdAP2KumPdpSs23V8VQHa',\n    serumEventQueue: 'AVL9buJzjn69bo8ZtK6UacL7KaNKQSQyEJ9jPkmLjDbV',\n    serumCoinVaultAccount: 'HHBEQnNnPwMhRbyiVYvET2GfdFs2tUF4kcyYUd7mdU7k',\n    serumPcVaultAccount: 'AQ4XA4eUPbmkrxForC6P24gMW6ozv4XUY8HzuAs5SKsA',\n    serumVaultSigner: 'C98tgmCJpdXYgwsURupvWrA6zhzyGsbE3g4NUxi9PUG4',\n    official: true,\n  },\n  {\n    name: 'RUN-USDC',\n    coin: { ...TOKENS.RUN },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['RUN-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: 'zuivKkgkNFFkV9jfNpsU1p5tWNbDWUEx5XX16m4k2Ej',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'E1kouJkEmATcSrsbCcZLYo5YJnYkXjAD8GwW5RC4evXb',\n    ammTargetOrders: 'ECzY8XJHTLLspi3zmqh3vkeZSj5Dswh47MwZ6TWHpBQb',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'HAULecjkcF2GHGSQ566yRBuwRoHxH24YGZs1n6B3QpAG',\n    poolPcTokenAccount: '9mo6Dhx8RhrwNqxCBGcfqEZzmGPGr4hz1mfTdW8tpsq7',\n    poolWithdrawQueue: '839mt1VUqTTyK18ibCoMoZ6Lpm2EmzyocSqjPYGn4rXc',\n    poolTempLpTokenAccount: '4pnYCNbsdhywXRVZGWtGyEJ4Ng1CfYCue6xGJivKbVYo',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'HCvX4un57v1SdYQ2LFywaDYyZySqLHMQ5cojq5kQJM3y',\n    serumBids: '6KgrT2PgdBQEfFctsXhgFbLKTbFErVj2SBa3zJTkSbLd',\n    serumAsks: 'EVtsr3WNub2i9jVBEj9aHmsxrumBFmHoLp6QyhuzFP5G',\n    serumEventQueue: 'EpwsM7YCYEaC2LynGVSyWNUYugaxNYymPgqAX1cAvhKu',\n    serumCoinVaultAccount: 'MhKHNubLV6SpsTosFSFnx2cPTxhfXZRYtsw97sN74eu',\n    serumPcVaultAccount: '72SGvxnDRo9wuzcNrJxrpK5YNjXuwcfyBof9BuXELFhp',\n    serumVaultSigner: 'HxhgxLeE3agcvWNx9og8asUs7JKV8TXfQdo1qLK7uGUQ',\n    official: true,\n  },\n  {\n    name: 'CRWNY-USDC',\n    coin: { ...TOKENS.CRWNY },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['CRWNY-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: '4ELBQuq3ivhLamfCT36As5sXLkQDWRJw1pJ9JVFLp6gK',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'GLGAhYAAi8FuhxVys1ZqJZb1rw9p8JVM6YYxUeR9ZUfT',\n    ammTargetOrders: 'douEwhf1WA7ay18r7kGDYuwPNpBus3Tu5aApeLZGKSR',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: '3dkMWcJkghmvGeQGFUr7nKYWZjYNdxWg9riaxtT3xCHV',\n    poolPcTokenAccount: 'B7JNDmk3YG6bGbqcDMcBpNQJqau3HJPeFwvHATdVZRsG',\n    poolWithdrawQueue: '7yJL932ytN1pQQ6PYBbKt5eqRCYE2ixtGAdguv9mJV7u',\n    poolTempLpTokenAccount: 'DMzWN9j6ZMV6ebZ2ugW4ENvbsJUi1cJZBAAoZ9XQZzRs',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'H8GSFzSZmPNs4ANW9dPd5XTgrzWkta3CaT57TgWYs7SV',\n    serumBids: '3onFzW294iJT3ZW2rbfFbH9jErD4mcZistyMf8Xbbf8u',\n    serumAsks: '3chCWxohikbd9ENp62mLRSkjKi37MjokEUzLsdvtsyB5',\n    serumEventQueue: '7pVNda7bdZzdrU7WVchS5u3gAYG9x6NNUFuD7wzRgn2q',\n    serumCoinVaultAccount: 'B4n994TDxFeAz35YMEQZJvkhVtHmab5PRQUjgtigScAi',\n    serumPcVaultAccount: '2LAVDjbCkDPY4B3aLzgWs3VCEA2Rq6SJPjCqgBcB2N2L',\n    serumVaultSigner: 'HKdMHuRTgKEwGg26Ew1xUoGo4vesP6dN8dnLjFbDANfr',\n    official: true,\n  },\n  {\n    name: 'CRWNY-RAY',\n    coin: { ...TOKENS.CRWNY },\n    pc: { ...TOKENS.RAY },\n    lp: { ...LP_TOKENS['CRWNY-RAY-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: 'HARRXESCwid3xMi2qThag1PXzmp6rDhAzMR9THhFRQGf',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'HN5KP7RDZT5w1oPB6GRrqawYJFrtrY58Ck2tDxVrD5Af',\n    ammTargetOrders: 'FERGssxP2qEN9jEjQ2frQx3ckAneXJzXf6JMXZYmMRc6',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'FZKDZoUDjo5Ck2apVqSyk5ppKuUqSbNQgg4Uu7y6tjuK',\n    poolPcTokenAccount: 'okPqapFBcHoRRYyER9a8z1C4xBuueu5RbJGGhJ8TemS',\n    poolWithdrawQueue: 'CNkzEN6tueKqHwD4JhAFQa6LDT3kfYx91jBPxB3nsiR4',\n    poolTempLpTokenAccount: 'Cet73tyKCqjjUJxBueqtGxzy7C6STF3vP2MVzaFD8ryN',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '6NRE3U7BRWftimyzmKoNSseWDMMxzuoTefxCRBciwD3',\n    serumBids: '38V5FuifMSNoNdtCzPcxLuJzUQ2YAZ1w84pzqyQqwdCF',\n    serumAsks: 'Hz1qNHXFyfoz5FddGoszJgSp4dhaBn8GqbntUympRNkK',\n    serumEventQueue: 'CubKCz6q5Q8Q9ZnW5qTYY6M9q1WmEYuvuEtmKYbfjLjN',\n    serumCoinVaultAccount: 'DovSvXvzRUvUYWCzJCtbYHDGu9QTsfd4v3szLYK8qq9V',\n    serumPcVaultAccount: '54CyipC5PJnmEHwCPqEgzPEPVEMRdPebCxpoUbZBeZmC',\n    serumVaultSigner: '8NJSfgh9fPkRw1odRyJW2ftTeK5BnTUwKpiEGs93wktu',\n    official: true,\n  },\n  {\n    name: 'BLOCK-USDC',\n    coin: { ...TOKENS.BLOCK },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['BLOCK-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: 'CfBSfVTcYFJsD8vZ2fTiMGkUYFim2rv8weAoqHxUU2pn',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: '2ivrPyyMKcMmaAWcA6VReQ3qT41htQTJ4kfGcxGRiPTj',\n    ammTargetOrders: 'GBkiJYXviRDBDoXRbaK5BArHeisTYo3C65FgwjmXmCzL',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'GNzNnmSnXo1gABhtkgHvMfimQQMhwSz1RS4amTYaSN9y',\n    poolPcTokenAccount: 'BW2FHugQqPPgMrGRtfm1BaR5R3WP9TBCjnYt4PHcpbUn',\n    poolWithdrawQueue: '2fzhi1Qxp4FvFk4WNj1SV8kKe7kF4ZQgwLoopkQ4g2iL',\n    poolTempLpTokenAccount: 'GF6jDvmss3JinbbXh9EdZUo343ZRoFELEzJgnGM4WwBL',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '2b6GbUbY979QhRoWb2b9F3vNi7pcCGPDivuiKPHC56zY',\n    serumBids: 'FEmTdsfmszMxwi34aawEsZPT1cWqa41StEBfYnnshDYx',\n    serumAsks: 'CMnyFZKG8zWWajbtZfduqtRX74cRyyVKXakM6NYe7MAN',\n    serumEventQueue: '2rrYmuEieEyRTBKF39AqTdskde8kLfVSieanVWyCZNJQ',\n    serumCoinVaultAccount: '6Fxz92QGSJrWEmHFuxqMJwBiq1MPxLNzQfKw5ZRsLWRw',\n    serumPcVaultAccount: 'LcANK8GJ4uY47QyDitYBiQUzHkHWKCuoPXdCq3YLxW3',\n    serumVaultSigner: '5TXTSZpWoVoJpfdf848ov8pj9NYJZ7we9BM746sMUyfF',\n    official: true,\n  },\n  {\n    name: 'REAL-USDC',\n    coin: { ...TOKENS.REAL },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['REAL-USDC-V4'] },\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: 'A7ZxDrK9LSkVXhfRTu2pRCinwYfdxW2kK6DaJk12jRWw',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'E1sVmUNF4iHXLLz4yQqYufzrmzvm9aCF6NPR5C328Dzo',\n    ammTargetOrders: '9zHNsBf6kySxnPuX75muu6gm8STUWkyGjZ4od5HPmJBd',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'ByU8cczVRmBw3TxdKD8WUHNZgpwDPZ9ZgHTdreeTV5oX',\n    poolPcTokenAccount: '7GYr4FqaDsC6vUoL4nN8EfRUe1aoxbdv22jr4diurJ8C',\n    poolWithdrawQueue: 'F5fCEgeh9zCKkQgN6jKnxgeMXMoSWuLhX1HW9nUmZw9Y',\n    poolTempLpTokenAccount: '7JWNRx2fhWthFePZtfSx3v2eDYb2xuqGDGg8ZabjPtAw',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: 'AU8VGwd4NGRbcMz9LT6Fu2LP69LPAbWUJ6gEfEgeYM33',\n    serumBids: 'G1K2p1C3S4SgwnFw4A4fEbmFoshAHtLmpQCdFz7BiYaD',\n    serumAsks: 'ESw6KKnLP3nRGtF1sgwc6EdoY5wWawkTWwa5zEjgDkHu',\n    serumEventQueue: 'Bii4W3FfohnHhGUDa1mA8TH82FMEQeYk48BB3zJNcfSQ',\n    serumCoinVaultAccount: '3VnrHq1JWSD4DRdT1TAW4qG7nBVUFSh8mVRnkCtzV4Ry',\n    serumPcVaultAccount: '6mSGzi7P2mM4tE6hkEsjXfZ4zR2LjctrNA3DwBvULrJU',\n    serumVaultSigner: 'BT3TcX9UsgeVgTWN6TgvSM11mx4GbkDUCMY1mnJbkxPq',\n    official: true,\n  },\n  {\n    name: 'PRISM-USDC',\n    coin: { ...TOKENS.PRISM },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['PRISM-USDC-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: '4ZYiiVakejxGyJ3tuBzYWoHyEV1rk7Hm7viydG6DNaUN',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'BbLHAwRx9RtGCSYrFM9wzxqx3ZmhLMHHSYRNpKnYwrsh',\n    ammTargetOrders: '4MchsSuWUvVLWQGFsFxjEDY6vM8FhHBpkVEuYPdC8qq5',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'Fjrkf7uoCLgZG8jTWo71kyqUubqsi6YRagQGMxmQEvQe',\n    poolPcTokenAccount: '5xR14K7Wn1ABG3HyNCboR8VVwVAk9Rj2uShVVnCwFiNd',\n    poolWithdrawQueue: '9bMsYn9jr1TvYfktB4Js8hvwTjuxbMNZPFk6AJVp3icL',\n    poolTempLpTokenAccount: 'Gu72XLrP2yKyRpVK65Xf7eEgJFTWQEZ5Uk9D145LuSkv',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '2MvXnxngd1gKp6gE8Q63wiPHSpveWcx8x4wf43VpyiA6',\n    serumBids: 'FYWe7bjakwEz22Tz9ujt3vNtzuAZX5B9ceVutUrqHS1v',\n    serumAsks: '8vD5fzFY3AVv6m6oB88shTbaDxYa6ufVeTHhy5zJ5RkR',\n    serumEventQueue: 'LczT5PA64Uq8CBYCN73DH27e2X5r2PwPZLFCTTCUoJS',\n    serumCoinVaultAccount: 'pLX8sCH4jNJVS57goC6Y7ujzLH1gG88Mej5UWwc3eFo',\n    serumPcVaultAccount: '4mBaTptwEPRwdBzBfLu2SixTAawqqrP6UsoFgfUcfZr9',\n    serumVaultSigner: '74GRGpvNtRDZkx8M9SVBU5Z4of6j4vPFWQyFX3ZvV3fg',\n    official: true,\n  },\n  {\n    name: 'MBS-USDC',\n    coin: { ...TOKENS.MBS },\n    pc: { ...TOKENS.USDC },\n    lp: { ...LP_TOKENS['MBS-USDC-V4'] },\n\n    version: 4,\n    programId: LIQUIDITY_POOL_PROGRAM_ID_V4,\n    ammId: '6eRECBcCVP82AvAd6Di4rZApa2btLf8RDUqrTigt4hS4',\n    ammAuthority: '5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1',\n    ammOpenOrders: 'CiLegtV4wfcZ7V6RJKvesnguRpz9VRQgNNBjTxXjMkWA',\n    ammTargetOrders: '5VbiaMEzVspC3Lq4aAWmZmjP3TRccoZnK1tZY4sUkXQw',\n    // no need\n    ammQuantities: NATIVE_SOL.mintAddress,\n    poolCoinTokenAccount: 'ApC5piXBR1JCJnVxBrMUtbWxFXc8EZ3TmKw9no4tnZSA',\n    poolPcTokenAccount: '3bWNBbLQZrz3TnfNdSRodqgwQHy3XaWbknT7BA9d7pec',\n    poolWithdrawQueue: 'Cs9139e2htmeZEscdCNBZGufmomzsExhAZN8p3g7W6gW',\n    poolTempLpTokenAccount: 'GCdY8Qc2zQVp1XiDyBGxstvD5P7RsSDXbprtkn1DoF4k',\n    serumProgramId: SERUM_PROGRAM_ID_V3,\n    serumMarket: '9sUSmgx78tt692hzwiRdBdfwjxPF6nsYeJfPCrTz6vxm',\n    serumBids: 'BQfvcMGzSApw8BAdwiWGJDTWQCXqaHwmGrFdLjM4CAgv',\n    serumAsks: '9rNcJYeyVMSqYLA4tYv8r9K9PTMwcnLFgknbtcWhLcKS',\n    serumEventQueue: '8ZwrnG4dyPwVLh4MBL2CAfptQQsR9BY6pcHHpYAsUuEH',\n    serumCoinVaultAccount: 'H8WFSuFwvjWFdvojecKym6UJVSk3ZLukEjeSBbzbXKYX',\n    serumPcVaultAccount: 'DDr2SB8aM3xPCoQoLFZTXGvpAz6aFWaTR34EcbG9vWhK',\n    serumVaultSigner: '3HFfyFAWGizgqBrX6AQnmBa3C1S2Dq5rNed3A9mY98CV',\n    official: true,\n  },\n];\n","import { PublicKey } from '@solana/web3.js';\n\nexport const SYSTEM_PROGRAM_ID = new PublicKey(\n  '11111111111111111111111111111111',\n);\nexport const TOKEN_PROGRAM_ID = new PublicKey(\n  'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n);\nexport const MEMO_PROGRAM_ID = new PublicKey(\n  'Memo1UhkJRfHyvLMcVucJwxXeuD728EqVDDwQDxFMNo',\n);\nexport const RENT_PROGRAM_ID = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\nexport const CLOCK_PROGRAM_ID = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\nexport const ASSOCIATED_TOKEN_PROGRAM_ID = new PublicKey(\n  'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',\n);\n\nexport const SERUM_PROGRAM_ID_V2 =\n  'EUqojwWA2rd19FZrzeBncJsm38Jm1hEhE3zsmX3bRc2o';\nexport const SERUM_PROGRAM_ID_V3 =\n  '9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin';\n\nexport const LIQUIDITY_POOL_PROGRAM_ID_V2 =\n  'RVKd61ztZW9GUwhRbbLoYVRE5Xf1B2tVscKqwZqXgEr';\nexport const LIQUIDITY_POOL_PROGRAM_ID_V3 =\n  '27haf8L6oxUeXrHrgEgsexjSY5hbVUWEmvv9Nyxg8vQv';\nexport const LIQUIDITY_POOL_PROGRAM_ID_V4 =\n  '675kPX9MHTjS2zt1qfr1NYHuzeLXfQM9H24wFSUt1Mp8';\n\nexport const STABLE_POOL_PROGRAM_ID =\n  '5quBtoiQqxF9Jv6KYKctB59NT3gtJD2Y65kdnB1Uev3h';\n\nexport const ROUTE_SWAP_PROGRAM_ID =\n  '93BgeoLHo5AdNbpqy9bD12dtfxtA5M2fh3rj72bE35Y3';\n\nexport const STAKE_PROGRAM_ID = 'EhhTKczWMGQt46ynNeRX1WfeagwwJd7ufHvCDjRxjo5Q';\nexport const STAKE_PROGRAM_ID_V4 =\n  'CBuCnLe26faBpcBP2fktp4rp8abpcAnTWft6ZrP5Q4T';\nexport const STAKE_PROGRAM_ID_V5 =\n  '9KEPoZmtHUrBbhWN1v1KWLMkkvwY6WLtAVUCPRtRjP4z';\n\nexport const IDO_PROGRAM_ID = '6FJon3QE27qgPVggARueB22hLvoh22VzJpXv4rBEoSLF';\nexport const IDO_PROGRAM_ID_V2 = 'CC12se5To1CdEuw7fDS27B7Geo5jJyL7t5UK2B44NgiH';\nexport const IDO_PROGRAM_ID_V3 = '9HzJyW1qZsEiSfMUf6L2jo3CcTKAyBmSyKdwQeYisHrC';\n\nexport const AUTHORITY_AMM = 'amm authority';\nexport const AMM_ASSOCIATED_SEED = 'amm_associated_seed';\nexport const TARGET_ASSOCIATED_SEED = 'target_associated_seed';\nexport const WITHDRAW_ASSOCIATED_SEED = 'withdraw_associated_seed';\nexport const OPEN_ORDER_ASSOCIATED_SEED = 'open_order_associated_seed';\nexport const COIN_VAULT_ASSOCIATED_SEED = 'coin_vault_associated_seed';\nexport const PC_VAULT_ASSOCIATED_SEED = 'pc_vault_associated_seed';\nexport const LP_MINT_ASSOCIATED_SEED = 'lp_mint_associated_seed';\nexport const TEMP_LP_TOKEN_ASSOCIATED_SEED = 'temp_lp_token_associated_seed';\n","import React, { createContext, useReducer } from 'react';\n\nconst ContextStore = createContext();\n\nconst initStore = {\n  solBalance: 0,\n  tokenAccounts: {},\n  liquidityPools: {},\n  auxiliaryTokenAccounts: [],\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'DO_UPDATE':\n      return Object.assign({}, state, action.payload);\n    default:\n      return state;\n  }\n};\n\nconst WrapContext = (props) => {\n  const [state, dispatch] = useReducer(reducer, initStore);\n\n  return (\n    <ContextStore.Provider\n      value={{\n        ...state,\n        dispatch,\n      }}\n    >\n      {props.children}\n    </ContextStore.Provider>\n  );\n};\n\nexport default ContextStore;\nexport { WrapContext };\n","/* eslint-disable */\n\nimport { publicKey, u128, u64 } from '@project-serum/borsh';\nimport { closeAccount } from '@project-serum/serum/lib/token-instructions';\nimport {\n  Connection,\n  PublicKey,\n  Transaction,\n  TransactionInstruction,\n} from '@solana/web3.js';\nimport BigNumber from 'bignumber.js';\n// @ts-ignore\nimport { nu64, struct, u8 } from 'buffer-layout';\n\nimport { TOKEN_PROGRAM_ID } from 'src/utils/ids';\nimport {\n  getLpMintByTokenMintAddresses,\n  getPoolByLpMintAddress,\n  getPoolByTokenMintAddresses,\n  LIQUIDITY_POOLS,\n  LiquidityPoolInfo,\n} from 'src/utils/pools';\nimport { TokenAmount } from 'src/utils/safe-math';\nimport { LP_TOKENS, NATIVE_SOL, TokenInfo, TOKENS } from 'src/utils/tokens';\nimport {\n  commitment,\n  createAssociatedTokenAccountIfNotExist,\n  createTokenAccountIfNotExist,\n  getMultipleAccounts,\n  sendTransaction,\n} from 'src/utils/web3';\nimport { getBigNumber, MINT_LAYOUT } from './layouts';\n\nexport {\n  getLpMintByTokenMintAddresses,\n  getPoolByLpMintAddress,\n  getPoolByTokenMintAddresses,\n};\n\nexport function getPrice(poolInfo: LiquidityPoolInfo, coinBase = true) {\n  const { coin, pc } = poolInfo;\n\n  if (!coin.balance || !pc.balance) {\n    return new BigNumber(0);\n  }\n\n  if (poolInfo.version === 5) {\n    const { currentK = 1 } = poolInfo;\n    const systemDecimal = Math.max(coin.decimals, pc.decimals);\n    const k = currentK / (10 ** systemDecimal * 10 ** systemDecimal);\n    const y = parseFloat(coin.balance.fixed());\n    let price = Math.sqrt(((10 - 1) * y * y) / (10 * y * y - k));\n    if (!coinBase) price = 1 / price;\n    return new BigNumber(price);\n  } else if (coinBase) {\n    return pc.balance.toEther().dividedBy(coin.balance.toEther());\n  } else {\n    return coin.balance.toEther().dividedBy(pc.balance.toEther());\n  }\n}\n\nexport function getOutAmount(\n  poolInfo: LiquidityPoolInfo,\n  amount: string,\n  fromCoinMint: string,\n  toCoinMint: string,\n  slippage: number,\n) {\n  const { coin, pc } = poolInfo;\n\n  const price = getPrice(poolInfo);\n  const fromAmount = new BigNumber(amount);\n  let outAmount = new BigNumber(0);\n\n  const percent = new BigNumber(100).plus(slippage).dividedBy(100);\n\n  if (!coin.balance || !pc.balance) {\n    return outAmount;\n  }\n\n  if (fromCoinMint === coin.mintAddress && toCoinMint === pc.mintAddress) {\n    // outcoin is pc\n    outAmount = fromAmount.multipliedBy(price);\n    outAmount = outAmount.multipliedBy(percent);\n  } else if (\n    fromCoinMint === pc.mintAddress &&\n    toCoinMint === coin.mintAddress\n  ) {\n    // outcoin is coin\n    outAmount = fromAmount.dividedBy(price);\n    outAmount = outAmount.multipliedBy(percent);\n  }\n\n  return outAmount;\n}\n\nexport function getOutAmountStable(\n  poolInfo: any,\n  amount: string,\n  fromCoinMint: string,\n  toCoinMint: string,\n  slippage: number,\n) {\n  const { coin, pc, currentK } = poolInfo;\n  const systemDecimal = Math.max(coin.decimals, pc.decimals);\n  const k = currentK / (10 ** systemDecimal * 10 ** systemDecimal);\n  const y = parseFloat(coin.balance.fixed());\n  const price = Math.sqrt(((10 - 1) * y * y) / (10 * y * y - k));\n\n  const amountIn = parseFloat(amount);\n  let amountOut = 1;\n  if (fromCoinMint === coin.mintAddress && toCoinMint === pc.mintAddress) {\n    // outcoin is pc\n    amountOut = amountIn * price;\n  } else if (\n    fromCoinMint === pc.mintAddress &&\n    toCoinMint === coin.mintAddress\n  ) {\n    // outcoin is coin\n    amountOut = amountIn / price;\n  }\n\n  const amountOutWithSlippage = amountOut / (1 - slippage / 100);\n\n  // const price = Math.sqrt((10 - 1) * y * y /(10 * y * y - k))\n  // const afterY = y - amountOut\n  // const afterPrice = Math.sqrt((10 - 1) * afterY  * afterY /(10 * afterY * afterY - k))\n  // const priceImpact = (beforePrice - afterPrice) / beforePrice * 100\n\n  return new BigNumber(amountOutWithSlippage);\n}\n\n/* eslint-disable */\nexport async function addLiquidity(\n  connection: Connection | undefined | null,\n  wallet: any | undefined | null,\n  poolInfo: LiquidityPoolInfo | undefined | null,\n  fromCoinAccount: string | undefined | null,\n  toCoinAccount: string | undefined | null,\n  lpAccount: string | undefined | null,\n  fromCoin: TokenInfo | undefined | null,\n  toCoin: TokenInfo | undefined | null,\n  fromAmount: string | undefined | null,\n  toAmount: string | undefined | null,\n  fixedCoin: string,\n): Promise<string> {\n  if (!connection || !wallet) throw new Error('Miss connection');\n  if (!poolInfo || !fromCoin || !toCoin) {\n    throw new Error('Miss pool infomations');\n  }\n  if (!fromCoinAccount || !toCoinAccount) {\n    throw new Error('Miss account infomations');\n  }\n  if (!fromAmount || !toAmount) {\n    throw new Error('Miss amount infomations');\n  }\n\n  const transaction = new Transaction();\n  const signers: any = [];\n\n  const owner = wallet.publicKey;\n\n  const userAccounts = [\n    new PublicKey(fromCoinAccount),\n    new PublicKey(toCoinAccount),\n  ];\n  const userAmounts = [fromAmount, toAmount];\n\n  if (\n    poolInfo.coin.mintAddress === toCoin.mintAddress &&\n    poolInfo.pc.mintAddress === fromCoin.mintAddress\n  ) {\n    userAccounts.reverse();\n    userAmounts.reverse();\n  }\n\n  const userCoinTokenAccount = userAccounts[0];\n  const userPcTokenAccount = userAccounts[1];\n  const coinAmount = getBigNumber(\n    new TokenAmount(userAmounts[0], poolInfo.coin.decimals, false).wei,\n  );\n  const pcAmount = getBigNumber(\n    new TokenAmount(userAmounts[1], poolInfo.pc.decimals, false).wei,\n  );\n\n  let wrappedCoinSolAccount;\n  if (poolInfo.coin.mintAddress === NATIVE_SOL.mintAddress) {\n    wrappedCoinSolAccount = await createTokenAccountIfNotExist(\n      connection,\n      wrappedCoinSolAccount,\n      owner,\n      TOKENS.WSOL.mintAddress,\n      coinAmount + 1e7,\n      transaction,\n      signers,\n    );\n  }\n  let wrappedSolAccount;\n  if (poolInfo.pc.mintAddress === NATIVE_SOL.mintAddress) {\n    wrappedSolAccount = await createTokenAccountIfNotExist(\n      connection,\n      wrappedSolAccount,\n      owner,\n      TOKENS.WSOL.mintAddress,\n      pcAmount + 1e7,\n      transaction,\n      signers,\n    );\n  }\n\n  let userLpTokenAccount = await createAssociatedTokenAccountIfNotExist(\n    lpAccount,\n    owner,\n    poolInfo.lp.mintAddress,\n    transaction,\n  );\n\n  transaction.add(\n    [4, 5].includes(poolInfo.version)\n      ? addLiquidityInstructionV4(\n          new PublicKey(poolInfo.programId),\n\n          new PublicKey(poolInfo.ammId),\n          new PublicKey(poolInfo.ammAuthority),\n          new PublicKey(poolInfo.ammOpenOrders),\n          new PublicKey(poolInfo.ammTargetOrders),\n          new PublicKey(poolInfo.lp.mintAddress),\n          new PublicKey(poolInfo.poolCoinTokenAccount),\n          new PublicKey(poolInfo.poolPcTokenAccount),\n\n          new PublicKey(poolInfo.serumMarket),\n\n          wrappedCoinSolAccount ? wrappedCoinSolAccount : userCoinTokenAccount,\n          wrappedSolAccount ? wrappedSolAccount : userPcTokenAccount,\n          userLpTokenAccount,\n          owner,\n\n          coinAmount,\n          pcAmount,\n          fixedCoin === poolInfo.coin.mintAddress ? 0 : 1,\n        )\n      : addLiquidityInstruction(\n          new PublicKey(poolInfo.programId),\n\n          new PublicKey(poolInfo.ammId),\n          new PublicKey(poolInfo.ammAuthority),\n          new PublicKey(poolInfo.ammOpenOrders),\n          new PublicKey(poolInfo.ammQuantities),\n          new PublicKey(poolInfo.lp.mintAddress),\n          new PublicKey(poolInfo.poolCoinTokenAccount),\n          new PublicKey(poolInfo.poolPcTokenAccount),\n\n          new PublicKey(poolInfo.serumMarket),\n\n          wrappedCoinSolAccount ? wrappedCoinSolAccount : userCoinTokenAccount,\n          wrappedSolAccount ? wrappedSolAccount : userPcTokenAccount,\n          userLpTokenAccount,\n          owner,\n\n          coinAmount,\n          pcAmount,\n          fixedCoin === poolInfo.coin.mintAddress ? 0 : 1,\n        ),\n  );\n\n  if (wrappedCoinSolAccount) {\n    transaction.add(\n      closeAccount({\n        source: wrappedCoinSolAccount,\n        destination: owner,\n        owner: owner,\n      }),\n    );\n  }\n  if (wrappedSolAccount) {\n    transaction.add(\n      closeAccount({\n        source: wrappedSolAccount,\n        destination: owner,\n        owner: owner,\n      }),\n    );\n  }\n\n  return await sendTransaction(connection, wallet, transaction, signers);\n}\n\nexport async function removeLiquidity(\n  connection: Connection | undefined | null,\n  wallet: any | undefined | null,\n  poolInfo: LiquidityPoolInfo | undefined | null,\n  lpAccount: string | undefined | null,\n  fromCoinAccount: string | undefined | null,\n  toCoinAccount: string | undefined | null,\n  amount: string | undefined | null,\n) {\n  if (!connection || !wallet) throw new Error('Miss connection');\n  if (!poolInfo) throw new Error('Miss pool infomations');\n\n  if (!lpAccount) throw new Error('Miss account infomations');\n\n  if (!amount) throw new Error('Miss amount infomations');\n\n  const transaction = new Transaction();\n  const signers: any = [];\n\n  const owner = wallet.publicKey;\n\n  const lpAmount = getBigNumber(\n    new TokenAmount(amount, poolInfo.lp.decimals, false).wei,\n  );\n\n  let needCloseFromTokenAccount = false;\n  let newFromTokenAccount;\n  if (poolInfo.coin.mintAddress === NATIVE_SOL.mintAddress) {\n    newFromTokenAccount = await createTokenAccountIfNotExist(\n      connection,\n      newFromTokenAccount,\n      owner,\n      TOKENS.WSOL.mintAddress,\n      null,\n      transaction,\n      signers,\n    );\n    needCloseFromTokenAccount = true;\n  } else {\n    newFromTokenAccount = await createAssociatedTokenAccountIfNotExist(\n      fromCoinAccount,\n      owner,\n      poolInfo.coin.mintAddress,\n      transaction,\n    );\n  }\n\n  let needCloseToTokenAccount = false;\n  let newToTokenAccount;\n  if (poolInfo.pc.mintAddress === NATIVE_SOL.mintAddress) {\n    newToTokenAccount = await createTokenAccountIfNotExist(\n      connection,\n      newToTokenAccount,\n      owner,\n      TOKENS.WSOL.mintAddress,\n      null,\n      transaction,\n      signers,\n    );\n    needCloseToTokenAccount = true;\n  } else {\n    newToTokenAccount = await createAssociatedTokenAccountIfNotExist(\n      toCoinAccount,\n      owner,\n      poolInfo.pc.mintAddress === NATIVE_SOL.mintAddress\n        ? TOKENS.WSOL.mintAddress\n        : poolInfo.pc.mintAddress,\n      transaction,\n    );\n  }\n\n  transaction.add(\n    [4, 5].includes(poolInfo.version)\n      ? removeLiquidityInstructionV4(\n          new PublicKey(poolInfo.programId),\n\n          new PublicKey(poolInfo.ammId),\n          new PublicKey(poolInfo.ammAuthority),\n          new PublicKey(poolInfo.ammOpenOrders),\n          new PublicKey(poolInfo.ammTargetOrders),\n          new PublicKey(poolInfo.lp.mintAddress),\n          new PublicKey(poolInfo.poolCoinTokenAccount),\n          new PublicKey(poolInfo.poolPcTokenAccount),\n          new PublicKey(poolInfo.poolWithdrawQueue),\n          new PublicKey(poolInfo.poolTempLpTokenAccount),\n\n          new PublicKey(poolInfo.serumProgramId),\n          new PublicKey(poolInfo.serumMarket),\n          new PublicKey(poolInfo.serumCoinVaultAccount),\n          new PublicKey(poolInfo.serumPcVaultAccount),\n          new PublicKey(poolInfo.serumVaultSigner),\n\n          new PublicKey(lpAccount),\n          newFromTokenAccount,\n          newToTokenAccount,\n          owner,\n\n          poolInfo,\n\n          lpAmount,\n        )\n      : removeLiquidityInstruction(\n          new PublicKey(poolInfo.programId),\n\n          new PublicKey(poolInfo.ammId),\n          new PublicKey(poolInfo.ammAuthority),\n          new PublicKey(poolInfo.ammOpenOrders),\n          new PublicKey(poolInfo.ammQuantities),\n          new PublicKey(poolInfo.lp.mintAddress),\n          new PublicKey(poolInfo.poolCoinTokenAccount),\n          new PublicKey(poolInfo.poolPcTokenAccount),\n          new PublicKey(poolInfo.poolWithdrawQueue),\n          new PublicKey(poolInfo.poolTempLpTokenAccount),\n\n          new PublicKey(poolInfo.serumProgramId),\n          new PublicKey(poolInfo.serumMarket),\n          new PublicKey(poolInfo.serumCoinVaultAccount),\n          new PublicKey(poolInfo.serumPcVaultAccount),\n          new PublicKey(poolInfo.serumVaultSigner),\n\n          new PublicKey(lpAccount),\n          newFromTokenAccount,\n          newToTokenAccount,\n          owner,\n\n          lpAmount,\n        ),\n  );\n\n  if (needCloseFromTokenAccount) {\n    transaction.add(\n      closeAccount({\n        source: newFromTokenAccount,\n        destination: owner,\n        owner: owner,\n      }),\n    );\n  }\n  if (needCloseToTokenAccount) {\n    transaction.add(\n      closeAccount({\n        source: newToTokenAccount,\n        destination: owner,\n        owner: owner,\n      }),\n    );\n  }\n\n  return await sendTransaction(connection, wallet, transaction, signers);\n}\n\nexport function addLiquidityInstruction(\n  programId: PublicKey,\n  // tokenProgramId: PublicKey,\n  // amm\n  ammId: PublicKey,\n  ammAuthority: PublicKey,\n  ammOpenOrders: PublicKey,\n  ammQuantities: PublicKey,\n  lpMintAddress: PublicKey,\n  poolCoinTokenAccount: PublicKey,\n  poolPcTokenAccount: PublicKey,\n  // serum\n  serumMarket: PublicKey,\n  // user\n  userCoinTokenAccount: PublicKey,\n  userPcTokenAccount: PublicKey,\n  userLpTokenAccount: PublicKey,\n  userOwner: PublicKey,\n\n  maxCoinAmount: number,\n  maxPcAmount: number,\n  fixedFromCoin: number,\n): TransactionInstruction {\n  const dataLayout = struct([\n    u8('instruction'),\n    nu64('maxCoinAmount'),\n    nu64('maxPcAmount'),\n    nu64('fixedFromCoin'),\n  ]);\n\n  const keys = [\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    { pubkey: ammId, isSigner: false, isWritable: true },\n    { pubkey: ammAuthority, isSigner: false, isWritable: false },\n    { pubkey: ammOpenOrders, isSigner: false, isWritable: false },\n    { pubkey: ammQuantities, isSigner: false, isWritable: true },\n    { pubkey: lpMintAddress, isSigner: false, isWritable: true },\n    { pubkey: poolCoinTokenAccount, isSigner: false, isWritable: true },\n    { pubkey: poolPcTokenAccount, isSigner: false, isWritable: true },\n    { pubkey: serumMarket, isSigner: false, isWritable: false },\n    { pubkey: userCoinTokenAccount, isSigner: false, isWritable: true },\n    { pubkey: userPcTokenAccount, isSigner: false, isWritable: true },\n    { pubkey: userLpTokenAccount, isSigner: false, isWritable: true },\n    { pubkey: userOwner, isSigner: true, isWritable: false },\n  ];\n\n  const data = Buffer.alloc(dataLayout.span);\n  dataLayout.encode(\n    {\n      instruction: 3,\n      maxCoinAmount,\n      maxPcAmount,\n      fixedFromCoin,\n    },\n    data,\n  );\n\n  return new TransactionInstruction({\n    keys,\n    programId,\n    data,\n  });\n}\n\nexport function addLiquidityInstructionV4(\n  programId: PublicKey,\n  // tokenProgramId: PublicKey,\n  // amm\n  ammId: PublicKey,\n  ammAuthority: PublicKey,\n  ammOpenOrders: PublicKey,\n  ammTargetOrders: PublicKey,\n  lpMintAddress: PublicKey,\n  poolCoinTokenAccount: PublicKey,\n  poolPcTokenAccount: PublicKey,\n  // serum\n  serumMarket: PublicKey,\n  // user\n  userCoinTokenAccount: PublicKey,\n  userPcTokenAccount: PublicKey,\n  userLpTokenAccount: PublicKey,\n  userOwner: PublicKey,\n\n  maxCoinAmount: number,\n  maxPcAmount: number,\n  fixedFromCoin: number,\n): TransactionInstruction {\n  const dataLayout = struct([\n    u8('instruction'),\n    nu64('maxCoinAmount'),\n    nu64('maxPcAmount'),\n    nu64('fixedFromCoin'),\n  ]);\n\n  const keys = [\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    { pubkey: ammId, isSigner: false, isWritable: true },\n    { pubkey: ammAuthority, isSigner: false, isWritable: false },\n    { pubkey: ammOpenOrders, isSigner: false, isWritable: false },\n    { pubkey: ammTargetOrders, isSigner: false, isWritable: true },\n    { pubkey: lpMintAddress, isSigner: false, isWritable: true },\n    { pubkey: poolCoinTokenAccount, isSigner: false, isWritable: true },\n    { pubkey: poolPcTokenAccount, isSigner: false, isWritable: true },\n    { pubkey: serumMarket, isSigner: false, isWritable: false },\n    { pubkey: userCoinTokenAccount, isSigner: false, isWritable: true },\n    { pubkey: userPcTokenAccount, isSigner: false, isWritable: true },\n    { pubkey: userLpTokenAccount, isSigner: false, isWritable: true },\n    { pubkey: userOwner, isSigner: true, isWritable: false },\n  ];\n\n  const data = Buffer.alloc(dataLayout.span);\n  dataLayout.encode(\n    {\n      instruction: 3,\n      maxCoinAmount,\n      maxPcAmount,\n      fixedFromCoin,\n    },\n    data,\n  );\n\n  return new TransactionInstruction({\n    keys,\n    programId,\n    data,\n  });\n}\n\nexport function removeLiquidityInstruction(\n  programId: PublicKey,\n  // tokenProgramId: PublicKey,\n  // amm\n  ammId: PublicKey,\n  ammAuthority: PublicKey,\n  ammOpenOrders: PublicKey,\n  ammQuantities: PublicKey,\n  lpMintAddress: PublicKey,\n  poolCoinTokenAccount: PublicKey,\n  poolPcTokenAccount: PublicKey,\n  poolWithdrawQueue: PublicKey,\n  poolTempLpTokenAccount: PublicKey,\n  // serum\n  serumProgramId: PublicKey,\n  serumMarket: PublicKey,\n  serumCoinVaultAccount: PublicKey,\n  serumPcVaultAccount: PublicKey,\n  serumVaultSigner: PublicKey,\n  // user\n  userLpTokenAccount: PublicKey,\n  userCoinTokenAccount: PublicKey,\n  userPcTokenAccount: PublicKey,\n  userOwner: PublicKey,\n\n  amount: number,\n): TransactionInstruction {\n  const dataLayout = struct([u8('instruction'), nu64('amount')]);\n\n  const keys = [\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    { pubkey: ammId, isSigner: false, isWritable: true },\n    { pubkey: ammAuthority, isSigner: false, isWritable: false },\n    { pubkey: ammOpenOrders, isSigner: false, isWritable: true },\n    { pubkey: ammQuantities, isSigner: false, isWritable: true },\n    { pubkey: lpMintAddress, isSigner: false, isWritable: true },\n    { pubkey: poolCoinTokenAccount, isSigner: false, isWritable: true },\n    { pubkey: poolPcTokenAccount, isSigner: false, isWritable: true },\n    { pubkey: poolWithdrawQueue, isSigner: false, isWritable: true },\n    { pubkey: poolTempLpTokenAccount, isSigner: false, isWritable: true },\n    { pubkey: serumProgramId, isSigner: false, isWritable: false },\n    { pubkey: serumMarket, isSigner: false, isWritable: true },\n    { pubkey: serumCoinVaultAccount, isSigner: false, isWritable: true },\n    { pubkey: serumPcVaultAccount, isSigner: false, isWritable: true },\n    { pubkey: serumVaultSigner, isSigner: false, isWritable: false },\n    { pubkey: userLpTokenAccount, isSigner: false, isWritable: true },\n    { pubkey: userCoinTokenAccount, isSigner: false, isWritable: true },\n    { pubkey: userPcTokenAccount, isSigner: false, isWritable: true },\n    { pubkey: userOwner, isSigner: true, isWritable: false },\n  ];\n\n  const data = Buffer.alloc(dataLayout.span);\n  dataLayout.encode(\n    {\n      instruction: 4,\n      amount: amount,\n    },\n    data,\n  );\n\n  return new TransactionInstruction({\n    keys,\n    programId,\n    data,\n  });\n}\n\nexport function removeLiquidityInstructionV4(\n  programId: PublicKey,\n  // tokenProgramId: PublicKey,\n  // amm\n  ammId: PublicKey,\n  ammAuthority: PublicKey,\n  ammOpenOrders: PublicKey,\n  ammTargetOrders: PublicKey,\n  lpMintAddress: PublicKey,\n  poolCoinTokenAccount: PublicKey,\n  poolPcTokenAccount: PublicKey,\n  poolWithdrawQueue: PublicKey,\n  poolTempLpTokenAccount: PublicKey,\n  // serum\n  serumProgramId: PublicKey,\n  serumMarket: PublicKey,\n  serumCoinVaultAccount: PublicKey,\n  serumPcVaultAccount: PublicKey,\n  serumVaultSigner: PublicKey,\n  // user\n  userLpTokenAccount: PublicKey,\n  userCoinTokenAccount: PublicKey,\n  userPcTokenAccount: PublicKey,\n  userOwner: PublicKey,\n\n  poolInfo: LiquidityPoolInfo,\n\n  amount: number,\n): TransactionInstruction {\n  const dataLayout = struct([u8('instruction'), nu64('amount')]);\n\n  const keys = [\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    { pubkey: ammId, isSigner: false, isWritable: true },\n    { pubkey: ammAuthority, isSigner: false, isWritable: false },\n    { pubkey: ammOpenOrders, isSigner: false, isWritable: true },\n    { pubkey: ammTargetOrders, isSigner: false, isWritable: true },\n    { pubkey: lpMintAddress, isSigner: false, isWritable: true },\n    { pubkey: poolCoinTokenAccount, isSigner: false, isWritable: true },\n    { pubkey: poolPcTokenAccount, isSigner: false, isWritable: true },\n    { pubkey: poolWithdrawQueue, isSigner: false, isWritable: true },\n    { pubkey: poolTempLpTokenAccount, isSigner: false, isWritable: true },\n    { pubkey: serumProgramId, isSigner: false, isWritable: false },\n    { pubkey: serumMarket, isSigner: false, isWritable: true },\n    { pubkey: serumCoinVaultAccount, isSigner: false, isWritable: true },\n    { pubkey: serumPcVaultAccount, isSigner: false, isWritable: true },\n    { pubkey: serumVaultSigner, isSigner: false, isWritable: false },\n    { pubkey: userLpTokenAccount, isSigner: false, isWritable: true },\n    { pubkey: userCoinTokenAccount, isSigner: false, isWritable: true },\n    { pubkey: userPcTokenAccount, isSigner: false, isWritable: true },\n    { pubkey: userOwner, isSigner: true, isWritable: false },\n  ];\n\n  if (poolInfo.serumEventQueue) {\n    keys.push({\n      pubkey: new PublicKey(poolInfo.serumEventQueue),\n      isSigner: false,\n      isWritable: true,\n    });\n  }\n  if (poolInfo.serumBids) {\n    keys.push({\n      pubkey: new PublicKey(poolInfo.serumBids),\n      isSigner: false,\n      isWritable: true,\n    });\n  }\n  if (poolInfo.serumAsks) {\n    keys.push({\n      pubkey: new PublicKey(poolInfo.serumAsks),\n      isSigner: false,\n      isWritable: true,\n    });\n  }\n\n  const data = Buffer.alloc(dataLayout.span);\n  dataLayout.encode(\n    {\n      instruction: 4,\n      amount: amount,\n    },\n    data,\n  );\n\n  return new TransactionInstruction({\n    keys,\n    programId,\n    data,\n  });\n}\n\nexport const AMM_INFO_LAYOUT = struct([\n  u64('status'),\n  u64('nonce'),\n  u64('orderNum'),\n  u64('depth'),\n  u64('coinDecimals'),\n  u64('pcDecimals'),\n  u64('state'),\n  u64('resetFlag'),\n  u64('fee'),\n  u64('minSize'),\n  u64('volMaxCutRatio'),\n  u64('pnlRatio'),\n  u64('amountWaveRatio'),\n  u64('coinLotSize'),\n  u64('pcLotSize'),\n  u64('minPriceMultiplier'),\n  u64('maxPriceMultiplier'),\n  u64('needTakePnlCoin'),\n  u64('needTakePnlPc'),\n  u64('totalPnlX'),\n  u64('totalPnlY'),\n  u64('systemDecimalsValue'),\n  publicKey('poolCoinTokenAccount'),\n  publicKey('poolPcTokenAccount'),\n  publicKey('coinMintAddress'),\n  publicKey('pcMintAddress'),\n  publicKey('lpMintAddress'),\n  publicKey('ammOpenOrders'),\n  publicKey('serumMarket'),\n  publicKey('serumProgramId'),\n  publicKey('ammTargetOrders'),\n  publicKey('ammQuantities'),\n  publicKey('poolWithdrawQueue'),\n  publicKey('poolTempLpTokenAccount'),\n  publicKey('ammOwner'),\n  publicKey('pnlOwner'),\n]);\n\nexport const AMM_INFO_LAYOUT_V3 = struct([\n  u64('status'),\n  u64('nonce'),\n  u64('orderNum'),\n  u64('depth'),\n  u64('coinDecimals'),\n  u64('pcDecimals'),\n  u64('state'),\n  u64('resetFlag'),\n  u64('fee'),\n  u64('min_separate'),\n  u64('minSize'),\n  u64('volMaxCutRatio'),\n  u64('pnlRatio'),\n  u64('amountWaveRatio'),\n  u64('coinLotSize'),\n  u64('pcLotSize'),\n  u64('minPriceMultiplier'),\n  u64('maxPriceMultiplier'),\n  u64('needTakePnlCoin'),\n  u64('needTakePnlPc'),\n  u64('totalPnlX'),\n  u64('totalPnlY'),\n  u64('poolTotalDepositPc'),\n  u64('poolTotalDepositCoin'),\n  u64('systemDecimalsValue'),\n  publicKey('poolCoinTokenAccount'),\n  publicKey('poolPcTokenAccount'),\n  publicKey('coinMintAddress'),\n  publicKey('pcMintAddress'),\n  publicKey('lpMintAddress'),\n  publicKey('ammOpenOrders'),\n  publicKey('serumMarket'),\n  publicKey('serumProgramId'),\n  publicKey('ammTargetOrders'),\n  publicKey('ammQuantities'),\n  publicKey('poolWithdrawQueue'),\n  publicKey('poolTempLpTokenAccount'),\n  publicKey('ammOwner'),\n  publicKey('pnlOwner'),\n  publicKey('srmTokenAccount'),\n]);\n\nexport const AMM_INFO_LAYOUT_V4 = struct([\n  u64('status'),\n  u64('nonce'),\n  u64('orderNum'),\n  u64('depth'),\n  u64('coinDecimals'),\n  u64('pcDecimals'),\n  u64('state'),\n  u64('resetFlag'),\n  u64('minSize'),\n  u64('volMaxCutRatio'),\n  u64('amountWaveRatio'),\n  u64('coinLotSize'),\n  u64('pcLotSize'),\n  u64('minPriceMultiplier'),\n  u64('maxPriceMultiplier'),\n  u64('systemDecimalsValue'),\n  // Fees\n  u64('minSeparateNumerator'),\n  u64('minSeparateDenominator'),\n  u64('tradeFeeNumerator'),\n  u64('tradeFeeDenominator'),\n  u64('pnlNumerator'),\n  u64('pnlDenominator'),\n  u64('swapFeeNumerator'),\n  u64('swapFeeDenominator'),\n  // OutPutData\n  u64('needTakePnlCoin'),\n  u64('needTakePnlPc'),\n  u64('totalPnlPc'),\n  u64('totalPnlCoin'),\n\n  u64('poolOpenTime'),\n  u64('punishPcAmount'),\n  u64('punishCoinAmount'),\n  u64('orderbookToInitTime'),\n\n  u128('swapCoinInAmount'),\n  u128('swapPcOutAmount'),\n  u64('swapCoin2PcFee'),\n  u128('swapPcInAmount'),\n  u128('swapCoinOutAmount'),\n  u64('swapPc2CoinFee'),\n\n  publicKey('poolCoinTokenAccount'),\n  publicKey('poolPcTokenAccount'),\n  publicKey('coinMintAddress'),\n  publicKey('pcMintAddress'),\n  publicKey('lpMintAddress'),\n  publicKey('ammOpenOrders'),\n  publicKey('serumMarket'),\n  publicKey('serumProgramId'),\n  publicKey('ammTargetOrders'),\n  publicKey('poolWithdrawQueue'),\n  publicKey('poolTempLpTokenAccount'),\n  publicKey('ammOwner'),\n  publicKey('pnlOwner'),\n]);\n\nexport const AMM_INFO_LAYOUT_STABLE = struct([\n  u64('status'),\n  publicKey('own_address'),\n  u64('nonce'),\n  u64('orderNum'),\n  u64('depth'),\n  u64('coinDecimals'),\n  u64('pcDecimals'),\n  u64('state'),\n  u64('resetFlag'),\n  u64('minSize'),\n  u64('volMaxCutRatio'),\n  u64('amountWaveRatio'),\n  u64('coinLotSize'),\n  u64('pcLotSize'),\n  u64('minPriceMultiplier'),\n  u64('maxPriceMultiplier'),\n  u64('systemDecimalsValue'),\n\n  u64('ammMaxPrice'),\n  u64('ammMiddlePrice'),\n  u64('ammPriceMultiplier'),\n\n  // Fees\n  u64('minSeparateNumerator'),\n  u64('minSeparateDenominator'),\n  u64('tradeFeeNumerator'),\n  u64('tradeFeeDenominator'),\n  u64('pnlNumerator'),\n  u64('pnlDenominator'),\n  u64('swapFeeNumerator'),\n  u64('swapFeeDenominator'),\n  // OutPutData\n  u64('needTakePnlCoin'),\n  u64('needTakePnlPc'),\n  u64('totalPnlPc'),\n  u64('totalPnlCoin'),\n  u128('poolTotalDepositPc'),\n  u128('poolTotalDepositCoin'),\n  u128('swapCoinInAmount'),\n  u128('swapPcOutAmount'),\n  u128('swapPcInAmount'),\n  u128('swapCoinOutAmount'),\n  u64('swapPcFee'),\n  u64('swapCoinFee'),\n\n  publicKey('poolCoinTokenAccount'),\n  publicKey('poolPcTokenAccount'),\n  publicKey('coinMintAddress'),\n  publicKey('pcMintAddress'),\n  publicKey('lpMintAddress'),\n  publicKey('ammOpenOrders'),\n  publicKey('serumMarket'),\n  publicKey('serumProgramId'),\n  publicKey('ammTargetOrders'),\n  publicKey('poolWithdrawQueue'),\n  publicKey('poolTempLpTokenAccount'),\n  publicKey('ammOwner'),\n  publicKey('pnlOwner'),\n\n  u128('currentK'),\n  u128('padding1'),\n  publicKey('padding2'),\n]);\n\nexport async function getLpMintInfo(\n  conn: any,\n  mintAddress: string,\n  coin: any,\n  pc: any,\n): Promise<TokenInfo> {\n  let lpInfo = Object.values(LP_TOKENS).find(\n    (item) => item.mintAddress === mintAddress,\n  );\n  if (!lpInfo) {\n    const mintAll = await getMultipleAccounts(\n      conn,\n      [new PublicKey(mintAddress)],\n      commitment,\n    );\n    if (mintAll !== null) {\n      const data = Buffer.from(mintAll[0]?.account.data ?? '');\n      const mintLayoutData = MINT_LAYOUT.decode(data);\n      lpInfo = {\n        symbol: 'unknown',\n        name: 'unknown',\n        coin,\n        pc,\n        mintAddress: mintAddress,\n        decimals: mintLayoutData.decimals,\n      };\n    }\n  }\n  return lpInfo;\n}\n\nexport async function getLpMintListDecimals(\n  conn: any,\n  mintAddressInfos: string[],\n): Promise<{ [name: string]: number }> {\n  const reLpInfoDict: { [name: string]: number } = {};\n  const mintList = [] as PublicKey[];\n  mintAddressInfos.forEach((item) => {\n    let lpInfo = Object.values(LP_TOKENS).find(\n      (itemLpToken) => itemLpToken.mintAddress === item,\n    );\n    if (!lpInfo) {\n      mintList.push(new PublicKey(item));\n      lpInfo = {\n        decimals: null,\n      };\n    }\n    reLpInfoDict[item] = lpInfo.decimals;\n  });\n\n  const mintAll = await getMultipleAccounts(conn, mintList, commitment);\n  for (let mintIndex = 0; mintIndex < mintAll.length; mintIndex += 1) {\n    const itemMint = mintAll[mintIndex];\n    if (itemMint) {\n      const mintLayoutData = MINT_LAYOUT.decode(\n        Buffer.from(itemMint.account.data),\n      );\n      reLpInfoDict[mintList[mintIndex].toString()] = mintLayoutData.decimals;\n    }\n  }\n  const reInfo: { [name: string]: number } = {};\n  for (const key of Object.keys(reLpInfoDict)) {\n    if (reLpInfoDict[key] !== null) {\n      reInfo[key] = reLpInfoDict[key];\n    }\n  }\n  return reInfo;\n}\n\nexport function getLiquidityInfoSimilar(\n  ammIdOrMarket: string | undefined,\n  from: string | undefined,\n  to: string | undefined,\n) {\n  // const fromCoin = from === NATIVE_SOL.mintAddress ? TOKENS.WSOL.mintAddress : from\n  // const toCoin = to === NATIVE_SOL.mintAddress ? TOKENS.WSOL.mintAddress : to\n  const fromCoin =\n    from === TOKENS.WSOL.mintAddress ? NATIVE_SOL.mintAddress : from;\n  const toCoin = to === TOKENS.WSOL.mintAddress ? NATIVE_SOL.mintAddress : to;\n  const knownLiquidity = LIQUIDITY_POOLS.find((item) => {\n    if (fromCoin !== undefined && toCoin != undefined && fromCoin === toCoin) {\n      return false;\n    }\n    if (\n      ammIdOrMarket !== undefined &&\n      !(item.ammId === ammIdOrMarket || item.serumMarket === ammIdOrMarket)\n    ) {\n      return false;\n    }\n    if (\n      fromCoin &&\n      item.pc.mintAddress !== fromCoin &&\n      item.coin.mintAddress !== fromCoin\n    ) {\n      return false;\n    }\n    if (\n      toCoin &&\n      item.pc.mintAddress !== toCoin &&\n      item.coin.mintAddress !== toCoin\n    ) {\n      return false;\n    }\n    if (ammIdOrMarket || (fromCoin && toCoin)) {\n      return true;\n    }\n    return false;\n  });\n  return knownLiquidity;\n}\n\nexport function getLiquidityInfo(from: string, to: string) {\n  const fromCoin =\n    from === TOKENS.WSOL.mintAddress ? NATIVE_SOL.mintAddress : from;\n  const toCoin = to === TOKENS.WSOL.mintAddress ? NATIVE_SOL.mintAddress : to;\n  return LIQUIDITY_POOLS.filter(\n    (item) =>\n      item.version === 4 &&\n      ((item.coin.mintAddress === fromCoin && item.pc.mintAddress === toCoin) ||\n        (item.coin.mintAddress === toCoin && item.pc.mintAddress === fromCoin)),\n  );\n}\n\nexport function getQueryVariable(variable: string) {\n  var query = window.location.search.substring(1);\n  var vars = query.split('&');\n  for (var i = 0; i < vars.length; i++) {\n    var pair = vars[i].split('=');\n    if (pair[0] == variable) {\n      return pair[1];\n    }\n  }\n  return undefined;\n}\n"],"sourceRoot":""}